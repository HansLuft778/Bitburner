{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":12,\"max\":12},\"skills\":{\"hacking\":645,\"strength\":26,\"defense\":25,\"dexterity\":29,\"agility\":26,\"charisma\":2,\"intelligence\":0},\"exp\":{\"hacking\":235242096.2814779,\"strength\":552.6516665519163,\"defense\":513.9810100742548,\"dexterity\":513.9810100742548,\"agility\":513.9810100742548,\"charisma\":17.039081593240887,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.3530434391184123,\"hacking_speed\":1.2563184621675003,\"hacking_money\":1.603792985968021,\"hacking_grow\":1.115682077195145,\"hacking\":1.5493626618975536,\"hacking_exp\":2.385866597645467,\"strength\":1.115682077195145,\"strength_exp\":1.4113378276518584,\"defense\":1.115682077195145,\"defense_exp\":1.4113378276518584,\"dexterity\":1.2886127991603926,\"dexterity_exp\":1.4113378276518584,\"agility\":1.1714661810549023,\"agility_exp\":1.4113378276518584,\"charisma\":1.115682077195145,\"charisma_exp\":1.4113378276518584,\"hacknet_node_money\":1.115682077195145,\"hacknet_node_purchase_cost\":0.896312686597984,\"hacknet_node_ram_cost\":0.896312686597984,\"hacknet_node_core_cost\":0.896312686597984,\"hacknet_node_level_cost\":0.896312686597984,\"company_rep\":1.115682077195145,\"faction_rep\":1.115682077195145,\"work_money\":1.115682077195145,\"crime_success\":1.115682077195145,\"crime_money\":1.115682077195145,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":11,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"DataJack\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":12,\"name\":\"NeuroFlux Governor\"},{\"level\":13,\"name\":\"NeuroFlux Governor\"},{\"level\":14,\"name\":\"NeuroFlux Governor\"},{\"level\":15,\"name\":\"NeuroFlux Governor\"},{\"level\":16,\"name\":\"NeuroFlux Governor\"},{\"level\":17,\"name\":\"NeuroFlux Governor\"},{\"level\":18,\"name\":\"NeuroFlux Governor\"},{\"level\":19,\"name\":\"NeuroFlux Governor\"},{\"level\":20,\"name\":\"NeuroFlux Governor\"},{\"level\":21,\"name\":\"NeuroFlux Governor\"},{\"level\":22,\"name\":\"NeuroFlux Governor\"},{\"level\":23,\"name\":\"NeuroFlux Governor\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"BitRunners\",\"The Black Hand\",\"NiteSec\",\"Volhaven\",\"Tian Di Hui\",\"CyberSec\"],\"factionInvitations\":[],\"factionRumors\":{\"ctor\":\"JSONSet\",\"data\":[\"Church of the Machine God\",\"Slum Snakes\"]},\"hacknetNodes\":[],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{\"Alpha Enterprises\":\"Software Consultant\"},\"karma\":-527.3299999999902,\"numPeopleKilled\":0,\"location\":\"Alpha Enterprises\",\"money\":4057581105569.361,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-3288,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":9612367789627.623,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-31000000000,\"total\":4057580105569.361,\"work\":10095.360843708015,\"servers\":-570139443601.24,\"other\":-5313700000,\"augmentations\":-4948334547264.416}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-3288,\"codingcontract\":0,\"corporation\":0,\"crime\":165053000,\"gang\":0,\"hacking\":10053126760567.271,\"hacknet\":13635055.799451966,\"hacknet_expenses\":-128154.50934570104,\"hospitalization\":-5595000,\"infiltration\":0,\"sleeves\":0,\"stock\":-31200000000,\"total\":4091516254895.8765,\"work\":10095.360843708015,\"servers\":-624548204277.292,\"other\":-10662100000,\"augmentations\":-5295373173102.816}},\"playtimeSinceLastAug\":70505200,\"playtimeSinceLastBitnode\":402170800,\"lastAugReset\":1709125056829,\"lastNodeReset\":-1,\"purchasedServers\":[\"grow-2\",\"grow-3\",\"hack-3\",\"grow-5\",\"grow-6\",\"grow-7\",\"weak-7\",\"hack-8\",\"grow-8\",\"weak-8\",\"hack-9\",\"grow-9\",\"weak-9\",\"hack-10\",\"grow-10\",\"weak-10\",\"hack-11\",\"grow-11\",\"weak-11\",\"hack-12\",\"grow-12\",\"weak-12\",\"hack-13\",\"aws-1\",\"aws-0\"],\"scriptProdSinceLastAug\":17564995249614.314,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1708793459067},{\"ID\":\"FROZE\",\"unlockedOn\":1708804573260},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1708819127725},{\"ID\":\"TOR\",\"unlockedOn\":1708819187737},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1708819727725},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1708823028666},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1708823028668},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1708823328667},{\"ID\":\"NITESEC\",\"unlockedOn\":1708889793992},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1708898400757},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1708942188632},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1708946531579},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1708946951570},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1708947071581},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1708979204993},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1709031428692},{\"ID\":\"TRAVEL\",\"unlockedOn\":1709139381830},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1709150990586},{\"ID\":\"4S\",\"unlockedOn\":1709151830586},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1709154050587}],\"terminalCommandHistory\":[\"run serverStats.js the-hub \",\"run bestServer.js \",\"run hackingDeamon.js \",\"lss\",\"ls\",\"cat timelog.txt \",\"connect aws-0 \",\"free\",\"home\",\"run sm.js -u aws-0 150\",\"run sm.js -u aws-0 150T\",\"run sm.js -u aws-0 300T\",\"run hackingDeamon.js \",\"run serverStats.js the-hub \",\"run bestServer.js \",\"run sm.js -u aws-0 500\",\"run sm.js -u aws-0 500T\",\"run sm.js -u aws-0 600T\",\"run hackingDeamon.js \",\"connect aws-0 \",\"free\",\"home\",\"run hackingDeamon.js \",\"run serverStats.js the-hub \",\"run bestServer.js \",\"cat timelog.txt \",\"run hackingDeamon.js \",\"run serverStats.js the-hub \",\"run bestServer.js \",\"cat timelog.txt \",\"run hackingDeamon.js \",\"run serverStats.js the-hub \",\"run bestServer.js \",\"scan\",\"run sm.js -r grow-13 aws-1\",\"scan\",\"connect aws-1\",\"free\",\"top\",\"home\",\"run sm.js -u aws-1 200T\",\"connect aws-1\",\"free\",\"home\",\"cat timelog.txt \",\"run hackingDeamon.js \",\"run sm.js -u aws-1 500T\",\"free\",\"run serverStats.js rho-construction \",\"cat timelog.txt \"],\"lastUpdate\":1709195564138,\"lastSave\":1709195505544,\"totalPlaytime\":402170800,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":1629,\"factionWorkType\":\"hacking\",\"factionName\":\"The Black Hand\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"1a1ebb4b422ad0\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":3,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"87.8.7.3\",\"isConnectedTo\":true,\"maxRam\":32768,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"AutoLink.exe\",\"DeepscanV1.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\",\"DeepscanV2.exe\",\"ServerProfiler.exe\",\"Formulas.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"parallel/growingAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getBestHostByRam } from \\\"/bestServer.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nimport { Colors } from \\\"/lib.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  growServer(ns, \\\"foodnstuff\\\", 0);\\n}\\nexport function growServer(ns, target, batchId, delay = 0) {\\n  const serverMaxMoney = ns.getServerMaxMoney(target);\\n  const serverCurrentMoney = ns.getServerMoneyAvailable(target);\\n  let moneyMultiplier = serverMaxMoney / serverCurrentMoney;\\n  if (isNaN(moneyMultiplier) || moneyMultiplier == Infinity)\\n    moneyMultiplier = 1;\\n  const totalGrowThreadsNeeded = Math.ceil(ns.growthAnalyze(target, moneyMultiplier));\\n  ns.print(\\\"Actual grow threads needed: \\\" + totalGrowThreadsNeeded);\\n  if (totalGrowThreadsNeeded < 1) {\\n    ns.print(\\\"No grow threads needed, skipping growth process\\\");\\n    return false;\\n  }\\n  const allHosts = getBestHostByRam(ns);\\n  const growingScriptRam = 1.75;\\n  for (let i = 0; i < allHosts.length; i++) {\\n    const host = allHosts[i];\\n    const maxThreadsOnHost = Math.floor(host.availableRam / growingScriptRam);\\n    if (maxThreadsOnHost >= totalGrowThreadsNeeded) {\\n      ns.exec(\\\"grow.js\\\", host.name, totalGrowThreadsNeeded, target, delay);\\n      return true;\\n    }\\n  }\\n  ns.print(Colors.YELLOW + \\\"No available host to grow \\\" + target + \\\". Attempting to upgrade/buy server...\\\");\\n  const neededGrowRam = totalGrowThreadsNeeded * growingScriptRam;\\n  const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, \\\"grow\\\", batchId);\\n  if (server === \\\"\\\") {\\n    ns.tprint(\\\"Error! Could not buy server to grow \\\" + target);\\n    throw new Error(\\\"Error! Could not buy server to grow \\\" + target);\\n  }\\n  ns.exec(\\\"grow.js\\\", server, totalGrowThreadsNeeded, target, delay);\\n  return true;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3dpbmdBbGdvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEJlc3RIb3N0QnlSYW0gfSBmcm9tIFwiQC9iZXN0U2VydmVyXCI7XG5pbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmltcG9ydCB7IFNlcnZlck1hbmFnZXIgfSBmcm9tIFwiLi9TZXJ2ZXJNYW5hZ2VyXCI7XG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tIFwiQC9saWJcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XG4gICAgbnMudGFpbCgpO1xuICAgIGdyb3dTZXJ2ZXIobnMsIFwiZm9vZG5zdHVmZlwiLCAwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdyb3dTZXJ2ZXIobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgYmF0Y2hJZDogbnVtYmVyLCBkZWxheSA9IDApOiBib29sZWFuIHtcbiAgICBjb25zdCBzZXJ2ZXJNYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XG4gICAgY29uc3Qgc2VydmVyQ3VycmVudE1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KTtcbiAgICBsZXQgbW9uZXlNdWx0aXBsaWVyID0gc2VydmVyTWF4TW9uZXkgLyBzZXJ2ZXJDdXJyZW50TW9uZXk7XG4gICAgaWYgKGlzTmFOKG1vbmV5TXVsdGlwbGllcikgfHwgbW9uZXlNdWx0aXBsaWVyID09IEluZmluaXR5KSBtb25leU11bHRpcGxpZXIgPSAxO1xuICAgIGNvbnN0IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgPSBNYXRoLmNlaWwobnMuZ3Jvd3RoQW5hbHl6ZSh0YXJnZXQsIG1vbmV5TXVsdGlwbGllcikpO1xuXG4gICAgbnMucHJpbnQoXCJBY3R1YWwgZ3JvdyB0aHJlYWRzIG5lZWRlZDogXCIgKyB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkKTtcblxuICAgIGlmICh0b3RhbEdyb3dUaHJlYWRzTmVlZGVkIDwgMSkge1xuICAgICAgICBucy5wcmludChcIk5vIGdyb3cgdGhyZWFkcyBuZWVkZWQsIHNraXBwaW5nIGdyb3d0aCBwcm9jZXNzXCIpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gZXhlYyBncm93LmpzIHdpdGggbnVtIG9mIHRocmVhZHNcbiAgICBjb25zdCBhbGxIb3N0cyA9IGdldEJlc3RIb3N0QnlSYW0obnMpO1xuICAgIGNvbnN0IGdyb3dpbmdTY3JpcHRSYW0gPSAxLjc1O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxIb3N0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBob3N0ID0gYWxsSG9zdHNbaV07XG5cbiAgICAgICAgY29uc3QgbWF4VGhyZWFkc09uSG9zdCA9IE1hdGguZmxvb3IoaG9zdC5hdmFpbGFibGVSYW0gLyBncm93aW5nU2NyaXB0UmFtKTtcblxuICAgICAgICBpZiAobWF4VGhyZWFkc09uSG9zdCA+PSB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkKSB7XG4gICAgICAgICAgICBucy5leGVjKFwiZ3Jvdy5qc1wiLCBob3N0Lm5hbWUsIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQsIHRhcmdldCwgZGVsYXkpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBucy5wcmludChDb2xvcnMuWUVMTE9XICsgXCJObyBhdmFpbGFibGUgaG9zdCB0byBncm93IFwiICsgdGFyZ2V0ICsgXCIuIEF0dGVtcHRpbmcgdG8gdXBncmFkZS9idXkgc2VydmVyLi4uXCIpO1xuXG4gICAgY29uc3QgbmVlZGVkR3Jvd1JhbSA9IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgKiBncm93aW5nU2NyaXB0UmFtO1xuICAgIGNvbnN0IHNlcnZlciA9IFNlcnZlck1hbmFnZXIuYnV5T3JVcGdyYWRlU2VydmVyKG5zLCBuZWVkZWRHcm93UmFtLCBcImdyb3dcIiwgYmF0Y2hJZCk7XG5cbiAgICBpZiAoc2VydmVyID09PSBcIlwiKSB7XG4gICAgICAgIG5zLnRwcmludChcIkVycm9yISBDb3VsZCBub3QgYnV5IHNlcnZlciB0byBncm93IFwiICsgdGFyZ2V0KTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIGdyb3cgXCIgKyB0YXJnZXQpO1xuICAgIH1cblxuICAgIG5zLmV4ZWMoXCJncm93LmpzXCIsIHNlcnZlciwgdG90YWxHcm93VGhyZWFkc05lZWRlZCwgdGFyZ2V0LCBkZWxheSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyx3QkFBd0I7QUFFakMsU0FBUyxxQkFBcUI7QUFDOUIsU0FBUyxjQUFjO0FBRXZCLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsYUFBVyxJQUFJLGNBQWMsQ0FBQztBQUNsQztBQUVPLGdCQUFTLFdBQVcsSUFBUSxRQUFnQixTQUFpQixRQUFRLEdBQVk7QUFDcEYsUUFBTSxpQkFBaUIsR0FBRyxrQkFBa0IsTUFBTTtBQUNsRCxRQUFNLHFCQUFxQixHQUFHLHdCQUF3QixNQUFNO0FBQzVELE1BQUksa0JBQWtCLGlCQUFpQjtBQUN2QyxNQUFJLE1BQU0sZUFBZSxLQUFLLG1CQUFtQjtBQUFVLHNCQUFrQjtBQUM3RSxRQUFNLHlCQUF5QixLQUFLLEtBQUssR0FBRyxjQUFjLFFBQVEsZUFBZSxDQUFDO0FBRWxGLEtBQUcsTUFBTSxpQ0FBaUMsc0JBQXNCO0FBRWhFLE1BQUkseUJBQXlCLEdBQUc7QUFDNUIsT0FBRyxNQUFNLGlEQUFpRDtBQUMxRCxXQUFPO0FBQUEsRUFDWDtBQUdBLFFBQU0sV0FBVyxpQkFBaUIsRUFBRTtBQUNwQyxRQUFNLG1CQUFtQjtBQUV6QixXQUFTLElBQUksR0FBRyxJQUFJLFNBQVMsUUFBUSxLQUFLO0FBQ3RDLFVBQU0sT0FBTyxTQUFTLENBQUM7QUFFdkIsVUFBTSxtQkFBbUIsS0FBSyxNQUFNLEtBQUssZUFBZSxnQkFBZ0I7QUFFeEUsUUFBSSxvQkFBb0Isd0JBQXdCO0FBQzVDLFNBQUcsS0FBSyxXQUFXLEtBQUssTUFBTSx3QkFBd0IsUUFBUSxLQUFLO0FBQ25FLGFBQU87QUFBQSxJQUNYO0FBQUEsRUFDSjtBQUVBLEtBQUcsTUFBTSxPQUFPLFNBQVMsK0JBQStCLFNBQVMsdUNBQXVDO0FBRXhHLFFBQU0sZ0JBQWdCLHlCQUF5QjtBQUMvQyxRQUFNLFNBQVMsY0FBYyxtQkFBbUIsSUFBSSxlQUFlLFFBQVEsT0FBTztBQUVsRixNQUFJLFdBQVcsSUFBSTtBQUNmLE9BQUcsT0FBTyx5Q0FBeUMsTUFBTTtBQUN6RCxVQUFNLElBQUksTUFBTSx5Q0FBeUMsTUFBTTtBQUFBLEVBQ25FO0FBRUEsS0FBRyxLQUFLLFdBQVcsUUFBUSx3QkFBd0IsUUFBUSxLQUFLO0FBRWhFLFNBQU87QUFDWDsiLCJuYW1lcyI6W119\",\"filename\":\"parallel/growingAlgo.js\",\"server\":\"home\"}}],[\"parallel/hackingAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getBestHostByRam } from \\\"/bestServer.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nimport { Colors } from \\\"/lib.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  hackServer(ns, \\\"silver-helix\\\", 0.8, 0);\\n}\\nexport function hackServer(ns, target, threshold, batchId, delay = 0) {\\n  const totalHackThreadsNeeded = Math.ceil(threshold / ns.hackAnalyze(target));\\n  ns.print(\\\"actual hack threads needed: \\\" + totalHackThreadsNeeded);\\n  const allHosts = getBestHostByRam(ns);\\n  const hackingScriptRam = 1.7;\\n  for (let i = 0; i < allHosts.length; i++) {\\n    const host = allHosts[i];\\n    const maxThreadsOnHost = Math.floor(host.availableRam / hackingScriptRam);\\n    if (maxThreadsOnHost >= totalHackThreadsNeeded) {\\n      ns.exec(\\\"hack.js\\\", host.name, totalHackThreadsNeeded, target, delay);\\n      return true;\\n    }\\n  }\\n  ns.print(Colors.YELLOW + \\\"No available host to grow \\\" + target + \\\". Buying server...\\\");\\n  const neededGrowRam = totalHackThreadsNeeded * hackingScriptRam;\\n  const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, \\\"hack\\\", batchId);\\n  if (server === \\\"\\\") {\\n    ns.tprint(\\\"Error! Could not buy server to hack \\\" + target);\\n    throw new Error(\\\"Error! Could not buy server to hack \\\" + target);\\n  }\\n  ns.exec(\\\"hack.js\\\", server, totalHackThreadsNeeded, target, delay);\\n  return true;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2tpbmdBbGdvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEJlc3RIb3N0QnlSYW0gfSBmcm9tIFwiQC9iZXN0U2VydmVyXCI7XG5pbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmltcG9ydCB7IFNlcnZlck1hbmFnZXIgfSBmcm9tIFwiLi9TZXJ2ZXJNYW5hZ2VyXCI7XG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tIFwiQC9saWJcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XG4gICAgbnMudGFpbCgpO1xuICAgIGhhY2tTZXJ2ZXIobnMsIFwic2lsdmVyLWhlbGl4XCIsIDAuOCwgMCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYWNrU2VydmVyKG5zOiBOUywgdGFyZ2V0OiBzdHJpbmcsIHRocmVzaG9sZDogbnVtYmVyLCBiYXRjaElkOiBudW1iZXIsIGRlbGF5ID0gMCkge1xuICAgIGNvbnN0IHRvdGFsSGFja1RocmVhZHNOZWVkZWQgPSBNYXRoLmNlaWwodGhyZXNob2xkIC8gbnMuaGFja0FuYWx5emUodGFyZ2V0KSk7XG4gICAgbnMucHJpbnQoXCJhY3R1YWwgaGFjayB0aHJlYWRzIG5lZWRlZDogXCIgKyB0b3RhbEhhY2tUaHJlYWRzTmVlZGVkKTtcblxuICAgIGNvbnN0IGFsbEhvc3RzID0gZ2V0QmVzdEhvc3RCeVJhbShucyk7XG4gICAgY29uc3QgaGFja2luZ1NjcmlwdFJhbSA9IDEuNztcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xuXG4gICAgICAgIGNvbnN0IG1heFRocmVhZHNPbkhvc3QgPSBNYXRoLmZsb29yKGhvc3QuYXZhaWxhYmxlUmFtIC8gaGFja2luZ1NjcmlwdFJhbSk7XG5cbiAgICAgICAgaWYgKG1heFRocmVhZHNPbkhvc3QgPj0gdG90YWxIYWNrVGhyZWFkc05lZWRlZCkge1xuICAgICAgICAgICAgbnMuZXhlYyhcImhhY2suanNcIiwgaG9zdC5uYW1lLCB0b3RhbEhhY2tUaHJlYWRzTmVlZGVkLCB0YXJnZXQsIGRlbGF5KTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbnMucHJpbnQoQ29sb3JzLllFTExPVyArIFwiTm8gYXZhaWxhYmxlIGhvc3QgdG8gZ3JvdyBcIiArIHRhcmdldCArIFwiLiBCdXlpbmcgc2VydmVyLi4uXCIpO1xuXG4gICAgY29uc3QgbmVlZGVkR3Jvd1JhbSA9IHRvdGFsSGFja1RocmVhZHNOZWVkZWQgKiBoYWNraW5nU2NyaXB0UmFtO1xuICAgIGNvbnN0IHNlcnZlciA9IFNlcnZlck1hbmFnZXIuYnV5T3JVcGdyYWRlU2VydmVyKG5zLCBuZWVkZWRHcm93UmFtLCBcImhhY2tcIiwgYmF0Y2hJZCk7XG5cbiAgICBpZiAoc2VydmVyID09PSBcIlwiKSB7XG4gICAgICAgIG5zLnRwcmludChcIkVycm9yISBDb3VsZCBub3QgYnV5IHNlcnZlciB0byBoYWNrIFwiICsgdGFyZ2V0KTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIGhhY2sgXCIgKyB0YXJnZXQpO1xuICAgIH1cblxuICAgIG5zLmV4ZWMoXCJoYWNrLmpzXCIsIHNlcnZlciwgdG90YWxIYWNrVGhyZWFkc05lZWRlZCwgdGFyZ2V0LCBkZWxheSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyx3QkFBd0I7QUFFakMsU0FBUyxxQkFBcUI7QUFDOUIsU0FBUyxjQUFjO0FBRXZCLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsYUFBVyxJQUFJLGdCQUFnQixLQUFLLENBQUM7QUFDekM7QUFFTyxnQkFBUyxXQUFXLElBQVEsUUFBZ0IsV0FBbUIsU0FBaUIsUUFBUSxHQUFHO0FBQzlGLFFBQU0seUJBQXlCLEtBQUssS0FBSyxZQUFZLEdBQUcsWUFBWSxNQUFNLENBQUM7QUFDM0UsS0FBRyxNQUFNLGlDQUFpQyxzQkFBc0I7QUFFaEUsUUFBTSxXQUFXLGlCQUFpQixFQUFFO0FBQ3BDLFFBQU0sbUJBQW1CO0FBRXpCLFdBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsVUFBTSxPQUFPLFNBQVMsQ0FBQztBQUV2QixVQUFNLG1CQUFtQixLQUFLLE1BQU0sS0FBSyxlQUFlLGdCQUFnQjtBQUV4RSxRQUFJLG9CQUFvQix3QkFBd0I7QUFDNUMsU0FBRyxLQUFLLFdBQVcsS0FBSyxNQUFNLHdCQUF3QixRQUFRLEtBQUs7QUFDbkUsYUFBTztBQUFBLElBQ1g7QUFBQSxFQUNKO0FBRUEsS0FBRyxNQUFNLE9BQU8sU0FBUywrQkFBK0IsU0FBUyxvQkFBb0I7QUFFckYsUUFBTSxnQkFBZ0IseUJBQXlCO0FBQy9DLFFBQU0sU0FBUyxjQUFjLG1CQUFtQixJQUFJLGVBQWUsUUFBUSxPQUFPO0FBRWxGLE1BQUksV0FBVyxJQUFJO0FBQ2YsT0FBRyxPQUFPLHlDQUF5QyxNQUFNO0FBQ3pELFVBQU0sSUFBSSxNQUFNLHlDQUF5QyxNQUFNO0FBQUEsRUFDbkU7QUFFQSxLQUFHLEtBQUssV0FBVyxRQUFRLHdCQUF3QixRQUFRLEtBQUs7QUFFaEUsU0FBTztBQUNYOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"parallel/hackingAlgo.js\",\"server\":\"home\"}}],[\"parallel/manager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getBestServer } from \\\"/bestServer.js\\\";\\nimport { Colors, getTimeH } from \\\"/lib.js\\\";\\nimport { printServerStats } from \\\"/serverStats.js\\\";\\nimport { WGHAlgorithms } from \\\"/parallel/WGHAlgorithms.js\\\";\\nimport { growServer } from \\\"/parallel/growingAlgo.js\\\";\\nimport { hackServer } from \\\"/parallel/hackingAlgo.js\\\";\\nimport { weakenServer } from \\\"/parallel/weakenAlgo.js\\\";\\nimport { Time } from \\\"/Time.js\\\";\\nimport { Config } from \\\"/Config/Config.js\\\";\\nconst DELAY_MARGIN_MS = Config.DELAY_MARGIN_MS;\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const target = getBestServer(ns);\\n    await parallelCycle(ns, target, 0.8);\\n  }\\n}\\nexport async function parallelCycle(ns, target, hackThreshold = 0.8, num_batches = 1) {\\n  const weakTime = ns.getWeakenTime(target);\\n  const time = Time.getInstance();\\n  if (num_batches > 1) {\\n    ns.print(Colors.CYAN + \\\"------------ MULTI BATCH MODE ------------\\\");\\n    for (let batchId = 0; batchId < num_batches; batchId++) {\\n      ns.print(Colors.CYAN + \\\"------------ BATCH \\\" + batchId + \\\" ------------\\\");\\n      const weakTime2 = ns.getWeakenTime(target);\\n      const growTime = ns.getGrowTime(target);\\n      const hackTime = ns.getHackTime(target);\\n      const hackDelay = weakTime2 - hackTime - DELAY_MARGIN_MS;\\n      WGHAlgorithms.hackServer(ns, target, hackThreshold, batchId, true, hackDelay);\\n      WGHAlgorithms.weakenServer(ns, target, 1, batchId, true);\\n      const growDelay = weakTime2 - growTime + DELAY_MARGIN_MS;\\n      WGHAlgorithms.growServer(ns, target, batchId, true, hackThreshold, growDelay);\\n      const weak2delay = 2 * DELAY_MARGIN_MS;\\n      WGHAlgorithms.weakenServer(ns, target, 2, batchId, true, weak2delay);\\n      printServerStats(ns, target, hackThreshold);\\n      ns.print(Colors.GREEN + \\\"Cycle done. Beginning new cycle..\\\" + Colors.RESET);\\n      await ns.sleep(4 * DELAY_MARGIN_MS);\\n      time.accumulateSleepTime(4 * DELAY_MARGIN_MS);\\n    }\\n    await ns.sleep(weakTime - 4 * DELAY_MARGIN_MS * num_batches + DELAY_MARGIN_MS);\\n    time.accumulateSleepTime(weakTime - 4 * DELAY_MARGIN_MS * num_batches + DELAY_MARGIN_MS);\\n  } else {\\n    ns.print(Colors.CYAN + \\\"------------ SINGLE BATCH MODE ------------\\\");\\n    const weakTime2 = ns.getWeakenTime(target);\\n    const growTime = ns.getGrowTime(target);\\n    const hackTime = ns.getHackTime(target);\\n    ns.print(\\\"Attempting to start Weak I at \\\" + getTimeH());\\n    const weak1Dispatched = weakenServer(ns, target, 1, 0);\\n    let weak2StartTime = 0;\\n    if (weak1Dispatched == true) {\\n      weak2StartTime = 2 * DELAY_MARGIN_MS;\\n      await ns.sleep(weak2StartTime);\\n    }\\n    ns.print(\\\"Attempting to start Weak II at \\\" + getTimeH());\\n    const weak2Dispatched = weakenServer(ns, target, 2, 0);\\n    let growStartTime = 0;\\n    if (weak2Dispatched == true) {\\n      growStartTime = weakTime2 + DELAY_MARGIN_MS - growTime;\\n      const growDelay = growStartTime - weak2StartTime;\\n      await ns.sleep(growDelay);\\n    }\\n    ns.print(\\\"Attempting to start Grow at \\\" + getTimeH());\\n    const growDispatched = growServer(ns, target, 0);\\n    if (weak1Dispatched == true && weak2Dispatched == false && growDispatched == false) {\\n      ns.print(\\n        Colors.YELLOW + \\\"Weak 2 was skipped. Did the last hack attempt fail?\\\\nHacking is about to start earlier than planned.\\\" + Colors.RESET\\n      );\\n      const hackStartTime = weakTime2 + DELAY_MARGIN_MS - hackTime;\\n      await ns.sleep(hackStartTime);\\n      ns.print(\\\"Attempting to start Hack at \\\" + getTimeH());\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime + DELAY_MARGIN_MS);\\n    } else if (weak1Dispatched == false && weak2Dispatched == false && growDispatched == false) {\\n      ns.print(Colors.YELLOW + \\\"Weak 1 and Weak 2 were skipped? Hacking now. \\\" + getTimeH() + Colors.RESET);\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime + DELAY_MARGIN_MS);\\n    } else if (weak1Dispatched == true && growDispatched == true && weak2Dispatched == true) {\\n      ns.print(Colors.GREEN + \\\"Hack is about to start as expected\\\" + Colors.RESET);\\n      const hackStartTime = weakTime2 + 3 * DELAY_MARGIN_MS - hackTime;\\n      const hackDelayDiff = hackStartTime - growStartTime;\\n      await ns.sleep(hackDelayDiff);\\n      ns.print(\\\"Attempting to start Hack at \\\" + getTimeH());\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime + DELAY_MARGIN_MS);\\n    } else if (weak1Dispatched == false && weak2Dispatched == true && growDispatched == true) {\\n      ns.print(\\n        Colors.YELLOW + \\\"Weak 1 was skipped. Perhaps the server is already at the min sec lvl.\\\" + Colors.RESET\\n      );\\n      const hackStartTime = weakTime2 + 2 * DELAY_MARGIN_MS - hackTime;\\n      await ns.sleep(hackStartTime - growStartTime);\\n      ns.print(\\\"Attempting to start Hack at \\\" + getTimeH());\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime + DELAY_MARGIN_MS);\\n    } else {\\n      ns.print(Colors.RED + \\\"could not start hack!\\\" + Colors.RESET);\\n      ns.print(\\n        \\\"weak1Dispatched: \\\" + weak1Dispatched + \\\" | weak2Dispatched: \\\" + weak2Dispatched + \\\" | growDispatched: \\\" + growDispatched\\n      );\\n      printServerStats(ns, target, hackThreshold);\\n      return;\\n    }\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5cbmltcG9ydCB7IGdldEJlc3RTZXJ2ZXIgfSBmcm9tIFwiLi4vYmVzdFNlcnZlci5qc1wiO1xuaW1wb3J0IHsgQ29sb3JzLCBnZXRUaW1lSCB9IGZyb20gXCIuLi9saWIuanNcIjtcbmltcG9ydCB7IHByaW50U2VydmVyU3RhdHMgfSBmcm9tIFwiLi4vc2VydmVyU3RhdHMuanNcIjtcbmltcG9ydCB7IFdHSEFsZ29yaXRobXMgfSBmcm9tIFwiLi9XR0hBbGdvcml0aG1zLmpzXCI7XG5pbXBvcnQgeyBncm93U2VydmVyIH0gZnJvbSBcIi4vZ3Jvd2luZ0FsZ28uanNcIjtcbmltcG9ydCB7IGhhY2tTZXJ2ZXIgfSBmcm9tIFwiLi9oYWNraW5nQWxnby5qc1wiO1xuaW1wb3J0IHsgd2Vha2VuU2VydmVyIH0gZnJvbSBcIi4vd2Vha2VuQWxnby5qc1wiO1xuaW1wb3J0IHsgVGltZSB9IGZyb20gXCJAL1RpbWUuanNcIjtcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gXCJAL0NvbmZpZy9Db25maWcuanNcIjtcblxuY29uc3QgREVMQVlfTUFSR0lOX01TID0gQ29uZmlnLkRFTEFZX01BUkdJTl9NUztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XG4gICAgbnMudGFpbCgpO1xuICAgIG5zLmRpc2FibGVMb2coXCJBTExcIik7XG5cbiAgICAvLyB0aW1pbmcgb3JkZXIgKGFsd2F5cyBzYW1lKTogd2Vha2VuID4gZ3JvdyA+IGhhY2tcbiAgICAvLyBmb3Igbm93LCBlYWNoIGhhcyBvd24gc2VydmVyOiAgICBhd3MtMCAgIGF3cy0gICAgYXdzLTIgICBhd3MtM1xuICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlYWsgICAgd2VhayAgICBncm93ICAgIGhhY2tcblxuICAgIC8vIHN0ZXBzOiBXR1dILVdHV0gtLi5cbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBnZXRCZXN0U2VydmVyKG5zKTtcbiAgICAgICAgYXdhaXQgcGFyYWxsZWxDeWNsZShucywgdGFyZ2V0LCAwLjgpO1xuICAgIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBhcmFsbGVsQ3ljbGUobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgaGFja1RocmVzaG9sZCA9IDAuOCwgbnVtX2JhdGNoZXMgPSAxKSB7XG4gICAgY29uc3Qgd2Vha1RpbWUgPSBucy5nZXRXZWFrZW5UaW1lKHRhcmdldCk7XG4gICAgY29uc3QgdGltZSA9IFRpbWUuZ2V0SW5zdGFuY2UoKTtcblxuICAgIGlmIChudW1fYmF0Y2hlcyA+IDEpIHtcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIi0tLS0tLS0tLS0tLSBNVUxUSSBCQVRDSCBNT0RFIC0tLS0tLS0tLS0tLVwiKTtcblxuICAgICAgICBmb3IgKGxldCBiYXRjaElkID0gMDsgYmF0Y2hJZCA8IG51bV9iYXRjaGVzOyBiYXRjaElkKyspIHtcbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCItLS0tLS0tLS0tLS0gQkFUQ0ggXCIgKyBiYXRjaElkICsgXCIgLS0tLS0tLS0tLS0tXCIpO1xuICAgICAgICAgICAgLy8gZ2V0IGV4ZWN1dGlvbiB0aW1lczpcbiAgICAgICAgICAgIGNvbnN0IHdlYWtUaW1lID0gbnMuZ2V0V2Vha2VuVGltZSh0YXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgZ3Jvd1RpbWUgPSBucy5nZXRHcm93VGltZSh0YXJnZXQpO1xuICAgICAgICAgICAgY29uc3QgaGFja1RpbWUgPSBucy5nZXRIYWNrVGltZSh0YXJnZXQpO1xuXG4gICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAgICAgLy8gaGFja2luZ1xuXG4gICAgICAgICAgICAvLyBoYWNrIG5vcm1hbFxuICAgICAgICAgICAgLy8gY29uc3QgaGFja0RlbGF5ID0gd2Vha1RpbWUgLSBoYWNrVGltZSArIDMgKiBERUxBWV9NQVJHSU5fTVM7XG4gICAgICAgICAgICBjb25zdCBoYWNrRGVsYXkgPSB3ZWFrVGltZSAtIGhhY2tUaW1lIC0gREVMQVlfTUFSR0lOX01TO1xuICAgICAgICAgICAgV0dIQWxnb3JpdGhtcy5oYWNrU2VydmVyKG5zLCB0YXJnZXQsIGhhY2tUaHJlc2hvbGQsIGJhdGNoSWQsIHRydWUsIGhhY2tEZWxheSk7XG5cbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAgICAvLyB3ZWFrIElcblxuICAgICAgICAgICAgLy8gd2Vha2VuU2VydmVyKG5zLCB0YXJnZXQsIDEsIGJhdGNoSWQsIHRydWUpO1xuICAgICAgICAgICAgV0dIQWxnb3JpdGhtcy53ZWFrZW5TZXJ2ZXIobnMsIHRhcmdldCwgMSwgYmF0Y2hJZCwgdHJ1ZSk7XG5cbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAgICAvLyBncm93XG5cbiAgICAgICAgICAgIGNvbnN0IGdyb3dEZWxheSA9IHdlYWtUaW1lIC0gZ3Jvd1RpbWUgKyBERUxBWV9NQVJHSU5fTVM7XG4gICAgICAgICAgICAvLyBncm93U2VydmVyKG5zLCB0YXJnZXQsIGJhdGNoSWQsIGdyb3dEZWxheSk7XG4gICAgICAgICAgICBXR0hBbGdvcml0aG1zLmdyb3dTZXJ2ZXIobnMsIHRhcmdldCwgYmF0Y2hJZCwgdHJ1ZSwgaGFja1RocmVzaG9sZCwgZ3Jvd0RlbGF5KTtcblxuICAgICAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgICAgIC8vIHdlYWsgSUlcblxuICAgICAgICAgICAgY29uc3Qgd2VhazJkZWxheSA9IDIgKiBERUxBWV9NQVJHSU5fTVM7XG4gICAgICAgICAgICAvLyB3ZWFrZW5TZXJ2ZXIobnMsIHRhcmdldCwgMiwgYmF0Y2hJZCwgdHJ1ZSwgd2VhazJkZWxheSk7XG4gICAgICAgICAgICBXR0hBbGdvcml0aG1zLndlYWtlblNlcnZlcihucywgdGFyZ2V0LCAyLCBiYXRjaElkLCB0cnVlLCB3ZWFrMmRlbGF5KTtcblxuICAgICAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgICAgICAgICAgcHJpbnRTZXJ2ZXJTdGF0cyhucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkKTtcblxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJDeWNsZSBkb25lLiBCZWdpbm5pbmcgbmV3IGN5Y2xlLi5cIiArIENvbG9ycy5SRVNFVCk7XG5cbiAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKDQgKiBERUxBWV9NQVJHSU5fTVMpO1xuICAgICAgICAgICAgdGltZS5hY2N1bXVsYXRlU2xlZXBUaW1lKDQgKiBERUxBWV9NQVJHSU5fTVMpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNsZWVwIHVudGlsIG5leHQgY3ljbGVcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAod2Vha1RpbWUgLSA0ICogREVMQVlfTUFSR0lOX01TICogbnVtX2JhdGNoZXMgKyBERUxBWV9NQVJHSU5fTVMpO1xuICAgICAgICB0aW1lLmFjY3VtdWxhdGVTbGVlcFRpbWUod2Vha1RpbWUgLSA0ICogREVMQVlfTUFSR0lOX01TICogbnVtX2JhdGNoZXMgKyBERUxBWV9NQVJHSU5fTVMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCItLS0tLS0tLS0tLS0gU0lOR0xFIEJBVENIIE1PREUgLS0tLS0tLS0tLS0tXCIpO1xuICAgICAgICBjb25zdCB3ZWFrVGltZSA9IG5zLmdldFdlYWtlblRpbWUodGFyZ2V0KTtcbiAgICAgICAgY29uc3QgZ3Jvd1RpbWUgPSBucy5nZXRHcm93VGltZSh0YXJnZXQpO1xuICAgICAgICBjb25zdCBoYWNrVGltZSA9IG5zLmdldEhhY2tUaW1lKHRhcmdldCk7XG4gICAgICAgIC8vIHdlYWsgSVxuICAgICAgICBucy5wcmludChcIkF0dGVtcHRpbmcgdG8gc3RhcnQgV2VhayBJIGF0IFwiICsgZ2V0VGltZUgoKSk7XG4gICAgICAgIGNvbnN0IHdlYWsxRGlzcGF0Y2hlZCA9IHdlYWtlblNlcnZlcihucywgdGFyZ2V0LCAxLCAwKTtcblxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAvLyB3ZWFrIElJIGRlbGF5XG5cbiAgICAgICAgLy8gaWYgd2VhayBJIHNraXAsIHN0YXJ0IElJIGltbWVkaWF0ZWx5XG4gICAgICAgIGxldCB3ZWFrMlN0YXJ0VGltZSA9IDA7XG4gICAgICAgIGlmICh3ZWFrMURpc3BhdGNoZWQgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgLy8gd2VhazJTdGFydFRpbWUgPSB3ZWFrVGltZSArIDIgKiBERUxBWV9NQVJHSU5fTVMgLSB3ZWFrVGltZTtcbiAgICAgICAgICAgIHdlYWsyU3RhcnRUaW1lID0gMiAqIERFTEFZX01BUkdJTl9NUztcbiAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKHdlYWsyU3RhcnRUaW1lKTtcbiAgICAgICAgfVxuICAgICAgICAvLyB3ZWFrIElJXG4gICAgICAgIG5zLnByaW50KFwiQXR0ZW1wdGluZyB0byBzdGFydCBXZWFrIElJIGF0IFwiICsgZ2V0VGltZUgoKSk7XG4gICAgICAgIGNvbnN0IHdlYWsyRGlzcGF0Y2hlZCA9IHdlYWtlblNlcnZlcihucywgdGFyZ2V0LCAyLCAwKTtcblxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICAvLyBncm93IGRlbGF5XG5cbiAgICAgICAgbGV0IGdyb3dTdGFydFRpbWUgPSAwO1xuICAgICAgICBpZiAod2VhazJEaXNwYXRjaGVkID09IHRydWUpIHtcbiAgICAgICAgICAgIGdyb3dTdGFydFRpbWUgPSB3ZWFrVGltZSArIERFTEFZX01BUkdJTl9NUyAtIGdyb3dUaW1lO1xuICAgICAgICAgICAgY29uc3QgZ3Jvd0RlbGF5ID0gZ3Jvd1N0YXJ0VGltZSAtIHdlYWsyU3RhcnRUaW1lO1xuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoZ3Jvd0RlbGF5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGdyb3dcbiAgICAgICAgbnMucHJpbnQoXCJBdHRlbXB0aW5nIHRvIHN0YXJ0IEdyb3cgYXQgXCIgKyBnZXRUaW1lSCgpKTtcbiAgICAgICAgY29uc3QgZ3Jvd0Rpc3BhdGNoZWQgPSBncm93U2VydmVyKG5zLCB0YXJnZXQsIDApO1xuXG4gICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIC8vIGhhY2tpbmdcblxuICAgICAgICAvLyBoYWNraW5nIHN0YXJ0IGxvZ2ljLCBmb3IgZnVydGhlciB0aW1lIG9wdGltaXphdGlvbnNcbiAgICAgICAgLy8gbm90ZTogd2hlbiB3ZWFrMiBmYWlscywgdGhlIGdyb3cgbXVzdCBhbHNvIGZhaWwgKGFuZCB2aWNlIHZlcnNhOiB3aGVuIGdyb3cgZmFpbHMsIHdlYWsyIHNob3VsZCBub3QgaGF2ZSBzdGFydGVkKVxuICAgICAgICBpZiAod2VhazFEaXNwYXRjaGVkID09IHRydWUgJiYgd2VhazJEaXNwYXRjaGVkID09IGZhbHNlICYmIGdyb3dEaXNwYXRjaGVkID09IGZhbHNlKSB7XG4gICAgICAgICAgICAvLyBzY2VuYXJpbzogd2VhazEgd29ya3MsIHJlc3Qgc2tpcFxuICAgICAgICAgICAgLy8gaGFjayBmaW5pc2hlcyAxIG1hcmdpbiB1bml0IGFmdGVyIHdlYWsxIGVuZHNcbiAgICAgICAgICAgIG5zLnByaW50KFxuICAgICAgICAgICAgICAgIENvbG9ycy5ZRUxMT1cgK1xuICAgICAgICAgICAgICAgICAgICBcIldlYWsgMiB3YXMgc2tpcHBlZC4gRGlkIHRoZSBsYXN0IGhhY2sgYXR0ZW1wdCBmYWlsP1xcbkhhY2tpbmcgaXMgYWJvdXQgdG8gc3RhcnQgZWFybGllciB0aGFuIHBsYW5uZWQuXCIgK1xuICAgICAgICAgICAgICAgICAgICBDb2xvcnMuUkVTRVQsXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY29uc3QgaGFja1N0YXJ0VGltZSA9IHdlYWtUaW1lICsgREVMQVlfTUFSR0lOX01TIC0gaGFja1RpbWU7XG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcChoYWNrU3RhcnRUaW1lKTtcbiAgICAgICAgICAgIG5zLnByaW50KFwiQXR0ZW1wdGluZyB0byBzdGFydCBIYWNrIGF0IFwiICsgZ2V0VGltZUgoKSk7XG4gICAgICAgICAgICBoYWNrU2VydmVyKG5zLCB0YXJnZXQsIGhhY2tUaHJlc2hvbGQsIDApO1xuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoaGFja1RpbWUgKyBERUxBWV9NQVJHSU5fTVMpO1xuICAgICAgICB9IGVsc2UgaWYgKHdlYWsxRGlzcGF0Y2hlZCA9PSBmYWxzZSAmJiB3ZWFrMkRpc3BhdGNoZWQgPT0gZmFsc2UgJiYgZ3Jvd0Rpc3BhdGNoZWQgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIC8vIHNjZW5hcmlvOiB3ZWFrMSBhbmQgd2VhazIgc2tpcHBlZFxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLllFTExPVyArIFwiV2VhayAxIGFuZCBXZWFrIDIgd2VyZSBza2lwcGVkPyBIYWNraW5nIG5vdy4gXCIgKyBnZXRUaW1lSCgpICsgQ29sb3JzLlJFU0VUKTtcbiAgICAgICAgICAgIGhhY2tTZXJ2ZXIobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCwgMCk7XG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcChoYWNrVGltZSArIERFTEFZX01BUkdJTl9NUyk7XG4gICAgICAgIH0gZWxzZSBpZiAod2VhazFEaXNwYXRjaGVkID09IHRydWUgJiYgZ3Jvd0Rpc3BhdGNoZWQgPT0gdHJ1ZSAmJiB3ZWFrMkRpc3BhdGNoZWQgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgLy8gaGFjayBub3JtYWxcbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5HUkVFTiArIFwiSGFjayBpcyBhYm91dCB0byBzdGFydCBhcyBleHBlY3RlZFwiICsgQ29sb3JzLlJFU0VUKTtcbiAgICAgICAgICAgIGNvbnN0IGhhY2tTdGFydFRpbWUgPSB3ZWFrVGltZSArIDMgKiBERUxBWV9NQVJHSU5fTVMgLSBoYWNrVGltZTtcbiAgICAgICAgICAgIGNvbnN0IGhhY2tEZWxheURpZmYgPSBoYWNrU3RhcnRUaW1lIC0gZ3Jvd1N0YXJ0VGltZTtcbiAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKGhhY2tEZWxheURpZmYpO1xuICAgICAgICAgICAgbnMucHJpbnQoXCJBdHRlbXB0aW5nIHRvIHN0YXJ0IEhhY2sgYXQgXCIgKyBnZXRUaW1lSCgpKTtcbiAgICAgICAgICAgIGhhY2tTZXJ2ZXIobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCwgMCk7XG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcChoYWNrVGltZSArIERFTEFZX01BUkdJTl9NUyk7XG4gICAgICAgIH0gZWxzZSBpZiAod2VhazFEaXNwYXRjaGVkID09IGZhbHNlICYmIHdlYWsyRGlzcGF0Y2hlZCA9PSB0cnVlICYmIGdyb3dEaXNwYXRjaGVkID09IHRydWUpIHtcbiAgICAgICAgICAgIC8vIGNhc2Ugd2VhazEgd2FzIHNraXBwZWQsIGJ1dCB3ZWFrMiBhbmQgZ3JvdyB3ZXJlIGRpc3BhdGNoZWRcblxuICAgICAgICAgICAgbnMucHJpbnQoXG4gICAgICAgICAgICAgICAgQ29sb3JzLllFTExPVyArIFwiV2VhayAxIHdhcyBza2lwcGVkLiBQZXJoYXBzIHRoZSBzZXJ2ZXIgaXMgYWxyZWFkeSBhdCB0aGUgbWluIHNlYyBsdmwuXCIgKyBDb2xvcnMuUkVTRVQsXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY29uc3QgaGFja1N0YXJ0VGltZSA9IHdlYWtUaW1lICsgMiAqIERFTEFZX01BUkdJTl9NUyAtIGhhY2tUaW1lO1xuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoaGFja1N0YXJ0VGltZSAtIGdyb3dTdGFydFRpbWUpO1xuICAgICAgICAgICAgbnMucHJpbnQoXCJBdHRlbXB0aW5nIHRvIHN0YXJ0IEhhY2sgYXQgXCIgKyBnZXRUaW1lSCgpKTtcbiAgICAgICAgICAgIGhhY2tTZXJ2ZXIobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCwgMCk7XG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcChoYWNrVGltZSArIERFTEFZX01BUkdJTl9NUyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBucy5wcmludChDb2xvcnMuUkVEICsgXCJjb3VsZCBub3Qgc3RhcnQgaGFjayFcIiArIENvbG9ycy5SRVNFVCk7XG4gICAgICAgICAgICBucy5wcmludChcbiAgICAgICAgICAgICAgICBcIndlYWsxRGlzcGF0Y2hlZDogXCIgK1xuICAgICAgICAgICAgICAgICAgICB3ZWFrMURpc3BhdGNoZWQgK1xuICAgICAgICAgICAgICAgICAgICBcIiB8IHdlYWsyRGlzcGF0Y2hlZDogXCIgK1xuICAgICAgICAgICAgICAgICAgICB3ZWFrMkRpc3BhdGNoZWQgK1xuICAgICAgICAgICAgICAgICAgICBcIiB8IGdyb3dEaXNwYXRjaGVkOiBcIiArXG4gICAgICAgICAgICAgICAgICAgIGdyb3dEaXNwYXRjaGVkLFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHByaW50U2VydmVyU3RhdHMobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuIG5vdGVzOlxuIHdlYWtlbiByZW1vdmVzIDAuMDUgc2VjIGx2bFxuIGdyb3cgYWRkcyAwLjAwNCBzZWMgbHZsXG5cbiBncm93IGFkZHMgbW9uZXk6XG5cbiAqL1xuIl0sIm1hcHBpbmdzIjoiQUFFQSxTQUFTLHFCQUFxQjtBQUM5QixTQUFTLFFBQVEsZ0JBQWdCO0FBQ2pDLFNBQVMsd0JBQXdCO0FBQ2pDLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMsa0JBQWtCO0FBQzNCLFNBQVMsa0JBQWtCO0FBQzNCLFNBQVMsb0JBQW9CO0FBQzdCLFNBQVMsWUFBWTtBQUNyQixTQUFTLGNBQWM7QUFFdkIsTUFBTSxrQkFBa0IsT0FBTztBQUUvQixzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLEtBQUcsS0FBSztBQUNSLEtBQUcsV0FBVyxLQUFLO0FBT25CLFNBQU8sTUFBTTtBQUNULFVBQU0sU0FBUyxjQUFjLEVBQUU7QUFDL0IsVUFBTSxjQUFjLElBQUksUUFBUSxHQUFHO0FBQUEsRUFDdkM7QUFDSjtBQUVBLHNCQUFzQixjQUFjLElBQVEsUUFBZ0IsZ0JBQWdCLEtBQUssY0FBYyxHQUFHO0FBQzlGLFFBQU0sV0FBVyxHQUFHLGNBQWMsTUFBTTtBQUN4QyxRQUFNLE9BQU8sS0FBSyxZQUFZO0FBRTlCLE1BQUksY0FBYyxHQUFHO0FBQ2pCLE9BQUcsTUFBTSxPQUFPLE9BQU8sNENBQTRDO0FBRW5FLGFBQVMsVUFBVSxHQUFHLFVBQVUsYUFBYSxXQUFXO0FBQ3BELFNBQUcsTUFBTSxPQUFPLE9BQU8sd0JBQXdCLFVBQVUsZUFBZTtBQUV4RSxZQUFNQSxZQUFXLEdBQUcsY0FBYyxNQUFNO0FBQ3hDLFlBQU0sV0FBVyxHQUFHLFlBQVksTUFBTTtBQUN0QyxZQUFNLFdBQVcsR0FBRyxZQUFZLE1BQU07QUFPdEMsWUFBTSxZQUFZQSxZQUFXLFdBQVc7QUFDeEMsb0JBQWMsV0FBVyxJQUFJLFFBQVEsZUFBZSxTQUFTLE1BQU0sU0FBUztBQU01RSxvQkFBYyxhQUFhLElBQUksUUFBUSxHQUFHLFNBQVMsSUFBSTtBQUt2RCxZQUFNLFlBQVlBLFlBQVcsV0FBVztBQUV4QyxvQkFBYyxXQUFXLElBQUksUUFBUSxTQUFTLE1BQU0sZUFBZSxTQUFTO0FBSzVFLFlBQU0sYUFBYSxJQUFJO0FBRXZCLG9CQUFjLGFBQWEsSUFBSSxRQUFRLEdBQUcsU0FBUyxNQUFNLFVBQVU7QUFJbkUsdUJBQWlCLElBQUksUUFBUSxhQUFhO0FBRTFDLFNBQUcsTUFBTSxPQUFPLFFBQVEsc0NBQXNDLE9BQU8sS0FBSztBQUUxRSxZQUFNLEdBQUcsTUFBTSxJQUFJLGVBQWU7QUFDbEMsV0FBSyxvQkFBb0IsSUFBSSxlQUFlO0FBQUEsSUFDaEQ7QUFFQSxVQUFNLEdBQUcsTUFBTSxXQUFXLElBQUksa0JBQWtCLGNBQWMsZUFBZTtBQUM3RSxTQUFLLG9CQUFvQixXQUFXLElBQUksa0JBQWtCLGNBQWMsZUFBZTtBQUFBLEVBQzNGLE9BQU87QUFDSCxPQUFHLE1BQU0sT0FBTyxPQUFPLDZDQUE2QztBQUNwRSxVQUFNQSxZQUFXLEdBQUcsY0FBYyxNQUFNO0FBQ3hDLFVBQU0sV0FBVyxHQUFHLFlBQVksTUFBTTtBQUN0QyxVQUFNLFdBQVcsR0FBRyxZQUFZLE1BQU07QUFFdEMsT0FBRyxNQUFNLG1DQUFtQyxTQUFTLENBQUM7QUFDdEQsVUFBTSxrQkFBa0IsYUFBYSxJQUFJLFFBQVEsR0FBRyxDQUFDO0FBTXJELFFBQUksaUJBQWlCO0FBQ3JCLFFBQUksbUJBQW1CLE1BQU07QUFFekIsdUJBQWlCLElBQUk7QUFDckIsWUFBTSxHQUFHLE1BQU0sY0FBYztBQUFBLElBQ2pDO0FBRUEsT0FBRyxNQUFNLG9DQUFvQyxTQUFTLENBQUM7QUFDdkQsVUFBTSxrQkFBa0IsYUFBYSxJQUFJLFFBQVEsR0FBRyxDQUFDO0FBS3JELFFBQUksZ0JBQWdCO0FBQ3BCLFFBQUksbUJBQW1CLE1BQU07QUFDekIsc0JBQWdCQSxZQUFXLGtCQUFrQjtBQUM3QyxZQUFNLFlBQVksZ0JBQWdCO0FBQ2xDLFlBQU0sR0FBRyxNQUFNLFNBQVM7QUFBQSxJQUM1QjtBQUdBLE9BQUcsTUFBTSxpQ0FBaUMsU0FBUyxDQUFDO0FBQ3BELFVBQU0saUJBQWlCLFdBQVcsSUFBSSxRQUFRLENBQUM7QUFPL0MsUUFBSSxtQkFBbUIsUUFBUSxtQkFBbUIsU0FBUyxrQkFBa0IsT0FBTztBQUdoRixTQUFHO0FBQUEsUUFDQyxPQUFPLFNBQ0gseUdBQ0EsT0FBTztBQUFBLE1BQ2Y7QUFDQSxZQUFNLGdCQUFnQkEsWUFBVyxrQkFBa0I7QUFDbkQsWUFBTSxHQUFHLE1BQU0sYUFBYTtBQUM1QixTQUFHLE1BQU0saUNBQWlDLFNBQVMsQ0FBQztBQUNwRCxpQkFBVyxJQUFJLFFBQVEsZUFBZSxDQUFDO0FBQ3ZDLFlBQU0sR0FBRyxNQUFNLFdBQVcsZUFBZTtBQUFBLElBQzdDLFdBQVcsbUJBQW1CLFNBQVMsbUJBQW1CLFNBQVMsa0JBQWtCLE9BQU87QUFFeEYsU0FBRyxNQUFNLE9BQU8sU0FBUyxrREFBa0QsU0FBUyxJQUFJLE9BQU8sS0FBSztBQUNwRyxpQkFBVyxJQUFJLFFBQVEsZUFBZSxDQUFDO0FBQ3ZDLFlBQU0sR0FBRyxNQUFNLFdBQVcsZUFBZTtBQUFBLElBQzdDLFdBQVcsbUJBQW1CLFFBQVEsa0JBQWtCLFFBQVEsbUJBQW1CLE1BQU07QUFFckYsU0FBRyxNQUFNLE9BQU8sUUFBUSx1Q0FBdUMsT0FBTyxLQUFLO0FBQzNFLFlBQU0sZ0JBQWdCQSxZQUFXLElBQUksa0JBQWtCO0FBQ3ZELFlBQU0sZ0JBQWdCLGdCQUFnQjtBQUN0QyxZQUFNLEdBQUcsTUFBTSxhQUFhO0FBQzVCLFNBQUcsTUFBTSxpQ0FBaUMsU0FBUyxDQUFDO0FBQ3BELGlCQUFXLElBQUksUUFBUSxlQUFlLENBQUM7QUFDdkMsWUFBTSxHQUFHLE1BQU0sV0FBVyxlQUFlO0FBQUEsSUFDN0MsV0FBVyxtQkFBbUIsU0FBUyxtQkFBbUIsUUFBUSxrQkFBa0IsTUFBTTtBQUd0RixTQUFHO0FBQUEsUUFDQyxPQUFPLFNBQVMsMEVBQTBFLE9BQU87QUFBQSxNQUNyRztBQUNBLFlBQU0sZ0JBQWdCQSxZQUFXLElBQUksa0JBQWtCO0FBQ3ZELFlBQU0sR0FBRyxNQUFNLGdCQUFnQixhQUFhO0FBQzVDLFNBQUcsTUFBTSxpQ0FBaUMsU0FBUyxDQUFDO0FBQ3BELGlCQUFXLElBQUksUUFBUSxlQUFlLENBQUM7QUFDdkMsWUFBTSxHQUFHLE1BQU0sV0FBVyxlQUFlO0FBQUEsSUFDN0MsT0FBTztBQUNILFNBQUcsTUFBTSxPQUFPLE1BQU0sMEJBQTBCLE9BQU8sS0FBSztBQUM1RCxTQUFHO0FBQUEsUUFDQyxzQkFDSSxrQkFDQSx5QkFDQSxrQkFDQSx3QkFDQTtBQUFBLE1BQ1I7QUFDQSx1QkFBaUIsSUFBSSxRQUFRLGFBQWE7QUFDMUM7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUNKOyIsIm5hbWVzIjpbIndlYWtUaW1lIl19\",\"filename\":\"parallel/manager.js\",\"server\":\"home\"}}],[\"parallel/serverManager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Colors, nukeAll, nukeServer } from \\\"/lib.js\\\";\\nexport class ServerManager {\\n  /**\\n   * Buys or upgrades a server based on the desired RAM and server type.\\n   * If the server exists and can be upgraded successfully, it returns the upgraded server name.\\n   * If the server cannot be upgraded, it attempts to buy a new server with the desired RAM and name.\\n   *\\n   * @param ns - The Bitburner namespace object.\\n   * @param desiredRam - How much RAM needs the server at least.\\n   * @param serverType - The type of server to buy or upgrade (`weak`, `grow`, `hack`).\\n   * @param batchId - The batch ID of the server.\\n   * @returns The name of the upgraded server or an empty string if a new server cannot be bought/upgraded.\\n   */\\n  static buyOrUpgradeServer(ns, desiredRam, serverType, batchId) {\\n    const serverName = serverType + \\\"-\\\" + batchId;\\n    const upgradeSuccessful = this.upgradeServer(ns, desiredRam, serverName);\\n    if (upgradeSuccessful) {\\n      ns.print(Colors.GREEN + \\\"[server Manager] Upgraded Server '\\\" + serverName + \\\"'!\\\");\\n      return serverName;\\n    }\\n    const name = this.buyServer(ns, desiredRam, serverName);\\n    if (name === \\\"\\\") {\\n      ns.print(Colors.RED + \\\"[server Manager] Failed to buy a new server!\\\");\\n      return name;\\n    }\\n    ns.print(Colors.GREEN + \\\"[server Manager] Bought Server '\\\" + name + \\\"'!\\\");\\n    nukeAll(ns);\\n    return name;\\n  }\\n  static buyServer(ns, desiredRam, serverName) {\\n    const purchasedServerLimit = ns.getPurchasedServerLimit();\\n    const purchasedServers = ns.getPurchasedServers();\\n    if (purchasedServers.length >= purchasedServerLimit) {\\n      ns.print(Colors.RED + \\\"[server Manager] attempted to buy a new server, but the limit has been reached\\\");\\n      return \\\"\\\";\\n    }\\n    const exponent = Math.ceil(Math.log2(desiredRam));\\n    desiredRam = Math.pow(2, exponent);\\n    const cost = ns.getPurchasedServerCost(desiredRam);\\n    if (cost > ns.getServerMoneyAvailable(\\\"home\\\")) {\\n      ns.print(\\n        Colors.RED + \\\"[server Manager] attempted to buy a new server, but the player does not have enough money\\\"\\n      );\\n      return \\\"\\\";\\n    }\\n    const name = ns.purchaseServer(serverName, desiredRam);\\n    nukeServer(ns, name);\\n    return name;\\n  }\\n  static upgradeServer(ns, desiredRam, serverName) {\\n    const purchasedServers = ns.getPurchasedServers();\\n    if (!purchasedServers.includes(serverName)) {\\n      ns.print(Colors.YELLOW + \\\"[server Manager] attempted to upgrade Server, but the server does not exist\\\");\\n      return false;\\n    }\\n    const serverMaxRam = ns.getServerMaxRam(serverName);\\n    let totalRequiredRam = desiredRam + serverMaxRam;\\n    const exponent = Math.ceil(Math.log2(totalRequiredRam));\\n    totalRequiredRam = Math.pow(2, exponent);\\n    const cost = ns.getPurchasedServerUpgradeCost(serverName, totalRequiredRam);\\n    if (cost > ns.getServerMoneyAvailable(\\\"home\\\")) {\\n      ns.print(\\n        Colors.RED + \\\"[server Manager] attempted to upgrade Server, but the player does not have enough money\\\"\\n      );\\n      return false;\\n    }\\n    if (!ns.upgradePurchasedServer(serverName, totalRequiredRam)) {\\n      ns.print(Colors.RED + \\\"[server Manager] attempted to upgrade Server, but the upgrade failed\\\");\\n      return false;\\n    }\\n    return true;\\n  }\\n  /**\\n   * Upgrades an existing server to meet the desired RAM requirement, that is cheapest to upgrade.\\n   *\\n   * @param ns - The NetScriptJS object.\\n   * @param desiredRam - How much RAM needs the server at least.\\n   * @param name - The name of the server to upgrade.\\n   * @returns The name of the upgraded server, or an empty string if the upgrade failed.\\n   */\\n  static getBestServerToUpgrade(ns, desiredRam, name) {\\n    const purchasedServers = ns.getPurchasedServers().filter((server) => server.includes(name));\\n    let minUpgradeCost = Number.MAX_VALUE;\\n    let serverToUpgrade = \\\"\\\";\\n    let totalRequiredRam = 0;\\n    for (let i = 0; i < purchasedServers.length; i++) {\\n      const server = purchasedServers[i];\\n      const serverMaxRam = ns.getServerMaxRam(server);\\n      totalRequiredRam = desiredRam + serverMaxRam;\\n      const exponent = Math.ceil(Math.log2(totalRequiredRam));\\n      totalRequiredRam = Math.pow(2, exponent);\\n      const cost = ns.getPurchasedServerUpgradeCost(server, totalRequiredRam);\\n      if (cost < minUpgradeCost) {\\n        minUpgradeCost = cost;\\n        serverToUpgrade = server;\\n      }\\n    }\\n    return {\\n      minUpgradeCost,\\n      serverToUpgrade,\\n      totalRequiredRam\\n    };\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlck1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3JzLCBudWtlQWxsLCBudWtlU2VydmVyIH0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNlcnZlck1hbmFnZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKiBCdXlzIG9yIHVwZ3JhZGVzIGEgc2VydmVyIGJhc2VkIG9uIHRoZSBkZXNpcmVkIFJBTSBhbmQgc2VydmVyIHR5cGUuXHJcbiAgICAgKiBJZiB0aGUgc2VydmVyIGV4aXN0cyBhbmQgY2FuIGJlIHVwZ3JhZGVkIHN1Y2Nlc3NmdWxseSwgaXQgcmV0dXJucyB0aGUgdXBncmFkZWQgc2VydmVyIG5hbWUuXHJcbiAgICAgKiBJZiB0aGUgc2VydmVyIGNhbm5vdCBiZSB1cGdyYWRlZCwgaXQgYXR0ZW1wdHMgdG8gYnV5IGEgbmV3IHNlcnZlciB3aXRoIHRoZSBkZXNpcmVkIFJBTSBhbmQgbmFtZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbnMgLSBUaGUgQml0YnVybmVyIG5hbWVzcGFjZSBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0gZGVzaXJlZFJhbSAtIEhvdyBtdWNoIFJBTSBuZWVkcyB0aGUgc2VydmVyIGF0IGxlYXN0LlxyXG4gICAgICogQHBhcmFtIHNlcnZlclR5cGUgLSBUaGUgdHlwZSBvZiBzZXJ2ZXIgdG8gYnV5IG9yIHVwZ3JhZGUgKGB3ZWFrYCwgYGdyb3dgLCBgaGFja2ApLlxyXG4gICAgICogQHBhcmFtIGJhdGNoSWQgLSBUaGUgYmF0Y2ggSUQgb2YgdGhlIHNlcnZlci5cclxuICAgICAqIEByZXR1cm5zIFRoZSBuYW1lIG9mIHRoZSB1cGdyYWRlZCBzZXJ2ZXIgb3IgYW4gZW1wdHkgc3RyaW5nIGlmIGEgbmV3IHNlcnZlciBjYW5ub3QgYmUgYm91Z2h0L3VwZ3JhZGVkLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYnV5T3JVcGdyYWRlU2VydmVyKG5zOiBOUywgZGVzaXJlZFJhbTogbnVtYmVyLCBzZXJ2ZXJUeXBlOiBzdHJpbmcsIGJhdGNoSWQ6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyTmFtZSA9IHNlcnZlclR5cGUgKyBcIi1cIiArIGJhdGNoSWQ7XHJcbiAgICAgICAgY29uc3QgdXBncmFkZVN1Y2Nlc3NmdWwgPSB0aGlzLnVwZ3JhZGVTZXJ2ZXIobnMsIGRlc2lyZWRSYW0sIHNlcnZlck5hbWUpO1xyXG5cclxuICAgICAgICBpZiAodXBncmFkZVN1Y2Nlc3NmdWwpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJbc2VydmVyIE1hbmFnZXJdIFVwZ3JhZGVkIFNlcnZlciAnXCIgKyBzZXJ2ZXJOYW1lICsgXCInIVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIHNlcnZlck5hbWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5idXlTZXJ2ZXIobnMsIGRlc2lyZWRSYW0sIHNlcnZlck5hbWUpO1xyXG4gICAgICAgIGlmIChuYW1lID09PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5SRUQgKyBcIltzZXJ2ZXIgTWFuYWdlcl0gRmFpbGVkIHRvIGJ1eSBhIG5ldyBzZXJ2ZXIhXCIpO1xyXG4gICAgICAgICAgICByZXR1cm4gbmFtZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJbc2VydmVyIE1hbmFnZXJdIEJvdWdodCBTZXJ2ZXIgJ1wiICsgbmFtZSArIFwiJyFcIik7XHJcbiAgICAgICAgbnVrZUFsbChucyk7XHJcbiAgICAgICAgcmV0dXJuIG5hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGJ1eVNlcnZlcihuczogTlMsIGRlc2lyZWRSYW06IG51bWJlciwgc2VydmVyTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBwdXJjaGFzZWRTZXJ2ZXJMaW1pdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckxpbWl0KCk7XHJcbiAgICAgICAgY29uc3QgcHVyY2hhc2VkU2VydmVycyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKTtcclxuICAgICAgICBpZiAocHVyY2hhc2VkU2VydmVycy5sZW5ndGggPj0gcHVyY2hhc2VkU2VydmVyTGltaXQpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLlJFRCArIFwiW3NlcnZlciBNYW5hZ2VyXSBhdHRlbXB0ZWQgdG8gYnV5IGEgbmV3IHNlcnZlciwgYnV0IHRoZSBsaW1pdCBoYXMgYmVlbiByZWFjaGVkXCIpO1xyXG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGV4cG9uZW50ID0gTWF0aC5jZWlsKE1hdGgubG9nMihkZXNpcmVkUmFtKSk7XHJcbiAgICAgICAgZGVzaXJlZFJhbSA9IE1hdGgucG93KDIsIGV4cG9uZW50KTtcclxuXHJcbiAgICAgICAgY29uc3QgY29zdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QoZGVzaXJlZFJhbSk7XHJcbiAgICAgICAgaWYgKGNvc3QgPiBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcImhvbWVcIikpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgICAgICBDb2xvcnMuUkVEICtcclxuICAgICAgICAgICAgICAgICAgICBcIltzZXJ2ZXIgTWFuYWdlcl0gYXR0ZW1wdGVkIHRvIGJ1eSBhIG5ldyBzZXJ2ZXIsIGJ1dCB0aGUgcGxheWVyIGRvZXMgbm90IGhhdmUgZW5vdWdoIG1vbmV5XCIsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbmFtZSA9IG5zLnB1cmNoYXNlU2VydmVyKHNlcnZlck5hbWUsIGRlc2lyZWRSYW0pO1xyXG4gICAgICAgIG51a2VTZXJ2ZXIobnMsIG5hbWUpO1xyXG4gICAgICAgIHJldHVybiBuYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyB1cGdyYWRlU2VydmVyKG5zOiBOUywgZGVzaXJlZFJhbTogbnVtYmVyLCBzZXJ2ZXJOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBwdXJjaGFzZWRTZXJ2ZXJzID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpO1xyXG4gICAgICAgIGlmICghcHVyY2hhc2VkU2VydmVycy5pbmNsdWRlcyhzZXJ2ZXJOYW1lKSkge1xyXG4gICAgICAgICAgICBucy5wcmludChDb2xvcnMuWUVMTE9XICsgXCJbc2VydmVyIE1hbmFnZXJdIGF0dGVtcHRlZCB0byB1cGdyYWRlIFNlcnZlciwgYnV0IHRoZSBzZXJ2ZXIgZG9lcyBub3QgZXhpc3RcIik7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHNlcnZlck1heFJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzZXJ2ZXJOYW1lKTtcclxuICAgICAgICBsZXQgdG90YWxSZXF1aXJlZFJhbSA9IGRlc2lyZWRSYW0gKyBzZXJ2ZXJNYXhSYW07XHJcblxyXG4gICAgICAgIGNvbnN0IGV4cG9uZW50ID0gTWF0aC5jZWlsKE1hdGgubG9nMih0b3RhbFJlcXVpcmVkUmFtKSk7XHJcbiAgICAgICAgdG90YWxSZXF1aXJlZFJhbSA9IE1hdGgucG93KDIsIGV4cG9uZW50KTtcclxuXHJcbiAgICAgICAgY29uc3QgY29zdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlclVwZ3JhZGVDb3N0KHNlcnZlck5hbWUsIHRvdGFsUmVxdWlyZWRSYW0pO1xyXG5cclxuICAgICAgICBpZiAoY29zdCA+IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFwiaG9tZVwiKSkge1xyXG4gICAgICAgICAgICBucy5wcmludChcclxuICAgICAgICAgICAgICAgIENvbG9ycy5SRUQgKyBcIltzZXJ2ZXIgTWFuYWdlcl0gYXR0ZW1wdGVkIHRvIHVwZ3JhZGUgU2VydmVyLCBidXQgdGhlIHBsYXllciBkb2VzIG5vdCBoYXZlIGVub3VnaCBtb25leVwiLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIW5zLnVwZ3JhZGVQdXJjaGFzZWRTZXJ2ZXIoc2VydmVyTmFtZSwgdG90YWxSZXF1aXJlZFJhbSkpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLlJFRCArIFwiW3NlcnZlciBNYW5hZ2VyXSBhdHRlbXB0ZWQgdG8gdXBncmFkZSBTZXJ2ZXIsIGJ1dCB0aGUgdXBncmFkZSBmYWlsZWRcIik7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBVcGdyYWRlcyBhbiBleGlzdGluZyBzZXJ2ZXIgdG8gbWVldCB0aGUgZGVzaXJlZCBSQU0gcmVxdWlyZW1lbnQsIHRoYXQgaXMgY2hlYXBlc3QgdG8gdXBncmFkZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbnMgLSBUaGUgTmV0U2NyaXB0SlMgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIGRlc2lyZWRSYW0gLSBIb3cgbXVjaCBSQU0gbmVlZHMgdGhlIHNlcnZlciBhdCBsZWFzdC5cclxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHNlcnZlciB0byB1cGdyYWRlLlxyXG4gICAgICogQHJldHVybnMgVGhlIG5hbWUgb2YgdGhlIHVwZ3JhZGVkIHNlcnZlciwgb3IgYW4gZW1wdHkgc3RyaW5nIGlmIHRoZSB1cGdyYWRlIGZhaWxlZC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdldEJlc3RTZXJ2ZXJUb1VwZ3JhZGUobnM6IE5TLCBkZXNpcmVkUmFtOiBudW1iZXIsIG5hbWU6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHB1cmNoYXNlZFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCkuZmlsdGVyKChzZXJ2ZXIpID0+IHNlcnZlci5pbmNsdWRlcyhuYW1lKSk7XHJcblxyXG4gICAgICAgIGxldCBtaW5VcGdyYWRlQ29zdCA9IE51bWJlci5NQVhfVkFMVUU7XHJcbiAgICAgICAgbGV0IHNlcnZlclRvVXBncmFkZSA9IFwiXCI7XHJcblxyXG4gICAgICAgIGxldCB0b3RhbFJlcXVpcmVkUmFtID0gMDtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwdXJjaGFzZWRTZXJ2ZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlcnZlciA9IHB1cmNoYXNlZFNlcnZlcnNbaV07XHJcblxyXG4gICAgICAgICAgICBjb25zdCBzZXJ2ZXJNYXhSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyKTtcclxuICAgICAgICAgICAgdG90YWxSZXF1aXJlZFJhbSA9IGRlc2lyZWRSYW0gKyBzZXJ2ZXJNYXhSYW07XHJcblxyXG4gICAgICAgICAgICBjb25zdCBleHBvbmVudCA9IE1hdGguY2VpbChNYXRoLmxvZzIodG90YWxSZXF1aXJlZFJhbSkpO1xyXG4gICAgICAgICAgICB0b3RhbFJlcXVpcmVkUmFtID0gTWF0aC5wb3coMiwgZXhwb25lbnQpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgY29zdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlclVwZ3JhZGVDb3N0KHNlcnZlciwgdG90YWxSZXF1aXJlZFJhbSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY29zdCA8IG1pblVwZ3JhZGVDb3N0KSB7XHJcbiAgICAgICAgICAgICAgICBtaW5VcGdyYWRlQ29zdCA9IGNvc3Q7XHJcbiAgICAgICAgICAgICAgICBzZXJ2ZXJUb1VwZ3JhZGUgPSBzZXJ2ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbWluVXBncmFkZUNvc3QsXHJcbiAgICAgICAgICAgIHNlcnZlclRvVXBncmFkZSxcclxuICAgICAgICAgICAgdG90YWxSZXF1aXJlZFJhbSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxRQUFRLFNBQVMsa0JBQWtCO0FBR3JDLGFBQU0sY0FBYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQVl2QixPQUFPLG1CQUFtQixJQUFRLFlBQW9CLFlBQW9CLFNBQXlCO0FBQy9GLFVBQU0sYUFBYSxhQUFhLE1BQU07QUFDdEMsVUFBTSxvQkFBb0IsS0FBSyxjQUFjLElBQUksWUFBWSxVQUFVO0FBRXZFLFFBQUksbUJBQW1CO0FBQ25CLFNBQUcsTUFBTSxPQUFPLFFBQVEsdUNBQXVDLGFBQWEsSUFBSTtBQUNoRixhQUFPO0FBQUEsSUFDWDtBQUVBLFVBQU0sT0FBTyxLQUFLLFVBQVUsSUFBSSxZQUFZLFVBQVU7QUFDdEQsUUFBSSxTQUFTLElBQUk7QUFDYixTQUFHLE1BQU0sT0FBTyxNQUFNLDhDQUE4QztBQUNwRSxhQUFPO0FBQUEsSUFDWDtBQUNBLE9BQUcsTUFBTSxPQUFPLFFBQVEscUNBQXFDLE9BQU8sSUFBSTtBQUN4RSxZQUFRLEVBQUU7QUFDVixXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsT0FBTyxVQUFVLElBQVEsWUFBb0IsWUFBNEI7QUFDckUsVUFBTSx1QkFBdUIsR0FBRyx3QkFBd0I7QUFDeEQsVUFBTSxtQkFBbUIsR0FBRyxvQkFBb0I7QUFDaEQsUUFBSSxpQkFBaUIsVUFBVSxzQkFBc0I7QUFDakQsU0FBRyxNQUFNLE9BQU8sTUFBTSxnRkFBZ0Y7QUFDdEcsYUFBTztBQUFBLElBQ1g7QUFFQSxVQUFNLFdBQVcsS0FBSyxLQUFLLEtBQUssS0FBSyxVQUFVLENBQUM7QUFDaEQsaUJBQWEsS0FBSyxJQUFJLEdBQUcsUUFBUTtBQUVqQyxVQUFNLE9BQU8sR0FBRyx1QkFBdUIsVUFBVTtBQUNqRCxRQUFJLE9BQU8sR0FBRyx3QkFBd0IsTUFBTSxHQUFHO0FBQzNDLFNBQUc7QUFBQSxRQUNDLE9BQU8sTUFDSDtBQUFBLE1BQ1I7QUFDQSxhQUFPO0FBQUEsSUFDWDtBQUVBLFVBQU0sT0FBTyxHQUFHLGVBQWUsWUFBWSxVQUFVO0FBQ3JELGVBQVcsSUFBSSxJQUFJO0FBQ25CLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFQSxPQUFPLGNBQWMsSUFBUSxZQUFvQixZQUE2QjtBQUMxRSxVQUFNLG1CQUFtQixHQUFHLG9CQUFvQjtBQUNoRCxRQUFJLENBQUMsaUJBQWlCLFNBQVMsVUFBVSxHQUFHO0FBQ3hDLFNBQUcsTUFBTSxPQUFPLFNBQVMsNkVBQTZFO0FBQ3RHLGFBQU87QUFBQSxJQUNYO0FBRUEsVUFBTSxlQUFlLEdBQUcsZ0JBQWdCLFVBQVU7QUFDbEQsUUFBSSxtQkFBbUIsYUFBYTtBQUVwQyxVQUFNLFdBQVcsS0FBSyxLQUFLLEtBQUssS0FBSyxnQkFBZ0IsQ0FBQztBQUN0RCx1QkFBbUIsS0FBSyxJQUFJLEdBQUcsUUFBUTtBQUV2QyxVQUFNLE9BQU8sR0FBRyw4QkFBOEIsWUFBWSxnQkFBZ0I7QUFFMUUsUUFBSSxPQUFPLEdBQUcsd0JBQXdCLE1BQU0sR0FBRztBQUMzQyxTQUFHO0FBQUEsUUFDQyxPQUFPLE1BQU07QUFBQSxNQUNqQjtBQUNBLGFBQU87QUFBQSxJQUNYO0FBRUEsUUFBSSxDQUFDLEdBQUcsdUJBQXVCLFlBQVksZ0JBQWdCLEdBQUc7QUFDMUQsU0FBRyxNQUFNLE9BQU8sTUFBTSxzRUFBc0U7QUFDNUYsYUFBTztBQUFBLElBQ1g7QUFDQSxXQUFPO0FBQUEsRUFDWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQVVBLE9BQU8sdUJBQXVCLElBQVEsWUFBb0IsTUFBYztBQUNwRSxVQUFNLG1CQUFtQixHQUFHLG9CQUFvQixFQUFFLE9BQU8sQ0FBQyxXQUFXLE9BQU8sU0FBUyxJQUFJLENBQUM7QUFFMUYsUUFBSSxpQkFBaUIsT0FBTztBQUM1QixRQUFJLGtCQUFrQjtBQUV0QixRQUFJLG1CQUFtQjtBQUV2QixhQUFTLElBQUksR0FBRyxJQUFJLGlCQUFpQixRQUFRLEtBQUs7QUFDOUMsWUFBTSxTQUFTLGlCQUFpQixDQUFDO0FBRWpDLFlBQU0sZUFBZSxHQUFHLGdCQUFnQixNQUFNO0FBQzlDLHlCQUFtQixhQUFhO0FBRWhDLFlBQU0sV0FBVyxLQUFLLEtBQUssS0FBSyxLQUFLLGdCQUFnQixDQUFDO0FBQ3RELHlCQUFtQixLQUFLLElBQUksR0FBRyxRQUFRO0FBRXZDLFlBQU0sT0FBTyxHQUFHLDhCQUE4QixRQUFRLGdCQUFnQjtBQUV0RSxVQUFJLE9BQU8sZ0JBQWdCO0FBQ3ZCLHlCQUFpQjtBQUNqQiwwQkFBa0I7QUFBQSxNQUN0QjtBQUFBLElBQ0o7QUFDQSxXQUFPO0FBQUEsTUFDSDtBQUFBLE1BQ0E7QUFBQSxNQUNBO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFDSjsiLCJuYW1lcyI6W119\",\"filename\":\"parallel/serverManager.js\",\"server\":\"home\"}}],[\"parallel/weakenAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getBestHostByRam } from \\\"/bestServer.js\\\";\\nimport { Colors, getGrowThreads, getWeakenThreads } from \\\"/lib.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  weakenServer(ns, \\\"foodnstuff\\\", 1, 0);\\n}\\nexport function weakenServer(ns, target, order, batchId, delay = 0) {\\n  let totalWeakenThreadsNeeded = 0;\\n  if (order == 1) {\\n    totalWeakenThreadsNeeded = getWeakenThreads(ns, target);\\n    ns.print(\\\"Actual weaken1 threads needed: \\\" + totalWeakenThreadsNeeded);\\n  } else if (order == 2) {\\n    const growThreads = getGrowThreads(ns, target);\\n    const secIncrease = ns.growthAnalyzeSecurity(growThreads, target);\\n    totalWeakenThreadsNeeded = Math.ceil(secIncrease / ns.weakenAnalyze(1));\\n    ns.print(\\\"Actual weaken2 threads needed: \\\" + totalWeakenThreadsNeeded);\\n  } else {\\n    throw new Error(\\\"weaken order can only be either 1 or 2!\\\");\\n  }\\n  if (totalWeakenThreadsNeeded < 1) {\\n    ns.print(\\\"Weakenthreads are 0, skipping weak \\\" + order);\\n    return false;\\n  }\\n  const allHosts = getBestHostByRam(ns);\\n  const weakenScriptRam = 1.75;\\n  let threadsDispatched = 0;\\n  let threadsRemaining = totalWeakenThreadsNeeded;\\n  for (let i = 0; i < allHosts.length; i++) {\\n    if (threadsDispatched >= totalWeakenThreadsNeeded)\\n      break;\\n    const host = allHosts[i];\\n    const freeRam = host.availableRam;\\n    if (freeRam < weakenScriptRam)\\n      continue;\\n    const threadSpace = Math.floor(freeRam / weakenScriptRam);\\n    const threadsToDispatch = Math.min(threadsRemaining, threadSpace);\\n    ns.exec(\\\"weaken.js\\\", host.name, threadsToDispatch, target, delay);\\n    threadsRemaining -= threadsToDispatch;\\n    threadsDispatched += threadsToDispatch;\\n  }\\n  if (threadsRemaining <= 0) {\\n    ns.print(\\\"Done deploying weaken\\\" + order + \\\"!\\\");\\n    return true;\\n  }\\n  ns.print(\\n    Colors.YELLOW + \\\"There are \\\" + threadsRemaining + \\\" threads remaining after dispatching all threads, attempting to dispatch remaining threads on purchased server\\\"\\n  );\\n  const neededWeakenRam = threadsRemaining * weakenScriptRam;\\n  const server = ServerManager.buyOrUpgradeServer(ns, neededWeakenRam, \\\"weak\\\", batchId);\\n  if (server === \\\"\\\") {\\n    ns.tprint(\\\"Error! Could not buy server to weak \\\" + target);\\n    throw new Error(\\\"Error! Could not buy server to weak \\\" + target);\\n  }\\n  ns.exec(\\\"weaken.js\\\", server, threadsRemaining, target, delay);\\n  return true;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbkFsZ28udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QmVzdEhvc3RCeVJhbSB9IGZyb20gXCJAL2Jlc3RTZXJ2ZXJcIjtcclxuaW1wb3J0IHsgQ29sb3JzLCBnZXRHcm93VGhyZWFkcywgZ2V0V2Vha2VuVGhyZWFkcyB9IGZyb20gXCJAL2xpYlwiO1xyXG5pbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuaW1wb3J0IHsgU2VydmVyTWFuYWdlciB9IGZyb20gXCIuL1NlcnZlck1hbmFnZXJcIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgbnMudGFpbCgpO1xyXG4gICAgd2Vha2VuU2VydmVyKG5zLCBcImZvb2Ruc3R1ZmZcIiwgMSwgMCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBXZWFrZW5zIGEgc2VydmVyIGJ5IGV4ZWN1dGluZyB0aGUgd2Vha2VuLmpzIHNjcmlwdCB3aXRoIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIHRocmVhZHMuXHJcbiAqIFRoZSBudW1iZXIgb2YgdGhyZWFkcyBpcyBjYWxjdWxhdGVkIGJhc2VkIG9uIHRoZSBvcmRlciBvZiB3ZWFrZW5pbmcgYW5kIHRoZSB0YXJnZXQgc2VydmVyJ3MgcHJvcGVydGllcy5cclxuICpcclxuICogQHBhcmFtIG5zIC0gVGhlIE5ldFNjcmlwdEFQSSBvYmplY3QuXHJcbiAqIEBwYXJhbSB0YXJnZXQgLSBUaGUgbmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciB0byB3ZWFrZW4uXHJcbiAqIEBwYXJhbSBob3N0IC0gVGhlIG5hbWUgb2YgdGhlIGN1cnJlbnQgc2VydmVyIGhvc3RpbmcgdGhlIHdlYWtlbiBzY3JpcHQuXHJcbiAqIEBwYXJhbSBvcmRlciAtIFRoZSBvcmRlciBvZiB3ZWFrZW5pbmcuIENhbiBvbmx5IGJlIGVpdGhlciAxIG9yIDIuXHJcbiAqIEByZXR1cm5zIEEgYm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIHdlYWtlbiBvcGVyYXRpb24gd2FzIHN1Y2Nlc3NmdWwuXHJcbiAqIEB0aHJvd3MgQW4gZXJyb3IgaWYgdGhlIHdlYWtlbiBvcmRlciBpcyBub3QgMSBvciAyLCBvciBpZiB0aGVyZSBpcyBub3QgZW5vdWdoIGZyZWUgUkFNIHRvIGV4ZWN1dGUgdGhlIHdlYWtlbiBvcGVyYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gd2Vha2VuU2VydmVyKG5zOiBOUywgdGFyZ2V0OiBzdHJpbmcsIG9yZGVyOiBudW1iZXIsIGJhdGNoSWQ6IG51bWJlciwgZGVsYXkgPSAwKTogYm9vbGVhbiB7XHJcbiAgICBsZXQgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gMDtcclxuICAgIC8vIGNhbGN1bGF0ZSB3ZWFrZW5pbmcgdGhyZWFkcyBiYXNlZCBvbiB0aGUgb3JkZXJcclxuXHJcbiAgICBpZiAob3JkZXIgPT0gMSkge1xyXG4gICAgICAgIC8vIGZpcnN0IHdlYWsgaGFzIHRvIHdlYWtlbiBzZXJ2ZXIgdG8gbWluIGZyb20gdW5rbm93biBzZWMgbHZsXHJcbiAgICAgICAgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gZ2V0V2Vha2VuVGhyZWFkcyhucywgdGFyZ2V0KTtcclxuICAgICAgICBucy5wcmludChcIkFjdHVhbCB3ZWFrZW4xIHRocmVhZHMgbmVlZGVkOiBcIiArIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCk7XHJcbiAgICB9IGVsc2UgaWYgKG9yZGVyID09IDIpIHtcclxuICAgICAgICAvLyBzZWNvbmQgd2VhayBvbmx5IGhhcyB0byByZW1vdmUgdGhlIHNlYyBpbmNyZWFzZSBmcm9tIHRoZSBncm93IGJlZm9yZSAobW9yZSByYW0gZWZmaWNpZW50KVxyXG4gICAgICAgIGNvbnN0IGdyb3dUaHJlYWRzID0gZ2V0R3Jvd1RocmVhZHMobnMsIHRhcmdldCk7XHJcbiAgICAgICAgY29uc3Qgc2VjSW5jcmVhc2UgPSBucy5ncm93dGhBbmFseXplU2VjdXJpdHkoZ3Jvd1RocmVhZHMsIHRhcmdldCk7XHJcblxyXG4gICAgICAgIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCA9IE1hdGguY2VpbChzZWNJbmNyZWFzZSAvIG5zLndlYWtlbkFuYWx5emUoMSkpO1xyXG5cclxuICAgICAgICBucy5wcmludChcIkFjdHVhbCB3ZWFrZW4yIHRocmVhZHMgbmVlZGVkOiBcIiArIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIndlYWtlbiBvcmRlciBjYW4gb25seSBiZSBlaXRoZXIgMSBvciAyIVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkIDwgMSkge1xyXG4gICAgICAgIG5zLnByaW50KFwiV2Vha2VudGhyZWFkcyBhcmUgMCwgc2tpcHBpbmcgd2VhayBcIiArIG9yZGVyKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZXhlYyB3ZWFrZW4uanMgd2l0aCBudW0gb2YgdGhyZWFkc1xyXG4gICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtKG5zKTtcclxuICAgIGNvbnN0IHdlYWtlblNjcmlwdFJhbSA9IDEuNzU7XHJcblxyXG4gICAgbGV0IHRocmVhZHNEaXNwYXRjaGVkID0gMDtcclxuICAgIGxldCB0aHJlYWRzUmVtYWluaW5nID0gdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxIb3N0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmICh0aHJlYWRzRGlzcGF0Y2hlZCA+PSB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQpIGJyZWFrO1xyXG4gICAgICAgIGNvbnN0IGhvc3QgPSBhbGxIb3N0c1tpXTtcclxuXHJcbiAgICAgICAgY29uc3QgZnJlZVJhbSA9IGhvc3QuYXZhaWxhYmxlUmFtO1xyXG4gICAgICAgIGlmIChmcmVlUmFtIDwgd2Vha2VuU2NyaXB0UmFtKSBjb250aW51ZTtcclxuICAgICAgICBjb25zdCB0aHJlYWRTcGFjZSA9IE1hdGguZmxvb3IoZnJlZVJhbSAvIHdlYWtlblNjcmlwdFJhbSk7XHJcblxyXG4gICAgICAgIC8vIGlmIHRocmVhZHNSZW1haW5pbmcgaXMgbGVzcyB0aGFuIHRoZSB0aHJlYWRTcGFjZSwgdGhlbiB3ZSBjYW4gb25seSBkaXNwYXRjaCB0aHJlYWRzUmVtYWluaW5nIHRocmVhZHNcclxuICAgICAgICBjb25zdCB0aHJlYWRzVG9EaXNwYXRjaCA9IE1hdGgubWluKHRocmVhZHNSZW1haW5pbmcsIHRocmVhZFNwYWNlKTtcclxuXHJcbiAgICAgICAgbnMuZXhlYyhcIndlYWtlbi5qc1wiLCBob3N0Lm5hbWUsIHRocmVhZHNUb0Rpc3BhdGNoLCB0YXJnZXQsIGRlbGF5KTtcclxuICAgICAgICB0aHJlYWRzUmVtYWluaW5nIC09IHRocmVhZHNUb0Rpc3BhdGNoO1xyXG4gICAgICAgIHRocmVhZHNEaXNwYXRjaGVkICs9IHRocmVhZHNUb0Rpc3BhdGNoO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aHJlYWRzUmVtYWluaW5nIDw9IDApIHtcclxuICAgICAgICBucy5wcmludChcIkRvbmUgZGVwbG95aW5nIHdlYWtlblwiICsgb3JkZXIgKyBcIiFcIik7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBucy5wcmludChcclxuICAgICAgICBDb2xvcnMuWUVMTE9XICtcclxuICAgICAgICAgICAgXCJUaGVyZSBhcmUgXCIgK1xyXG4gICAgICAgICAgICB0aHJlYWRzUmVtYWluaW5nICtcclxuICAgICAgICAgICAgXCIgdGhyZWFkcyByZW1haW5pbmcgYWZ0ZXIgZGlzcGF0Y2hpbmcgYWxsIHRocmVhZHMsIGF0dGVtcHRpbmcgdG8gZGlzcGF0Y2ggcmVtYWluaW5nIHRocmVhZHMgb24gcHVyY2hhc2VkIHNlcnZlclwiLFxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBuZWVkZWRXZWFrZW5SYW0gPSB0aHJlYWRzUmVtYWluaW5nICogd2Vha2VuU2NyaXB0UmFtO1xyXG4gICAgY29uc3Qgc2VydmVyID0gU2VydmVyTWFuYWdlci5idXlPclVwZ3JhZGVTZXJ2ZXIobnMsIG5lZWRlZFdlYWtlblJhbSwgXCJ3ZWFrXCIsIGJhdGNoSWQpO1xyXG5cclxuICAgIGlmIChzZXJ2ZXIgPT09IFwiXCIpIHtcclxuICAgICAgICBucy50cHJpbnQoXCJFcnJvciEgQ291bGQgbm90IGJ1eSBzZXJ2ZXIgdG8gd2VhayBcIiArIHRhcmdldCk7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIHdlYWsgXCIgKyB0YXJnZXQpO1xyXG4gICAgfVxyXG5cclxuICAgIG5zLmV4ZWMoXCJ3ZWFrZW4uanNcIiwgc2VydmVyLCB0aHJlYWRzUmVtYWluaW5nLCB0YXJnZXQsIGRlbGF5KTtcclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsd0JBQXdCO0FBQ2pDLFNBQVMsUUFBUSxnQkFBZ0Isd0JBQXdCO0FBRXpELFNBQVMscUJBQXFCO0FBRTlCLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsZUFBYSxJQUFJLGNBQWMsR0FBRyxDQUFDO0FBQ3ZDO0FBYU8sZ0JBQVMsYUFBYSxJQUFRLFFBQWdCLE9BQWUsU0FBaUIsUUFBUSxHQUFZO0FBQ3JHLE1BQUksMkJBQTJCO0FBRy9CLE1BQUksU0FBUyxHQUFHO0FBRVosK0JBQTJCLGlCQUFpQixJQUFJLE1BQU07QUFDdEQsT0FBRyxNQUFNLG9DQUFvQyx3QkFBd0I7QUFBQSxFQUN6RSxXQUFXLFNBQVMsR0FBRztBQUVuQixVQUFNLGNBQWMsZUFBZSxJQUFJLE1BQU07QUFDN0MsVUFBTSxjQUFjLEdBQUcsc0JBQXNCLGFBQWEsTUFBTTtBQUVoRSwrQkFBMkIsS0FBSyxLQUFLLGNBQWMsR0FBRyxjQUFjLENBQUMsQ0FBQztBQUV0RSxPQUFHLE1BQU0sb0NBQW9DLHdCQUF3QjtBQUFBLEVBQ3pFLE9BQU87QUFDSCxVQUFNLElBQUksTUFBTSx5Q0FBeUM7QUFBQSxFQUM3RDtBQUVBLE1BQUksMkJBQTJCLEdBQUc7QUFDOUIsT0FBRyxNQUFNLHdDQUF3QyxLQUFLO0FBQ3RELFdBQU87QUFBQSxFQUNYO0FBR0EsUUFBTSxXQUFXLGlCQUFpQixFQUFFO0FBQ3BDLFFBQU0sa0JBQWtCO0FBRXhCLE1BQUksb0JBQW9CO0FBQ3hCLE1BQUksbUJBQW1CO0FBQ3ZCLFdBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsUUFBSSxxQkFBcUI7QUFBMEI7QUFDbkQsVUFBTSxPQUFPLFNBQVMsQ0FBQztBQUV2QixVQUFNLFVBQVUsS0FBSztBQUNyQixRQUFJLFVBQVU7QUFBaUI7QUFDL0IsVUFBTSxjQUFjLEtBQUssTUFBTSxVQUFVLGVBQWU7QUFHeEQsVUFBTSxvQkFBb0IsS0FBSyxJQUFJLGtCQUFrQixXQUFXO0FBRWhFLE9BQUcsS0FBSyxhQUFhLEtBQUssTUFBTSxtQkFBbUIsUUFBUSxLQUFLO0FBQ2hFLHdCQUFvQjtBQUNwQix5QkFBcUI7QUFBQSxFQUN6QjtBQUVBLE1BQUksb0JBQW9CLEdBQUc7QUFDdkIsT0FBRyxNQUFNLDBCQUEwQixRQUFRLEdBQUc7QUFDOUMsV0FBTztBQUFBLEVBQ1g7QUFDQSxLQUFHO0FBQUEsSUFDQyxPQUFPLFNBQ0gsZUFDQSxtQkFDQTtBQUFBLEVBQ1I7QUFFQSxRQUFNLGtCQUFrQixtQkFBbUI7QUFDM0MsUUFBTSxTQUFTLGNBQWMsbUJBQW1CLElBQUksaUJBQWlCLFFBQVEsT0FBTztBQUVwRixNQUFJLFdBQVcsSUFBSTtBQUNmLE9BQUcsT0FBTyx5Q0FBeUMsTUFBTTtBQUN6RCxVQUFNLElBQUksTUFBTSx5Q0FBeUMsTUFBTTtBQUFBLEVBQ25FO0FBRUEsS0FBRyxLQUFLLGFBQWEsUUFBUSxrQkFBa0IsUUFBUSxLQUFLO0FBRTVELFNBQU87QUFDWDsiLCJuYW1lcyI6W119\",\"filename\":\"parallel/weakenAlgo.js\",\"server\":\"home\"}}],[\"serverStats.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Colors } from \\\"/lib.js\\\";\\nconst BORDER_COLOR = Colors.CYAN;\\nlet maxMoney = 0;\\nlet curMoney = 0;\\nlet hackingChance = 0;\\nlet minSec = 0;\\nlet curSec = 0;\\nlet maxRam = 0;\\nlet useRam = 0;\\nlet freeRam = 0;\\nlet moneyMultiplier = 0;\\nlet growingThreads = 0;\\nlet serverWeakenThreadsCur = 0;\\nlet hackThreads = 0;\\nlet headerString = \\\"\\\";\\nlet footerString = \\\"\\\";\\nlet hackingPercent = 0;\\nexport function printServerStats(ns, server, hackThreshold) {\\n  setStats(ns, server, hackThreshold);\\n  ns.print(BORDER_COLOR + headerString + Colors.RESET);\\n  printStatLine(ns, \\\"Money:\\\", false);\\n  printStatLine(ns, \\\"Max Money: \\\" + ns.formatNumber(maxMoney) + \\\" | Current Money: \\\" + ns.formatNumber(curMoney));\\n  printStatLine(\\n    ns,\\n    \\\"Percent: \\\" + ns.formatNumber(curMoney / maxMoney) + \\\" | Hack Chance: \\\" + ns.formatNumber(hackingChance)\\n  );\\n  printStatLine(ns, \\\"Security:\\\", false);\\n  printStatLine(ns, \\\"Min Seclvl: \\\" + minSec + \\\" | Current Seclvl: \\\" + ns.formatNumber(curSec));\\n  printStatLine(ns, \\\"Ram:\\\", false);\\n  printStatLine(ns, \\\"Server Max Ram: \\\" + maxRam);\\n  printStatLine(ns, \\\"Used Ram: \\\" + useRam + \\\" | free Ram: \\\" + freeRam);\\n  printStatLine(ns, \\\"Threads:\\\", false);\\n  printStatLine(ns, \\\"Grow Threads: \\\" + growingThreads);\\n  printStatLine(ns, \\\"Weaken Threads \\\" + serverWeakenThreadsCur);\\n  printStatLine(ns, \\\"Hack Threads: \\\" + hackThreads + \\\" | Hack percent: \\\" + ns.formatNumber(hackingPercent, 5));\\n  ns.print(BORDER_COLOR + footerString + Colors.RESET);\\n}\\nexport function printServerStatsConsole() {\\n}\\nfunction setStats(ns, server, hackThreshold) {\\n  maxMoney = ns.getServerMaxMoney(server);\\n  curMoney = ns.getServerMoneyAvailable(server);\\n  hackingChance = ns.hackAnalyzeChance(server);\\n  minSec = ns.getServerMinSecurityLevel(server);\\n  curSec = ns.getServerSecurityLevel(server);\\n  maxRam = ns.getServerMaxRam(server);\\n  useRam = ns.getServerUsedRam(server);\\n  freeRam = maxRam - useRam;\\n  moneyMultiplier = maxMoney / curMoney;\\n  if (isNaN(moneyMultiplier) || moneyMultiplier == Infinity)\\n    moneyMultiplier = 1;\\n  growingThreads = Math.ceil(ns.growthAnalyze(server, moneyMultiplier));\\n  serverWeakenThreadsCur = Math.ceil((curSec - ns.getServerMinSecurityLevel(server)) / 0.05);\\n  hackingPercent = ns.hackAnalyze(server);\\n  hackThreads = Math.ceil(hackThreshold / hackingPercent);\\n  if (isNaN(hackThreads) || hackThreads == Infinity)\\n    hackThreads = 0;\\n  if (isNaN(hackingPercent) || hackingPercent == Infinity)\\n    hackingPercent = 0;\\n  headerString = \\\"┌───────────────── stats for \\\" + server + \\\" ─────────────────┐\\\";\\n  footerString = \\\"└\\\" + \\\"─\\\".repeat(headerString.length - 2) + \\\"┘\\\";\\n}\\nfunction printStatLine(ns, value, indent = true) {\\n  if (indent)\\n    value = \\\"\\t\\\" + value;\\n  const offset = indent ? 8 : 3;\\n  ns.print(\\n    BORDER_COLOR + \\\"│ \\\" + Colors.RESET + value + \\\" \\\".repeat(headerString.length - value.length - offset) + BORDER_COLOR + \\\"│\\\" + Colors.RESET\\n  );\\n}\\nexport function autocomplete(data) {\\n  return [...data.servers];\\n}\\nexport async function main(ns) {\\n  ns.clearLog();\\n  ns.tail();\\n  ns.resizeTail(542, 375);\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    ns.clearLog();\\n    printServerStats(ns, ns.args[0].toString(), 0.9);\\n    await ns.sleep(100);\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlclN0YXRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xuaW1wb3J0IHsgQ29sb3JzIH0gZnJvbSBcIi4vbGliXCI7XG5cbmNvbnN0IEJPUkRFUl9DT0xPUiA9IENvbG9ycy5DWUFOO1xuXG5sZXQgbWF4TW9uZXkgPSAwO1xubGV0IGN1ck1vbmV5ID0gMDtcbmxldCBoYWNraW5nQ2hhbmNlID0gMDtcbmxldCBtaW5TZWMgPSAwO1xubGV0IGN1clNlYyA9IDA7XG5sZXQgbWF4UmFtID0gMDtcbmxldCB1c2VSYW0gPSAwO1xubGV0IGZyZWVSYW0gPSAwO1xubGV0IG1vbmV5TXVsdGlwbGllciA9IDA7XG5sZXQgZ3Jvd2luZ1RocmVhZHMgPSAwO1xubGV0IHNlcnZlcldlYWtlblRocmVhZHNDdXIgPSAwO1xubGV0IGhhY2tUaHJlYWRzID0gMDtcbmxldCBoZWFkZXJTdHJpbmcgPSBcIlwiO1xubGV0IGZvb3RlclN0cmluZyA9IFwiXCI7XG5sZXQgaGFja2luZ1BlcmNlbnQgPSAwO1xuXG5leHBvcnQgZnVuY3Rpb24gcHJpbnRTZXJ2ZXJTdGF0cyhuczogTlMsIHNlcnZlcjogc3RyaW5nLCBoYWNrVGhyZXNob2xkOiBudW1iZXIpIHtcbiAgICBzZXRTdGF0cyhucywgc2VydmVyLCBoYWNrVGhyZXNob2xkKTtcblxuICAgIG5zLnByaW50KEJPUkRFUl9DT0xPUiArIGhlYWRlclN0cmluZyArIENvbG9ycy5SRVNFVCk7XG5cbiAgICBwcmludFN0YXRMaW5lKG5zLCBcIk1vbmV5OlwiLCBmYWxzZSk7XG4gICAgcHJpbnRTdGF0TGluZShucywgXCJNYXggTW9uZXk6IFwiICsgbnMuZm9ybWF0TnVtYmVyKG1heE1vbmV5KSArIFwiIHwgQ3VycmVudCBNb25leTogXCIgKyBucy5mb3JtYXROdW1iZXIoY3VyTW9uZXkpKTtcbiAgICBwcmludFN0YXRMaW5lKFxuICAgICAgICBucyxcbiAgICAgICAgXCJQZXJjZW50OiBcIiArIG5zLmZvcm1hdE51bWJlcihjdXJNb25leSAvIG1heE1vbmV5KSArIFwiIHwgSGFjayBDaGFuY2U6IFwiICsgbnMuZm9ybWF0TnVtYmVyKGhhY2tpbmdDaGFuY2UpLFxuICAgICk7XG5cbiAgICBwcmludFN0YXRMaW5lKG5zLCBcIlNlY3VyaXR5OlwiLCBmYWxzZSk7XG4gICAgcHJpbnRTdGF0TGluZShucywgXCJNaW4gU2VjbHZsOiBcIiArIG1pblNlYyArIFwiIHwgQ3VycmVudCBTZWNsdmw6IFwiICsgbnMuZm9ybWF0TnVtYmVyKGN1clNlYykpO1xuXG4gICAgcHJpbnRTdGF0TGluZShucywgXCJSYW06XCIsIGZhbHNlKTtcbiAgICBwcmludFN0YXRMaW5lKG5zLCBcIlNlcnZlciBNYXggUmFtOiBcIiArIG1heFJhbSk7XG4gICAgcHJpbnRTdGF0TGluZShucywgXCJVc2VkIFJhbTogXCIgKyB1c2VSYW0gKyBcIiB8IGZyZWUgUmFtOiBcIiArIGZyZWVSYW0pO1xuXG4gICAgcHJpbnRTdGF0TGluZShucywgXCJUaHJlYWRzOlwiLCBmYWxzZSk7XG4gICAgcHJpbnRTdGF0TGluZShucywgXCJHcm93IFRocmVhZHM6IFwiICsgZ3Jvd2luZ1RocmVhZHMpO1xuICAgIHByaW50U3RhdExpbmUobnMsIFwiV2Vha2VuIFRocmVhZHMgXCIgKyBzZXJ2ZXJXZWFrZW5UaHJlYWRzQ3VyKTtcbiAgICBwcmludFN0YXRMaW5lKG5zLCBcIkhhY2sgVGhyZWFkczogXCIgKyBoYWNrVGhyZWFkcyArIFwiIHwgSGFjayBwZXJjZW50OiBcIiArIG5zLmZvcm1hdE51bWJlcihoYWNraW5nUGVyY2VudCwgNSkpO1xuXG4gICAgbnMucHJpbnQoQk9SREVSX0NPTE9SICsgZm9vdGVyU3RyaW5nICsgQ29sb3JzLlJFU0VUKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByaW50U2VydmVyU3RhdHNDb25zb2xlKCkge1xuICAgIC8vIHRvZG9cbn1cblxuZnVuY3Rpb24gc2V0U3RhdHMobnM6IE5TLCBzZXJ2ZXI6IHN0cmluZywgaGFja1RocmVzaG9sZDogbnVtYmVyKSB7XG4gICAgLy8gbW9uZXlcbiAgICBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XG4gICAgY3VyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShzZXJ2ZXIpO1xuICAgIGhhY2tpbmdDaGFuY2UgPSBucy5oYWNrQW5hbHl6ZUNoYW5jZShzZXJ2ZXIpO1xuICAgIC8vIHNlYyBsdmxcbiAgICBtaW5TZWMgPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlcik7XG4gICAgY3VyU2VjID0gbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbChzZXJ2ZXIpO1xuICAgIC8vIHJhbVxuICAgIG1heFJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzZXJ2ZXIpO1xuICAgIHVzZVJhbSA9IG5zLmdldFNlcnZlclVzZWRSYW0oc2VydmVyKTtcbiAgICBmcmVlUmFtID0gbWF4UmFtIC0gdXNlUmFtO1xuICAgIC8vIHRocmVhZHNcblxuICAgIG1vbmV5TXVsdGlwbGllciA9IG1heE1vbmV5IC8gY3VyTW9uZXk7XG4gICAgaWYgKGlzTmFOKG1vbmV5TXVsdGlwbGllcikgfHwgbW9uZXlNdWx0aXBsaWVyID09IEluZmluaXR5KSBtb25leU11bHRpcGxpZXIgPSAxO1xuXG4gICAgZ3Jvd2luZ1RocmVhZHMgPSBNYXRoLmNlaWwobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIG1vbmV5TXVsdGlwbGllcikpO1xuXG4gICAgc2VydmVyV2Vha2VuVGhyZWFkc0N1ciA9IE1hdGguY2VpbCgoY3VyU2VjIC0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpKSAvIDAuMDUpO1xuXG4gICAgaGFja2luZ1BlcmNlbnQgPSBucy5oYWNrQW5hbHl6ZShzZXJ2ZXIpO1xuICAgIGhhY2tUaHJlYWRzID0gTWF0aC5jZWlsKGhhY2tUaHJlc2hvbGQgLyBoYWNraW5nUGVyY2VudCk7XG4gICAgaWYgKGlzTmFOKGhhY2tUaHJlYWRzKSB8fCBoYWNrVGhyZWFkcyA9PSBJbmZpbml0eSkgaGFja1RocmVhZHMgPSAwO1xuICAgIGlmIChpc05hTihoYWNraW5nUGVyY2VudCkgfHwgaGFja2luZ1BlcmNlbnQgPT0gSW5maW5pdHkpIGhhY2tpbmdQZXJjZW50ID0gMDtcblxuICAgIGhlYWRlclN0cmluZyA9IFwi4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIHN0YXRzIGZvciBcIiArIHNlcnZlciArIFwiIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkFwiO1xuICAgIGZvb3RlclN0cmluZyA9IFwi4pSUXCIgKyBcIuKUgFwiLnJlcGVhdChoZWFkZXJTdHJpbmcubGVuZ3RoIC0gMikgKyBcIuKUmFwiO1xufVxuXG5mdW5jdGlvbiBwcmludFN0YXRMaW5lKG5zOiBOUywgdmFsdWU6IHN0cmluZywgaW5kZW50ID0gdHJ1ZSkge1xuICAgIGlmIChpbmRlbnQpIHZhbHVlID0gXCJcXHRcIiArIHZhbHVlO1xuICAgIGNvbnN0IG9mZnNldCA9IGluZGVudCA/IDggOiAzOyAvLyB0aGUgb2Zmc2V0IHRvIHN1YnRyYWN0IHRoZSBib3JkZXIgYW5kIGluZGVudFxuICAgIG5zLnByaW50KFxuICAgICAgICBCT1JERVJfQ09MT1IgK1xuICAgICAgICAgICAgXCLilIIgXCIgK1xuICAgICAgICAgICAgQ29sb3JzLlJFU0VUICtcbiAgICAgICAgICAgIHZhbHVlICtcbiAgICAgICAgICAgIFwiIFwiLnJlcGVhdChoZWFkZXJTdHJpbmcubGVuZ3RoIC0gdmFsdWUubGVuZ3RoIC0gb2Zmc2V0KSArXG4gICAgICAgICAgICBCT1JERVJfQ09MT1IgK1xuICAgICAgICAgICAgXCLilIJcIiArXG4gICAgICAgICAgICBDb2xvcnMuUkVTRVQsXG4gICAgKTtcbn1cblxuaW50ZXJmYWNlIEF1dG9jb21wbGV0ZURhdGEge1xuICAgIHNlcnZlcnM6IHN0cmluZ1tdO1xuICAgIHR4dHM6IHN0cmluZ1tdO1xuICAgIHNjcmlwdHM6IHN0cmluZ1tdO1xuICAgIGZsYWdzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF1dG9jb21wbGV0ZShkYXRhOiBBdXRvY29tcGxldGVEYXRhKSB7XG4gICAgcmV0dXJuIFsuLi5kYXRhLnNlcnZlcnNdO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBucy5jbGVhckxvZygpO1xuICAgIG5zLnRhaWwoKTtcbiAgICBucy5yZXNpemVUYWlsKDU0MiwgMzc1KTtcbiAgICBucy5kaXNhYmxlTG9nKFwiQUxMXCIpO1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIG5zLmNsZWFyTG9nKCk7XG4gICAgICAgIHByaW50U2VydmVyU3RhdHMobnMsIG5zLmFyZ3NbMF0udG9TdHJpbmcoKSwgMC45KTtcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoMTAwKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLFNBQVMsY0FBYztBQUV2QixNQUFNLGVBQWUsT0FBTztBQUU1QixJQUFJLFdBQVc7QUFDZixJQUFJLFdBQVc7QUFDZixJQUFJLGdCQUFnQjtBQUNwQixJQUFJLFNBQVM7QUFDYixJQUFJLFNBQVM7QUFDYixJQUFJLFNBQVM7QUFDYixJQUFJLFNBQVM7QUFDYixJQUFJLFVBQVU7QUFDZCxJQUFJLGtCQUFrQjtBQUN0QixJQUFJLGlCQUFpQjtBQUNyQixJQUFJLHlCQUF5QjtBQUM3QixJQUFJLGNBQWM7QUFDbEIsSUFBSSxlQUFlO0FBQ25CLElBQUksZUFBZTtBQUNuQixJQUFJLGlCQUFpQjtBQUVkLGdCQUFTLGlCQUFpQixJQUFRLFFBQWdCLGVBQXVCO0FBQzVFLFdBQVMsSUFBSSxRQUFRLGFBQWE7QUFFbEMsS0FBRyxNQUFNLGVBQWUsZUFBZSxPQUFPLEtBQUs7QUFFbkQsZ0JBQWMsSUFBSSxVQUFVLEtBQUs7QUFDakMsZ0JBQWMsSUFBSSxnQkFBZ0IsR0FBRyxhQUFhLFFBQVEsSUFBSSx1QkFBdUIsR0FBRyxhQUFhLFFBQVEsQ0FBQztBQUM5RztBQUFBLElBQ0k7QUFBQSxJQUNBLGNBQWMsR0FBRyxhQUFhLFdBQVcsUUFBUSxJQUFJLHFCQUFxQixHQUFHLGFBQWEsYUFBYTtBQUFBLEVBQzNHO0FBRUEsZ0JBQWMsSUFBSSxhQUFhLEtBQUs7QUFDcEMsZ0JBQWMsSUFBSSxpQkFBaUIsU0FBUyx3QkFBd0IsR0FBRyxhQUFhLE1BQU0sQ0FBQztBQUUzRixnQkFBYyxJQUFJLFFBQVEsS0FBSztBQUMvQixnQkFBYyxJQUFJLHFCQUFxQixNQUFNO0FBQzdDLGdCQUFjLElBQUksZUFBZSxTQUFTLGtCQUFrQixPQUFPO0FBRW5FLGdCQUFjLElBQUksWUFBWSxLQUFLO0FBQ25DLGdCQUFjLElBQUksbUJBQW1CLGNBQWM7QUFDbkQsZ0JBQWMsSUFBSSxvQkFBb0Isc0JBQXNCO0FBQzVELGdCQUFjLElBQUksbUJBQW1CLGNBQWMsc0JBQXNCLEdBQUcsYUFBYSxnQkFBZ0IsQ0FBQyxDQUFDO0FBRTNHLEtBQUcsTUFBTSxlQUFlLGVBQWUsT0FBTyxLQUFLO0FBQ3ZEO0FBRU8sZ0JBQVMsMEJBQTBCO0FBRTFDO0FBRUEsU0FBUyxTQUFTLElBQVEsUUFBZ0IsZUFBdUI7QUFFN0QsYUFBVyxHQUFHLGtCQUFrQixNQUFNO0FBQ3RDLGFBQVcsR0FBRyx3QkFBd0IsTUFBTTtBQUM1QyxrQkFBZ0IsR0FBRyxrQkFBa0IsTUFBTTtBQUUzQyxXQUFTLEdBQUcsMEJBQTBCLE1BQU07QUFDNUMsV0FBUyxHQUFHLHVCQUF1QixNQUFNO0FBRXpDLFdBQVMsR0FBRyxnQkFBZ0IsTUFBTTtBQUNsQyxXQUFTLEdBQUcsaUJBQWlCLE1BQU07QUFDbkMsWUFBVSxTQUFTO0FBR25CLG9CQUFrQixXQUFXO0FBQzdCLE1BQUksTUFBTSxlQUFlLEtBQUssbUJBQW1CO0FBQVUsc0JBQWtCO0FBRTdFLG1CQUFpQixLQUFLLEtBQUssR0FBRyxjQUFjLFFBQVEsZUFBZSxDQUFDO0FBRXBFLDJCQUF5QixLQUFLLE1BQU0sU0FBUyxHQUFHLDBCQUEwQixNQUFNLEtBQUssSUFBSTtBQUV6RixtQkFBaUIsR0FBRyxZQUFZLE1BQU07QUFDdEMsZ0JBQWMsS0FBSyxLQUFLLGdCQUFnQixjQUFjO0FBQ3RELE1BQUksTUFBTSxXQUFXLEtBQUssZUFBZTtBQUFVLGtCQUFjO0FBQ2pFLE1BQUksTUFBTSxjQUFjLEtBQUssa0JBQWtCO0FBQVUscUJBQWlCO0FBRTFFLGlCQUFlLGtDQUFrQyxTQUFTO0FBQzFELGlCQUFlLE1BQU0sSUFBSSxPQUFPLGFBQWEsU0FBUyxDQUFDLElBQUk7QUFDL0Q7QUFFQSxTQUFTLGNBQWMsSUFBUSxPQUFlLFNBQVMsTUFBTTtBQUN6RCxNQUFJO0FBQVEsWUFBUSxNQUFPO0FBQzNCLFFBQU0sU0FBUyxTQUFTLElBQUk7QUFDNUIsS0FBRztBQUFBLElBQ0MsZUFDSSxPQUNBLE9BQU8sUUFDUCxRQUNBLElBQUksT0FBTyxhQUFhLFNBQVMsTUFBTSxTQUFTLE1BQU0sSUFDdEQsZUFDQSxNQUNBLE9BQU87QUFBQSxFQUNmO0FBQ0o7QUFTTyxnQkFBUyxhQUFhLE1BQXdCO0FBQ2pELFNBQU8sQ0FBQyxHQUFHLEtBQUssT0FBTztBQUMzQjtBQUVBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxTQUFTO0FBQ1osS0FBRyxLQUFLO0FBQ1IsS0FBRyxXQUFXLEtBQUssR0FBRztBQUN0QixLQUFHLFdBQVcsS0FBSztBQUNuQixTQUFPLE1BQU07QUFDVCxPQUFHLFNBQVM7QUFDWixxQkFBaUIsSUFBSSxHQUFHLEtBQUssQ0FBQyxFQUFFLFNBQVMsR0FBRyxHQUFHO0FBQy9DLFVBQU0sR0FBRyxNQUFNLEdBQUc7QUFBQSxFQUN0QjtBQUNKOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"serverStats.js\",\"server\":\"home\"}}],[\"bestServer.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { isHackable, nukeServer, serverScanner } from \\\"/lib.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  getBestServerList(ns, true);\\n}\\nexport function getBestServerList(ns, shouldPrint) {\\n  const serverList = serverScanner(ns);\\n  const servers = [];\\n  for (let i = 0; i < serverList.length; i++) {\\n    if (!isHackable(ns, serverList[i])) {\\n      continue;\\n    }\\n    nukeServer(ns, serverList[i]);\\n    const maxMoney = ns.getServerMaxMoney(serverList[i]);\\n    const hackingChance = ns.hackAnalyzeChance(serverList[i]);\\n    let weakeningTime = ns.getWeakenTime(serverList[i]);\\n    const maxRam = ns.getServerMaxRam(serverList[i]);\\n    if (maxMoney < 1 || ns.getServerRequiredHackingLevel(serverList[i]) > ns.getHackingLevel())\\n      continue;\\n    let score = maxMoney / ns.getServerMinSecurityLevel(serverList[i]) / 1e6;\\n    if (ns.fileExists(\\\"formulas.exe\\\", \\\"home\\\")) {\\n      const server2 = ns.getServer(serverList[i]);\\n      const player = ns.getPlayer();\\n      server2.hackDifficulty = server2.minDifficulty;\\n      const maxMoney2 = server2.moneyMax == void 0 ? 0 : server2.moneyMax;\\n      weakeningTime = ns.formulas.hacking.weakenTime(server2, player);\\n      score = maxMoney2 / weakeningTime * ns.formulas.hacking.hackChance(server2, player) / 1e3;\\n    }\\n    const server = {\\n      name: serverList[i],\\n      maxMoney,\\n      hackingChance,\\n      weakeningTime,\\n      maxRam,\\n      availableRam: maxRam - ns.getServerUsedRam(serverList[i]),\\n      score\\n    };\\n    servers.push(server);\\n  }\\n  servers.sort((a, b) => {\\n    return (b.score || 0) - (a.score || 0);\\n  });\\n  if (shouldPrint)\\n    printTable(ns, servers);\\n  return servers;\\n}\\nexport function getBestServer(ns) {\\n  const servers = getBestServerList(ns, false);\\n  return servers[0].name;\\n}\\nexport function getBestHostByRam(ns) {\\n  const allHosts = getBestServerListCheap(ns, false).filter((server) => {\\n    return server.availableRam > 2;\\n  });\\n  const home = {\\n    name: \\\"home\\\",\\n    maxRam: ns.getServerMaxRam(\\\"home\\\") - 50,\\n    availableRam: ns.getServerMaxRam(\\\"home\\\") - ns.getServerUsedRam(\\\"home\\\") - 50,\\n    score: 0\\n  };\\n  allHosts.push(home);\\n  const purchasedServers = ns.getPurchasedServers();\\n  for (let i = 0; i < purchasedServers.length; i++) {\\n    const server = {\\n      name: purchasedServers[i],\\n      maxRam: ns.getServerMaxRam(purchasedServers[i]),\\n      availableRam: ns.getServerMaxRam(purchasedServers[i]) - ns.getServerUsedRam(purchasedServers[i]),\\n      score: 0\\n    };\\n    if (server.maxRam > 2) {\\n      allHosts.push(server);\\n    }\\n  }\\n  allHosts.sort((a, b) => {\\n    return a.availableRam - b.availableRam;\\n  });\\n  return allHosts;\\n}\\nexport function getBestServerListCheap(ns, shouldPrint) {\\n  const serverList = serverScanner(ns);\\n  const servers = [];\\n  for (let i = 0; i < serverList.length; i++) {\\n    const serverName = serverList[i];\\n    if (!isHackable(ns, serverName))\\n      continue;\\n    const maxMoney = ns.getServerMaxMoney(serverName);\\n    const maxRam = ns.getServerMaxRam(serverName);\\n    if (maxMoney < 1 || ns.getServerRequiredHackingLevel(serverList[i]) > ns.getHackingLevel())\\n      continue;\\n    const score = maxMoney / ns.getServerMinSecurityLevel(serverName) / 1e6;\\n    const server = {\\n      name: serverName,\\n      maxMoney,\\n      maxRam,\\n      availableRam: maxRam - ns.getServerUsedRam(serverName),\\n      score\\n    };\\n    servers.push(server);\\n  }\\n  servers.sort((a, b) => {\\n    return (b.score || 0) - (a.score || 0);\\n  });\\n  if (shouldPrint)\\n    printTable(ns, servers);\\n  return servers;\\n}\\nexport function printTable(ns, array) {\\n  const tableArray = [];\\n  for (let i = 0; i < array.length; i++) {\\n    if (array[i].maxMoney === void 0)\\n      array[i].maxMoney = 0;\\n    if (array[i].hackingChance === void 0)\\n      array[i].hackingChance = 0;\\n    if (array[i].weakeningTime === void 0)\\n      array[i].weakeningTime = 0;\\n    const server = {\\n      name: array[i].name,\\n      maxMoney: ns.formatNumber(Number(array[i].maxMoney)),\\n      hackingChance: ns.formatNumber(Number(array[i].hackingChance)),\\n      weakeningTime: ns.formatNumber(Number(array[i].weakeningTime) / 1e3),\\n      //ns.formatNumber(Number(array[i].weakeningTime), 4),\\n      score: ns.formatNumber(Number(array[i].score))\\n    };\\n    tableArray.push(server);\\n  }\\n  ns.print(\\\"╔════════════════════╦══════════╦════════╦═══════════╦═════════╗\\\");\\n  ns.print(\\\"║       server       ║   Max $  ║ chance ║ Weak time ║  score  ║\\\");\\n  ns.print(\\\"╠════════════════════╬══════════╬════════╬═══════════╬═════════╣\\\");\\n  for (let i = 0; i < tableArray.length; i++) {\\n    ns.print(\\n      \\\"║ \\\" + tableArray[i].name + space(tableArray[i].name.length, 0) + \\\"║ \\\" + tableArray[i].maxMoney + space(tableArray[i].maxMoney.length, 1) + \\\"║ \\\" + tableArray[i].hackingChance + space(tableArray[i].hackingChance.length, 2) + \\\"║ \\\" + tableArray[i].weakeningTime + space(tableArray[i].weakeningTime.length, 3) + \\\"║ \\\" + tableArray[i].score + space(tableArray[i].score.length, 4) + \\\"║\\\"\\n    );\\n  }\\n  ns.print(\\\"╚════════════════════╩══════════╩════════╩═══════════╩═════════╝\\\");\\n}\\nfunction space(len, colIndex) {\\n  const colLen = [19, 9, 7, 10, 8];\\n  const real = colLen[colIndex] - len;\\n  let str = \\\"\\\";\\n  for (let i = 0; i < real; i++) {\\n    str += \\\" \\\";\\n  }\\n  return str;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJlc3RTZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBpc0hhY2thYmxlLCBudWtlU2VydmVyLCBzZXJ2ZXJTY2FubmVyIH0gZnJvbSBcIi4vbGliLmpzXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZlciB7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBtYXhNb25leT86IG51bWJlcjtcclxuICAgIGhhY2tpbmdDaGFuY2U/OiBudW1iZXI7XHJcbiAgICB3ZWFrZW5pbmdUaW1lPzogbnVtYmVyO1xyXG4gICAgbWF4UmFtOiBudW1iZXI7XHJcbiAgICBhdmFpbGFibGVSYW06IG51bWJlcjtcclxuICAgIHNjb3JlOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgbnMudGFpbCgpO1xyXG4gICAgbnMuZGlzYWJsZUxvZyhcIkFMTFwiKTtcclxuICAgIGdldEJlc3RTZXJ2ZXJMaXN0KG5zLCB0cnVlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEJlc3RTZXJ2ZXJMaXN0KG5zOiBOUywgc2hvdWxkUHJpbnQ6IGJvb2xlYW4pIHtcclxuICAgIGNvbnN0IHNlcnZlckxpc3QgPSBzZXJ2ZXJTY2FubmVyKG5zKTtcclxuXHJcbiAgICAvLyByZWxldmFudCBzdGF0cyBhcmUgbWF4IG1vbmV5IGFuZCBoYWNrIGNoYW5jZVxyXG4gICAgLy8gcG9zc2libGUgZm9ybXVsYTogKE1heCBNb25leSAvIHdlYWt0aW1lICsgMykgKiAoMSAvIHdlYWsgdGltZSkgKiAoY2hhbmNlIHRvIGhhY2spXHJcbiAgICBjb25zdCBzZXJ2ZXJzOiBTZXJ2ZXJbXSA9IFtdO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VydmVyTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmICghaXNIYWNrYWJsZShucywgc2VydmVyTGlzdFtpXSkpIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG51a2VTZXJ2ZXIobnMsIHNlcnZlckxpc3RbaV0pO1xyXG5cclxuICAgICAgICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlckxpc3RbaV0pO1xyXG4gICAgICAgIGNvbnN0IGhhY2tpbmdDaGFuY2UgPSBucy5oYWNrQW5hbHl6ZUNoYW5jZShzZXJ2ZXJMaXN0W2ldKTtcclxuICAgICAgICBsZXQgd2Vha2VuaW5nVGltZSA9IG5zLmdldFdlYWtlblRpbWUoc2VydmVyTGlzdFtpXSk7XHJcbiAgICAgICAgY29uc3QgbWF4UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNlcnZlckxpc3RbaV0pO1xyXG5cclxuICAgICAgICAvLyBmaWx0ZXIgc2VydmVyIHdpdGggbm8gbW9uZXkgb3IgdGhlIGhhY2tpbmcgbGV2ZWwgYWJvdmUgcGxheWVycyBoYWNraW5nIGxldmVsXHJcbiAgICAgICAgaWYgKG1heE1vbmV5IDwgMSB8fCBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzZXJ2ZXJMaXN0W2ldKSA+IG5zLmdldEhhY2tpbmdMZXZlbCgpKSBjb250aW51ZTtcclxuXHJcbiAgICAgICAgLy8gY29uc3Qgc2NvcmUgPSAobWF4TW9uZXkgLyAod2Vha2VuaW5nVGltZSArIDMpKSAqIGhhY2tpbmdDaGFuY2UgKiAoMSAvIHdlYWtlbmluZ1RpbWUpXHJcbiAgICAgICAgLy8gY29uc3Qgc2NvcmUgPSBucy5mb3JtYXROdW1iZXIoKChtYXhNb25leSAvICh3ZWFrZW5pbmdUaW1lKSkgKiBoYWNraW5nQ2hhbmNlKSAvIDEwMDApXHJcbiAgICAgICAgbGV0IHNjb3JlID0gbWF4TW9uZXkgLyBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlckxpc3RbaV0pIC8gMTAwMDAwMDtcclxuXHJcbiAgICAgICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJmb3JtdWxhcy5leGVcIiwgXCJob21lXCIpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlcnZlciA9IG5zLmdldFNlcnZlcihzZXJ2ZXJMaXN0W2ldKTtcclxuICAgICAgICAgICAgY29uc3QgcGxheWVyID0gbnMuZ2V0UGxheWVyKCk7XHJcbiAgICAgICAgICAgIHNlcnZlci5oYWNrRGlmZmljdWx0eSA9IHNlcnZlci5taW5EaWZmaWN1bHR5O1xyXG4gICAgICAgICAgICBjb25zdCBtYXhNb25leSA9IHNlcnZlci5tb25leU1heCA9PSB1bmRlZmluZWQgPyAwIDogc2VydmVyLm1vbmV5TWF4O1xyXG4gICAgICAgICAgICB3ZWFrZW5pbmdUaW1lID0gbnMuZm9ybXVsYXMuaGFja2luZy53ZWFrZW5UaW1lKHNlcnZlciwgcGxheWVyKTtcclxuICAgICAgICAgICAgc2NvcmUgPSAoKG1heE1vbmV5IC8gd2Vha2VuaW5nVGltZSkgKiBucy5mb3JtdWxhcy5oYWNraW5nLmhhY2tDaGFuY2Uoc2VydmVyLCBwbGF5ZXIpKSAvIDEwMDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBzZXJ2ZXI6IFNlcnZlciA9IHtcclxuICAgICAgICAgICAgbmFtZTogc2VydmVyTGlzdFtpXSxcclxuICAgICAgICAgICAgbWF4TW9uZXk6IG1heE1vbmV5LFxyXG4gICAgICAgICAgICBoYWNraW5nQ2hhbmNlOiBoYWNraW5nQ2hhbmNlLFxyXG4gICAgICAgICAgICB3ZWFrZW5pbmdUaW1lOiB3ZWFrZW5pbmdUaW1lLFxyXG4gICAgICAgICAgICBtYXhSYW06IG1heFJhbSxcclxuICAgICAgICAgICAgYXZhaWxhYmxlUmFtOiBtYXhSYW0gLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlckxpc3RbaV0pLFxyXG4gICAgICAgICAgICBzY29yZTogc2NvcmUsXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgc2VydmVycy5wdXNoKHNlcnZlcik7XHJcbiAgICB9XHJcblxyXG4gICAgc2VydmVycy5zb3J0KChhLCBiKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIChiLnNjb3JlIHx8IDApIC0gKGEuc2NvcmUgfHwgMCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoc2hvdWxkUHJpbnQpIHByaW50VGFibGUobnMsIHNlcnZlcnMpO1xyXG5cclxuICAgIHJldHVybiBzZXJ2ZXJzO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVzdFNlcnZlcihuczogTlMpOiBzdHJpbmcge1xyXG4gICAgY29uc3Qgc2VydmVycyA9IGdldEJlc3RTZXJ2ZXJMaXN0KG5zLCBmYWxzZSk7XHJcbiAgICByZXR1cm4gc2VydmVyc1swXS5uYW1lO1xyXG59XHJcblxyXG4vLyBUT0RPOiBjaGFuZ2UgdG8gYXZhaWxhYmxlIHJhbVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVzdEhvc3RCeVJhbShuczogTlMpOiBTZXJ2ZXJbXSB7XHJcbiAgICBjb25zdCBhbGxIb3N0cyA9IGdldEJlc3RTZXJ2ZXJMaXN0Q2hlYXAobnMsIGZhbHNlKS5maWx0ZXIoKHNlcnZlcikgPT4ge1xyXG4gICAgICAgIHJldHVybiBzZXJ2ZXIuYXZhaWxhYmxlUmFtID4gMjtcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IGhvbWU6IFNlcnZlciA9IHtcclxuICAgICAgICBuYW1lOiBcImhvbWVcIixcclxuICAgICAgICBtYXhSYW06IG5zLmdldFNlcnZlck1heFJhbShcImhvbWVcIikgLSA1MCxcclxuICAgICAgICBhdmFpbGFibGVSYW06IG5zLmdldFNlcnZlck1heFJhbShcImhvbWVcIikgLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKFwiaG9tZVwiKSAtIDUwLFxyXG4gICAgICAgIHNjb3JlOiAwLFxyXG4gICAgfTsgLy8gMTAgc29tZSBzYWZldHkgbWFyZ2luXHJcbiAgICBhbGxIb3N0cy5wdXNoKGhvbWUpO1xyXG5cclxuICAgIGNvbnN0IHB1cmNoYXNlZFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCk7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHB1cmNoYXNlZFNlcnZlcnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCBzZXJ2ZXI6IFNlcnZlciA9IHtcclxuICAgICAgICAgICAgbmFtZTogcHVyY2hhc2VkU2VydmVyc1tpXSxcclxuICAgICAgICAgICAgbWF4UmFtOiBucy5nZXRTZXJ2ZXJNYXhSYW0ocHVyY2hhc2VkU2VydmVyc1tpXSksXHJcbiAgICAgICAgICAgIGF2YWlsYWJsZVJhbTogbnMuZ2V0U2VydmVyTWF4UmFtKHB1cmNoYXNlZFNlcnZlcnNbaV0pIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShwdXJjaGFzZWRTZXJ2ZXJzW2ldKSxcclxuICAgICAgICAgICAgc2NvcmU6IDAsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAoc2VydmVyLm1heFJhbSA+IDIpIHtcclxuICAgICAgICAgICAgYWxsSG9zdHMucHVzaChzZXJ2ZXIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBzb3J0IGJ5IHJhbSBpbiBhc2NlbmRpbmcgb3JkZXJcclxuICAgIGFsbEhvc3RzLnNvcnQoKGEsIGIpID0+IHtcclxuICAgICAgICByZXR1cm4gYS5hdmFpbGFibGVSYW0gLSBiLmF2YWlsYWJsZVJhbTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBhbGxIb3N0cztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEJlc3RTZXJ2ZXJMaXN0Q2hlYXAobnM6IE5TLCBzaG91bGRQcmludDogYm9vbGVhbik6IFNlcnZlcltdIHtcclxuICAgIGNvbnN0IHNlcnZlckxpc3QgPSBzZXJ2ZXJTY2FubmVyKG5zKTtcclxuXHJcbiAgICBjb25zdCBzZXJ2ZXJzOiBTZXJ2ZXJbXSA9IFtdO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VydmVyTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGNvbnN0IHNlcnZlck5hbWUgPSBzZXJ2ZXJMaXN0W2ldO1xyXG4gICAgICAgIGlmICghaXNIYWNrYWJsZShucywgc2VydmVyTmFtZSkpIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICBjb25zdCBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlck5hbWUpO1xyXG4gICAgICAgIGNvbnN0IG1heFJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzZXJ2ZXJOYW1lKTtcclxuXHJcbiAgICAgICAgLy8gZmlsdGVyIHNlcnZlciB3aXRoIG5vIG1vbmV5IG9yIHRoZSBoYWNraW5nIGxldmVsIGFib3ZlIHBsYXllcnMgaGFja2luZyBsZXZlbFxyXG4gICAgICAgIGlmIChtYXhNb25leSA8IDEgfHwgbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc2VydmVyTGlzdFtpXSkgPiBucy5nZXRIYWNraW5nTGV2ZWwoKSkgY29udGludWU7XHJcblxyXG4gICAgICAgIGNvbnN0IHNjb3JlID0gbWF4TW9uZXkgLyBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlck5hbWUpIC8gMTAwMDAwMDtcclxuXHJcbiAgICAgICAgY29uc3Qgc2VydmVyOiBTZXJ2ZXIgPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IHNlcnZlck5hbWUsXHJcbiAgICAgICAgICAgIG1heE1vbmV5OiBtYXhNb25leSxcclxuICAgICAgICAgICAgbWF4UmFtOiBtYXhSYW0sXHJcbiAgICAgICAgICAgIGF2YWlsYWJsZVJhbTogbWF4UmFtIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShzZXJ2ZXJOYW1lKSxcclxuICAgICAgICAgICAgc2NvcmU6IHNjb3JlLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgc2VydmVycy5wdXNoKHNlcnZlcik7XHJcbiAgICB9XHJcblxyXG4gICAgc2VydmVycy5zb3J0KChhLCBiKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIChiLnNjb3JlIHx8IDApIC0gKGEuc2NvcmUgfHwgMCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoc2hvdWxkUHJpbnQpIHByaW50VGFibGUobnMsIHNlcnZlcnMpO1xyXG5cclxuICAgIHJldHVybiBzZXJ2ZXJzO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcHJpbnRUYWJsZShuczogTlMsIGFycmF5OiBTZXJ2ZXJbXSkge1xyXG4gICAgLy8gc2FuaXR5IGNoZWNrICsgbnVtYmVyIGZvcm1hdHRpbmdcclxuICAgIGludGVyZmFjZSBUYWJsZVNlcnZlciB7XHJcbiAgICAgICAgbmFtZTogc3RyaW5nO1xyXG4gICAgICAgIG1heE1vbmV5OiBzdHJpbmc7XHJcbiAgICAgICAgaGFja2luZ0NoYW5jZTogc3RyaW5nO1xyXG4gICAgICAgIHdlYWtlbmluZ1RpbWU6IHN0cmluZztcclxuICAgICAgICBzY29yZTogc3RyaW5nO1xyXG4gICAgfVxyXG4gICAgY29uc3QgdGFibGVBcnJheTogVGFibGVTZXJ2ZXJbXSA9IFtdO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAoYXJyYXlbaV0ubWF4TW9uZXkgPT09IHVuZGVmaW5lZCkgYXJyYXlbaV0ubWF4TW9uZXkgPSAwO1xyXG4gICAgICAgIGlmIChhcnJheVtpXS5oYWNraW5nQ2hhbmNlID09PSB1bmRlZmluZWQpIGFycmF5W2ldLmhhY2tpbmdDaGFuY2UgPSAwO1xyXG4gICAgICAgIGlmIChhcnJheVtpXS53ZWFrZW5pbmdUaW1lID09PSB1bmRlZmluZWQpIGFycmF5W2ldLndlYWtlbmluZ1RpbWUgPSAwO1xyXG5cclxuICAgICAgICBjb25zdCBzZXJ2ZXI6IFRhYmxlU2VydmVyID0ge1xyXG4gICAgICAgICAgICBuYW1lOiBhcnJheVtpXS5uYW1lLFxyXG4gICAgICAgICAgICBtYXhNb25leTogbnMuZm9ybWF0TnVtYmVyKE51bWJlcihhcnJheVtpXS5tYXhNb25leSkpLFxyXG4gICAgICAgICAgICBoYWNraW5nQ2hhbmNlOiBucy5mb3JtYXROdW1iZXIoTnVtYmVyKGFycmF5W2ldLmhhY2tpbmdDaGFuY2UpKSxcclxuICAgICAgICAgICAgd2Vha2VuaW5nVGltZTogbnMuZm9ybWF0TnVtYmVyKE51bWJlcihhcnJheVtpXS53ZWFrZW5pbmdUaW1lKSAvIDEwMDApLCAvL25zLmZvcm1hdE51bWJlcihOdW1iZXIoYXJyYXlbaV0ud2Vha2VuaW5nVGltZSksIDQpLFxyXG4gICAgICAgICAgICBzY29yZTogbnMuZm9ybWF0TnVtYmVyKE51bWJlcihhcnJheVtpXS5zY29yZSkpLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGFibGVBcnJheS5wdXNoKHNlcnZlcik7XHJcbiAgICB9XHJcblxyXG4gICAgbnMucHJpbnQoXCLilZTilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilabilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilabilZDilZDilZDilZDilZDilZDilZDilZDilabilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilabilZDilZDilZDilZDilZDilZDilZDilZDilZDilZdcIik7XHJcbiAgICBucy5wcmludChcIuKVkSAgICAgICBzZXJ2ZXIgICAgICAg4pWRICAgTWF4ICQgIOKVkSBjaGFuY2Ug4pWRIFdlYWsgdGltZSDilZEgIHNjb3JlICDilZFcIik7XHJcbiAgICBucy5wcmludChcIuKVoOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVrOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVrOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVrOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVrOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVo1wiKTtcclxuICAgIC8vIHBvbGx1dGluZyB0YWJsZSB3aXRoIGRhdGFcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFibGVBcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIG5zLnByaW50KFxyXG4gICAgICAgICAgICBcIuKVkSBcIiArXHJcbiAgICAgICAgICAgICAgICB0YWJsZUFycmF5W2ldLm5hbWUgK1xyXG4gICAgICAgICAgICAgICAgc3BhY2UodGFibGVBcnJheVtpXS5uYW1lLmxlbmd0aCwgMCkgK1xyXG4gICAgICAgICAgICAgICAgXCLilZEgXCIgK1xyXG4gICAgICAgICAgICAgICAgdGFibGVBcnJheVtpXS5tYXhNb25leSArXHJcbiAgICAgICAgICAgICAgICBzcGFjZSh0YWJsZUFycmF5W2ldLm1heE1vbmV5Lmxlbmd0aCwgMSkgK1xyXG4gICAgICAgICAgICAgICAgXCLilZEgXCIgK1xyXG4gICAgICAgICAgICAgICAgdGFibGVBcnJheVtpXS5oYWNraW5nQ2hhbmNlICtcclxuICAgICAgICAgICAgICAgIHNwYWNlKHRhYmxlQXJyYXlbaV0uaGFja2luZ0NoYW5jZS5sZW5ndGgsIDIpICtcclxuICAgICAgICAgICAgICAgIFwi4pWRIFwiICtcclxuICAgICAgICAgICAgICAgIHRhYmxlQXJyYXlbaV0ud2Vha2VuaW5nVGltZSArXHJcbiAgICAgICAgICAgICAgICBzcGFjZSh0YWJsZUFycmF5W2ldLndlYWtlbmluZ1RpbWUubGVuZ3RoLCAzKSArXHJcbiAgICAgICAgICAgICAgICBcIuKVkSBcIiArXHJcbiAgICAgICAgICAgICAgICB0YWJsZUFycmF5W2ldLnNjb3JlICtcclxuICAgICAgICAgICAgICAgIHNwYWNlKHRhYmxlQXJyYXlbaV0uc2NvcmUubGVuZ3RoLCA0KSArXHJcbiAgICAgICAgICAgICAgICBcIuKVkVwiLFxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgbnMucHJpbnQoXCLilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilanilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilanilZDilZDilZDilZDilZDilZDilZDilZDilanilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilanilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ1cIik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNwYWNlKGxlbjogbnVtYmVyLCBjb2xJbmRleDogbnVtYmVyKSB7XHJcbiAgICAvLyB3aXRoIG9mIHRoZSBjZWxsIGNvbnRlbnRcclxuICAgIGNvbnN0IGNvbExlbiA9IFsxOSwgOSwgNywgMTAsIDhdO1xyXG4gICAgY29uc3QgcmVhbCA9IGNvbExlbltjb2xJbmRleF0gLSBsZW47XHJcbiAgICBsZXQgc3RyID0gXCJcIjtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVhbDsgaSsrKSB7XHJcbiAgICAgICAgc3RyICs9IFwiIFwiO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHN0cjtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUVBLFNBQVMsWUFBWSxZQUFZLHFCQUFxQjtBQVl0RCxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLEtBQUcsS0FBSztBQUNSLEtBQUcsV0FBVyxLQUFLO0FBQ25CLG9CQUFrQixJQUFJLElBQUk7QUFDOUI7QUFFTyxnQkFBUyxrQkFBa0IsSUFBUSxhQUFzQjtBQUM1RCxRQUFNLGFBQWEsY0FBYyxFQUFFO0FBSW5DLFFBQU0sVUFBb0IsQ0FBQztBQUUzQixXQUFTLElBQUksR0FBRyxJQUFJLFdBQVcsUUFBUSxLQUFLO0FBQ3hDLFFBQUksQ0FBQyxXQUFXLElBQUksV0FBVyxDQUFDLENBQUMsR0FBRztBQUNoQztBQUFBLElBQ0o7QUFDQSxlQUFXLElBQUksV0FBVyxDQUFDLENBQUM7QUFFNUIsVUFBTSxXQUFXLEdBQUcsa0JBQWtCLFdBQVcsQ0FBQyxDQUFDO0FBQ25ELFVBQU0sZ0JBQWdCLEdBQUcsa0JBQWtCLFdBQVcsQ0FBQyxDQUFDO0FBQ3hELFFBQUksZ0JBQWdCLEdBQUcsY0FBYyxXQUFXLENBQUMsQ0FBQztBQUNsRCxVQUFNLFNBQVMsR0FBRyxnQkFBZ0IsV0FBVyxDQUFDLENBQUM7QUFHL0MsUUFBSSxXQUFXLEtBQUssR0FBRyw4QkFBOEIsV0FBVyxDQUFDLENBQUMsSUFBSSxHQUFHLGdCQUFnQjtBQUFHO0FBSTVGLFFBQUksUUFBUSxXQUFXLEdBQUcsMEJBQTBCLFdBQVcsQ0FBQyxDQUFDLElBQUk7QUFFckUsUUFBSSxHQUFHLFdBQVcsZ0JBQWdCLE1BQU0sR0FBRztBQUN2QyxZQUFNQSxVQUFTLEdBQUcsVUFBVSxXQUFXLENBQUMsQ0FBQztBQUN6QyxZQUFNLFNBQVMsR0FBRyxVQUFVO0FBQzVCLE1BQUFBLFFBQU8saUJBQWlCQSxRQUFPO0FBQy9CLFlBQU1DLFlBQVdELFFBQU8sWUFBWSxTQUFZLElBQUlBLFFBQU87QUFDM0Qsc0JBQWdCLEdBQUcsU0FBUyxRQUFRLFdBQVdBLFNBQVEsTUFBTTtBQUM3RCxjQUFVQyxZQUFXLGdCQUFpQixHQUFHLFNBQVMsUUFBUSxXQUFXRCxTQUFRLE1BQU0sSUFBSztBQUFBLElBQzVGO0FBRUEsVUFBTSxTQUFpQjtBQUFBLE1BQ25CLE1BQU0sV0FBVyxDQUFDO0FBQUEsTUFDbEI7QUFBQSxNQUNBO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBLGNBQWMsU0FBUyxHQUFHLGlCQUFpQixXQUFXLENBQUMsQ0FBQztBQUFBLE1BQ3hEO0FBQUEsSUFDSjtBQUVBLFlBQVEsS0FBSyxNQUFNO0FBQUEsRUFDdkI7QUFFQSxVQUFRLEtBQUssQ0FBQyxHQUFHLE1BQU07QUFDbkIsWUFBUSxFQUFFLFNBQVMsTUFBTSxFQUFFLFNBQVM7QUFBQSxFQUN4QyxDQUFDO0FBRUQsTUFBSTtBQUFhLGVBQVcsSUFBSSxPQUFPO0FBRXZDLFNBQU87QUFDWDtBQUVPLGdCQUFTLGNBQWMsSUFBZ0I7QUFDMUMsUUFBTSxVQUFVLGtCQUFrQixJQUFJLEtBQUs7QUFDM0MsU0FBTyxRQUFRLENBQUMsRUFBRTtBQUN0QjtBQUdPLGdCQUFTLGlCQUFpQixJQUFrQjtBQUMvQyxRQUFNLFdBQVcsdUJBQXVCLElBQUksS0FBSyxFQUFFLE9BQU8sQ0FBQyxXQUFXO0FBQ2xFLFdBQU8sT0FBTyxlQUFlO0FBQUEsRUFDakMsQ0FBQztBQUVELFFBQU0sT0FBZTtBQUFBLElBQ2pCLE1BQU07QUFBQSxJQUNOLFFBQVEsR0FBRyxnQkFBZ0IsTUFBTSxJQUFJO0FBQUEsSUFDckMsY0FBYyxHQUFHLGdCQUFnQixNQUFNLElBQUksR0FBRyxpQkFBaUIsTUFBTSxJQUFJO0FBQUEsSUFDekUsT0FBTztBQUFBLEVBQ1g7QUFDQSxXQUFTLEtBQUssSUFBSTtBQUVsQixRQUFNLG1CQUFtQixHQUFHLG9CQUFvQjtBQUNoRCxXQUFTLElBQUksR0FBRyxJQUFJLGlCQUFpQixRQUFRLEtBQUs7QUFDOUMsVUFBTSxTQUFpQjtBQUFBLE1BQ25CLE1BQU0saUJBQWlCLENBQUM7QUFBQSxNQUN4QixRQUFRLEdBQUcsZ0JBQWdCLGlCQUFpQixDQUFDLENBQUM7QUFBQSxNQUM5QyxjQUFjLEdBQUcsZ0JBQWdCLGlCQUFpQixDQUFDLENBQUMsSUFBSSxHQUFHLGlCQUFpQixpQkFBaUIsQ0FBQyxDQUFDO0FBQUEsTUFDL0YsT0FBTztBQUFBLElBQ1g7QUFDQSxRQUFJLE9BQU8sU0FBUyxHQUFHO0FBQ25CLGVBQVMsS0FBSyxNQUFNO0FBQUEsSUFDeEI7QUFBQSxFQUNKO0FBR0EsV0FBUyxLQUFLLENBQUMsR0FBRyxNQUFNO0FBQ3BCLFdBQU8sRUFBRSxlQUFlLEVBQUU7QUFBQSxFQUM5QixDQUFDO0FBRUQsU0FBTztBQUNYO0FBRU8sZ0JBQVMsdUJBQXVCLElBQVEsYUFBZ0M7QUFDM0UsUUFBTSxhQUFhLGNBQWMsRUFBRTtBQUVuQyxRQUFNLFVBQW9CLENBQUM7QUFFM0IsV0FBUyxJQUFJLEdBQUcsSUFBSSxXQUFXLFFBQVEsS0FBSztBQUN4QyxVQUFNLGFBQWEsV0FBVyxDQUFDO0FBQy9CLFFBQUksQ0FBQyxXQUFXLElBQUksVUFBVTtBQUFHO0FBRWpDLFVBQU0sV0FBVyxHQUFHLGtCQUFrQixVQUFVO0FBQ2hELFVBQU0sU0FBUyxHQUFHLGdCQUFnQixVQUFVO0FBRzVDLFFBQUksV0FBVyxLQUFLLEdBQUcsOEJBQThCLFdBQVcsQ0FBQyxDQUFDLElBQUksR0FBRyxnQkFBZ0I7QUFBRztBQUU1RixVQUFNLFFBQVEsV0FBVyxHQUFHLDBCQUEwQixVQUFVLElBQUk7QUFFcEUsVUFBTSxTQUFpQjtBQUFBLE1BQ25CLE1BQU07QUFBQSxNQUNOO0FBQUEsTUFDQTtBQUFBLE1BQ0EsY0FBYyxTQUFTLEdBQUcsaUJBQWlCLFVBQVU7QUFBQSxNQUNyRDtBQUFBLElBQ0o7QUFDQSxZQUFRLEtBQUssTUFBTTtBQUFBLEVBQ3ZCO0FBRUEsVUFBUSxLQUFLLENBQUMsR0FBRyxNQUFNO0FBQ25CLFlBQVEsRUFBRSxTQUFTLE1BQU0sRUFBRSxTQUFTO0FBQUEsRUFDeEMsQ0FBQztBQUVELE1BQUk7QUFBYSxlQUFXLElBQUksT0FBTztBQUV2QyxTQUFPO0FBQ1g7QUFFTyxnQkFBUyxXQUFXLElBQVEsT0FBaUI7QUFTaEQsUUFBTSxhQUE0QixDQUFDO0FBRW5DLFdBQVMsSUFBSSxHQUFHLElBQUksTUFBTSxRQUFRLEtBQUs7QUFDbkMsUUFBSSxNQUFNLENBQUMsRUFBRSxhQUFhO0FBQVcsWUFBTSxDQUFDLEVBQUUsV0FBVztBQUN6RCxRQUFJLE1BQU0sQ0FBQyxFQUFFLGtCQUFrQjtBQUFXLFlBQU0sQ0FBQyxFQUFFLGdCQUFnQjtBQUNuRSxRQUFJLE1BQU0sQ0FBQyxFQUFFLGtCQUFrQjtBQUFXLFlBQU0sQ0FBQyxFQUFFLGdCQUFnQjtBQUVuRSxVQUFNLFNBQXNCO0FBQUEsTUFDeEIsTUFBTSxNQUFNLENBQUMsRUFBRTtBQUFBLE1BQ2YsVUFBVSxHQUFHLGFBQWEsT0FBTyxNQUFNLENBQUMsRUFBRSxRQUFRLENBQUM7QUFBQSxNQUNuRCxlQUFlLEdBQUcsYUFBYSxPQUFPLE1BQU0sQ0FBQyxFQUFFLGFBQWEsQ0FBQztBQUFBLE1BQzdELGVBQWUsR0FBRyxhQUFhLE9BQU8sTUFBTSxDQUFDLEVBQUUsYUFBYSxJQUFJLEdBQUk7QUFBQTtBQUFBLE1BQ3BFLE9BQU8sR0FBRyxhQUFhLE9BQU8sTUFBTSxDQUFDLEVBQUUsS0FBSyxDQUFDO0FBQUEsSUFDakQ7QUFDQSxlQUFXLEtBQUssTUFBTTtBQUFBLEVBQzFCO0FBRUEsS0FBRyxNQUFNLGtFQUFrRTtBQUMzRSxLQUFHLE1BQU0sa0VBQWtFO0FBQzNFLEtBQUcsTUFBTSxrRUFBa0U7QUFFM0UsV0FBUyxJQUFJLEdBQUcsSUFBSSxXQUFXLFFBQVEsS0FBSztBQUN4QyxPQUFHO0FBQUEsTUFDQyxPQUNJLFdBQVcsQ0FBQyxFQUFFLE9BQ2QsTUFBTSxXQUFXLENBQUMsRUFBRSxLQUFLLFFBQVEsQ0FBQyxJQUNsQyxPQUNBLFdBQVcsQ0FBQyxFQUFFLFdBQ2QsTUFBTSxXQUFXLENBQUMsRUFBRSxTQUFTLFFBQVEsQ0FBQyxJQUN0QyxPQUNBLFdBQVcsQ0FBQyxFQUFFLGdCQUNkLE1BQU0sV0FBVyxDQUFDLEVBQUUsY0FBYyxRQUFRLENBQUMsSUFDM0MsT0FDQSxXQUFXLENBQUMsRUFBRSxnQkFDZCxNQUFNLFdBQVcsQ0FBQyxFQUFFLGNBQWMsUUFBUSxDQUFDLElBQzNDLE9BQ0EsV0FBVyxDQUFDLEVBQUUsUUFDZCxNQUFNLFdBQVcsQ0FBQyxFQUFFLE1BQU0sUUFBUSxDQUFDLElBQ25DO0FBQUEsSUFDUjtBQUFBLEVBQ0o7QUFFQSxLQUFHLE1BQU0sa0VBQWtFO0FBQy9FO0FBRUEsU0FBUyxNQUFNLEtBQWEsVUFBa0I7QUFFMUMsUUFBTSxTQUFTLENBQUMsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDO0FBQy9CLFFBQU0sT0FBTyxPQUFPLFFBQVEsSUFBSTtBQUNoQyxNQUFJLE1BQU07QUFDVixXQUFTLElBQUksR0FBRyxJQUFJLE1BQU0sS0FBSztBQUMzQixXQUFPO0FBQUEsRUFDWDtBQUNBLFNBQU87QUFDWDsiLCJuYW1lcyI6WyJzZXJ2ZXIiLCJtYXhNb25leSJdfQ==\",\"filename\":\"bestServer.js\",\"server\":\"home\"}}],[\"loop/hackingAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRam } from \\\"/bestServer.js\\\";\\nimport { getHackThreads } from \\\"/lib.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  await hackServer(ns, \\\"foodnstuff\\\", 0.8);\\n}\\nexport async function hackServer(ns, target, threshold) {\\n  const safetyMarginMs = Config.DELAY_MARGIN_MS;\\n  const targetHackThreads = getHackThreads(ns, target, threshold);\\n  const hackingScriptRam = Config.HACK_SCRIPT_RAM;\\n  ns.print(\\n    \\\"total hack threads needed: \\\" + targetHackThreads + \\\" money available: \\\" + ns.getServerMoneyAvailable(target)\\n  );\\n  const allHosts = getBestHostByRam(ns);\\n  const totalMaxRam = allHosts.reduce((acc, server) => {\\n    return acc + server.maxRam;\\n  }, 0);\\n  const numRuns = Math.ceil(targetHackThreads / totalMaxRam);\\n  ns.print(\\\"total RAM: \\\" + totalMaxRam + \\\" numRuns: \\\" + numRuns + \\\"\\\\nthreads to finish: \\\" + targetHackThreads);\\n  let sumThreadsDone = 0;\\n  while (sumThreadsDone < targetHackThreads) {\\n    const hackingTime = ns.getHackTime(target);\\n    for (let i = 0; i < allHosts.length; i++) {\\n      if (sumThreadsDone >= targetHackThreads)\\n        break;\\n      const host = allHosts[i];\\n      const freeRam = host.maxRam - ns.getServerUsedRam(host.name);\\n      const numThreadsOnHost = Math.floor(freeRam / hackingScriptRam);\\n      ns.exec(\\\"hack.js\\\", host.name, numThreadsOnHost, target, 0);\\n      sumThreadsDone += numThreadsOnHost;\\n    }\\n    await ns.sleep(hackingTime + safetyMarginMs);\\n    ns.print(\\\"done with \\\" + sumThreadsDone + \\\"/\\\" + targetHackThreads + \\\" hacks\\\");\\n  }\\n  ns.print(\\\"Done hacking!\\\");\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2tpbmdBbGdvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbmZpZyB9IGZyb20gXCJAL0NvbmZpZy9Db25maWdcIjtcbmltcG9ydCB7IGdldEJlc3RIb3N0QnlSYW0gfSBmcm9tIFwiQC9iZXN0U2VydmVyXCI7XG5pbXBvcnQgeyBnZXRIYWNrVGhyZWFkcyB9IGZyb20gXCJAL2xpYlwiO1xuaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIG5zLnRhaWwoKTtcbiAgICBhd2FpdCBoYWNrU2VydmVyKG5zLCBcImZvb2Ruc3R1ZmZcIiwgMC44KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhY2tTZXJ2ZXIobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgdGhyZXNob2xkOiBudW1iZXIpIHtcbiAgICBjb25zdCBzYWZldHlNYXJnaW5NcyA9IENvbmZpZy5ERUxBWV9NQVJHSU5fTVM7XG5cbiAgICAvL2NvbnN0IGhhY2tDaGFuY2UgPSBucy5oYWNrQW5hbHl6ZUNoYW5jZSh0YXJnZXQpIC8vIHRvZG9cbiAgICBjb25zdCB0YXJnZXRIYWNrVGhyZWFkcyA9IGdldEhhY2tUaHJlYWRzKG5zLCB0YXJnZXQsIHRocmVzaG9sZCk7XG4gICAgY29uc3QgaGFja2luZ1NjcmlwdFJhbSA9IENvbmZpZy5IQUNLX1NDUklQVF9SQU07XG5cbiAgICBucy5wcmludChcbiAgICAgICAgXCJ0b3RhbCBoYWNrIHRocmVhZHMgbmVlZGVkOiBcIiArIHRhcmdldEhhY2tUaHJlYWRzICsgXCIgbW9uZXkgYXZhaWxhYmxlOiBcIiArIG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCksXG4gICAgKTtcblxuICAgIGNvbnN0IGFsbEhvc3RzID0gZ2V0QmVzdEhvc3RCeVJhbShucyk7XG5cbiAgICBjb25zdCB0b3RhbE1heFJhbSA9IGFsbEhvc3RzLnJlZHVjZSgoYWNjLCBzZXJ2ZXIpID0+IHtcbiAgICAgICAgcmV0dXJuIGFjYyArIHNlcnZlci5tYXhSYW07XG4gICAgfSwgMCk7XG4gICAgY29uc3QgbnVtUnVucyA9IE1hdGguY2VpbCh0YXJnZXRIYWNrVGhyZWFkcyAvIHRvdGFsTWF4UmFtKTtcblxuICAgIG5zLnByaW50KFwidG90YWwgUkFNOiBcIiArIHRvdGFsTWF4UmFtICsgXCIgbnVtUnVuczogXCIgKyBudW1SdW5zICsgXCJcXG50aHJlYWRzIHRvIGZpbmlzaDogXCIgKyB0YXJnZXRIYWNrVGhyZWFkcyk7XG5cbiAgICBsZXQgc3VtVGhyZWFkc0RvbmUgPSAwO1xuICAgIHdoaWxlIChzdW1UaHJlYWRzRG9uZSA8IHRhcmdldEhhY2tUaHJlYWRzKSB7XG4gICAgICAgIGNvbnN0IGhhY2tpbmdUaW1lID0gbnMuZ2V0SGFja1RpbWUodGFyZ2V0KTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxIb3N0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHN1bVRocmVhZHNEb25lID49IHRhcmdldEhhY2tUaHJlYWRzKSBicmVhaztcblxuICAgICAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xuICAgICAgICAgICAgY29uc3QgZnJlZVJhbSA9IGhvc3QubWF4UmFtIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShob3N0Lm5hbWUpO1xuXG4gICAgICAgICAgICBjb25zdCBudW1UaHJlYWRzT25Ib3N0ID0gTWF0aC5mbG9vcihmcmVlUmFtIC8gaGFja2luZ1NjcmlwdFJhbSk7XG5cbiAgICAgICAgICAgIG5zLmV4ZWMoXCJoYWNrLmpzXCIsIGhvc3QubmFtZSwgbnVtVGhyZWFkc09uSG9zdCwgdGFyZ2V0LCAwKTtcbiAgICAgICAgICAgIHN1bVRocmVhZHNEb25lICs9IG51bVRocmVhZHNPbkhvc3Q7XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoaGFja2luZ1RpbWUgKyBzYWZldHlNYXJnaW5Ncyk7XG4gICAgICAgIG5zLnByaW50KFwiZG9uZSB3aXRoIFwiICsgc3VtVGhyZWFkc0RvbmUgKyBcIi9cIiArIHRhcmdldEhhY2tUaHJlYWRzICsgXCIgaGFja3NcIik7XG4gICAgfVxuXG4gICAgbnMucHJpbnQoXCJEb25lIGhhY2tpbmchXCIpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLGNBQWM7QUFDdkIsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyxzQkFBc0I7QUFHL0Isc0JBQXNCLEtBQUssSUFBUTtBQUMvQixLQUFHLEtBQUs7QUFDUixRQUFNLFdBQVcsSUFBSSxjQUFjLEdBQUc7QUFDMUM7QUFFQSxzQkFBc0IsV0FBVyxJQUFRLFFBQWdCLFdBQW1CO0FBQ3hFLFFBQU0saUJBQWlCLE9BQU87QUFHOUIsUUFBTSxvQkFBb0IsZUFBZSxJQUFJLFFBQVEsU0FBUztBQUM5RCxRQUFNLG1CQUFtQixPQUFPO0FBRWhDLEtBQUc7QUFBQSxJQUNDLGdDQUFnQyxvQkFBb0IsdUJBQXVCLEdBQUcsd0JBQXdCLE1BQU07QUFBQSxFQUNoSDtBQUVBLFFBQU0sV0FBVyxpQkFBaUIsRUFBRTtBQUVwQyxRQUFNLGNBQWMsU0FBUyxPQUFPLENBQUMsS0FBSyxXQUFXO0FBQ2pELFdBQU8sTUFBTSxPQUFPO0FBQUEsRUFDeEIsR0FBRyxDQUFDO0FBQ0osUUFBTSxVQUFVLEtBQUssS0FBSyxvQkFBb0IsV0FBVztBQUV6RCxLQUFHLE1BQU0sZ0JBQWdCLGNBQWMsZUFBZSxVQUFVLDBCQUEwQixpQkFBaUI7QUFFM0csTUFBSSxpQkFBaUI7QUFDckIsU0FBTyxpQkFBaUIsbUJBQW1CO0FBQ3ZDLFVBQU0sY0FBYyxHQUFHLFlBQVksTUFBTTtBQUN6QyxhQUFTLElBQUksR0FBRyxJQUFJLFNBQVMsUUFBUSxLQUFLO0FBQ3RDLFVBQUksa0JBQWtCO0FBQW1CO0FBRXpDLFlBQU0sT0FBTyxTQUFTLENBQUM7QUFDdkIsWUFBTSxVQUFVLEtBQUssU0FBUyxHQUFHLGlCQUFpQixLQUFLLElBQUk7QUFFM0QsWUFBTSxtQkFBbUIsS0FBSyxNQUFNLFVBQVUsZ0JBQWdCO0FBRTlELFNBQUcsS0FBSyxXQUFXLEtBQUssTUFBTSxrQkFBa0IsUUFBUSxDQUFDO0FBQ3pELHdCQUFrQjtBQUFBLElBQ3RCO0FBQ0EsVUFBTSxHQUFHLE1BQU0sY0FBYyxjQUFjO0FBQzNDLE9BQUcsTUFBTSxlQUFlLGlCQUFpQixNQUFNLG9CQUFvQixRQUFRO0FBQUEsRUFDL0U7QUFFQSxLQUFHLE1BQU0sZUFBZTtBQUM1QjsiLCJuYW1lcyI6W119\",\"filename\":\"loop/hackingAlgo.js\",\"server\":\"home\"}}],[\"loop/manager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getBestServerListCheap } from \\\"/bestServer.js\\\";\\nimport { Colors, nukeAll } from \\\"/lib.js\\\";\\nimport { hackServer } from \\\"/loop/hackingAlgo.js\\\";\\nimport { prepareServer } from \\\"/loop/prepareServer.js\\\";\\nlet lastTarget = \\\"\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const target = getBestServerListCheap(ns, true)[0].name;\\n    if (lastTarget != target) {\\n      nukeAll(ns);\\n      ns.print(\\\"found new best Server: \\\" + target);\\n    }\\n    lastTarget = target;\\n    await loopCycle(ns, target, 0.8);\\n  }\\n}\\nexport async function loopCycle(ns, target, threshold) {\\n  ns.print(Colors.CYAN + \\\"------------ PREPARING ------------\\\" + Colors.RESET);\\n  await prepareServer(ns, target, threshold);\\n  ns.print(Colors.CYAN + \\\"------------- HACKING -------------\\\" + Colors.RESET);\\n  await hackServer(ns, target, threshold);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5cbmltcG9ydCB7IGdldEJlc3RTZXJ2ZXJMaXN0Q2hlYXAgfSBmcm9tIFwiLi4vYmVzdFNlcnZlci5qc1wiO1xuaW1wb3J0IHsgQ29sb3JzLCBudWtlQWxsIH0gZnJvbSBcIi4uL2xpYi5qc1wiO1xuaW1wb3J0IHsgaGFja1NlcnZlciB9IGZyb20gXCIuL2hhY2tpbmdBbGdvLmpzXCI7XG5pbXBvcnQgeyBwcmVwYXJlU2VydmVyIH0gZnJvbSBcIi4vcHJlcGFyZVNlcnZlci5qc1wiO1xuXG5sZXQgbGFzdFRhcmdldCA9IFwiXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIG5zLnRhaWwoKTtcbiAgICBucy5kaXNhYmxlTG9nKFwiQUxMXCIpO1xuXG4gICAgLy8gc3RlcHM6IFdHV0gtV0dXSC0uLlxuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGdldEJlc3RTZXJ2ZXJMaXN0Q2hlYXAobnMsIHRydWUpWzBdLm5hbWU7XG4gICAgICAgIGlmIChsYXN0VGFyZ2V0ICE9IHRhcmdldCkge1xuICAgICAgICAgICAgbnVrZUFsbChucyk7XG4gICAgICAgICAgICBucy5wcmludChcImZvdW5kIG5ldyBiZXN0IFNlcnZlcjogXCIgKyB0YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIGxhc3RUYXJnZXQgPSB0YXJnZXQ7XG4gICAgICAgIGF3YWl0IGxvb3BDeWNsZShucywgdGFyZ2V0LCAwLjgpO1xuICAgIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvb3BDeWNsZShuczogTlMsIHRhcmdldDogc3RyaW5nLCB0aHJlc2hvbGQ6IG51bWJlcikge1xuICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCItLS0tLS0tLS0tLS0gUFJFUEFSSU5HIC0tLS0tLS0tLS0tLVwiICsgQ29sb3JzLlJFU0VUKTtcbiAgICBhd2FpdCBwcmVwYXJlU2VydmVyKG5zLCB0YXJnZXQsIHRocmVzaG9sZCk7XG5cbiAgICBucy5wcmludChDb2xvcnMuQ1lBTiArIFwiLS0tLS0tLS0tLS0tLSBIQUNLSU5HIC0tLS0tLS0tLS0tLS1cIiArIENvbG9ycy5SRVNFVCk7XG4gICAgYXdhaXQgaGFja1NlcnZlcihucywgdGFyZ2V0LCB0aHJlc2hvbGQpO1xufVxuXG4vKipcbiBub3RlczpcbiB3ZWFrZW4gcmVtb3ZlcyAwLjA1IHNlYyBsdmxcbiBncm93IGFkZHMgMC4wMDQgc2VjIGx2bFxuXG4gKi9cbiJdLCJtYXBwaW5ncyI6IkFBRUEsU0FBUyw4QkFBOEI7QUFDdkMsU0FBUyxRQUFRLGVBQWU7QUFDaEMsU0FBUyxrQkFBa0I7QUFDM0IsU0FBUyxxQkFBcUI7QUFFOUIsSUFBSSxhQUFhO0FBRWpCLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsS0FBRyxXQUFXLEtBQUs7QUFHbkIsU0FBTyxNQUFNO0FBQ1QsVUFBTSxTQUFTLHVCQUF1QixJQUFJLElBQUksRUFBRSxDQUFDLEVBQUU7QUFDbkQsUUFBSSxjQUFjLFFBQVE7QUFDdEIsY0FBUSxFQUFFO0FBQ1YsU0FBRyxNQUFNLDRCQUE0QixNQUFNO0FBQUEsSUFDL0M7QUFDQSxpQkFBYTtBQUNiLFVBQU0sVUFBVSxJQUFJLFFBQVEsR0FBRztBQUFBLEVBQ25DO0FBQ0o7QUFFQSxzQkFBc0IsVUFBVSxJQUFRLFFBQWdCLFdBQW1CO0FBQ3ZFLEtBQUcsTUFBTSxPQUFPLE9BQU8sd0NBQXdDLE9BQU8sS0FBSztBQUMzRSxRQUFNLGNBQWMsSUFBSSxRQUFRLFNBQVM7QUFFekMsS0FBRyxNQUFNLE9BQU8sT0FBTyx3Q0FBd0MsT0FBTyxLQUFLO0FBQzNFLFFBQU0sV0FBVyxJQUFJLFFBQVEsU0FBUztBQUMxQzsiLCJuYW1lcyI6W119\",\"filename\":\"loop/manager.js\",\"server\":\"home\"}}],[\"lib.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export var Colors = /* @__PURE__ */ ((Colors2) => {\\n  Colors2[\\\"RESET\\\"] = \\\"\\\\x1B[0m\\\";\\n  Colors2[\\\"BLACK\\\"] = \\\"\\\\x1B[30m\\\";\\n  Colors2[\\\"RED\\\"] = \\\"\\\\x1B[31m\\\";\\n  Colors2[\\\"GREEN\\\"] = \\\"\\\\x1B[32m\\\";\\n  Colors2[\\\"YELLOW\\\"] = \\\"\\\\x1B[33m\\\";\\n  Colors2[\\\"BLUE\\\"] = \\\"\\\\x1B[34m\\\";\\n  Colors2[\\\"MAGENTA\\\"] = \\\"\\\\x1B[35m\\\";\\n  Colors2[\\\"CYAN\\\"] = \\\"\\\\x1B[36m\\\";\\n  Colors2[\\\"WHITE\\\"] = \\\"\\\\x1B[37m\\\";\\n  return Colors2;\\n})(Colors || {});\\nexport function serverScanner(ns) {\\n  const uncheckedHosts = [\\\"home\\\"];\\n  const checkedHosts = [];\\n  for (let i = 0; i < uncheckedHosts.length; i++) {\\n    const newHosts = ns.scan(uncheckedHosts[i]);\\n    checkedHosts.push(uncheckedHosts[i]);\\n    for (let n = 0; n < newHosts.length; n++) {\\n      if (checkedHosts.includes(newHosts[n]) == false || uncheckedHosts.includes(newHosts[n]) == false) {\\n        uncheckedHosts.push(newHosts[n]);\\n      }\\n    }\\n  }\\n  return checkedHosts.sort();\\n}\\nexport function isHackable(ns, server) {\\n  if (ns.getServerNumPortsRequired(server) <= getNumHacks(ns) && ns.getServerRequiredHackingLevel(server) <= ns.getHackingLevel())\\n    return true;\\n  else\\n    return false;\\n}\\nexport function getNumHacks(ns) {\\n  let i = 0;\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\"))\\n    i++;\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\"))\\n    i++;\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\"))\\n    i++;\\n  if (ns.fileExists(\\\"SQLInject.exe\\\"))\\n    i++;\\n  return i;\\n}\\nexport function nukeAll(ns) {\\n  const hosts = serverScanner(ns);\\n  for (let i = 0; i < hosts.length; i++) {\\n    if (isHackable(ns, hosts[i]) || ns.getPurchasedServers().includes(hosts[i])) {\\n      openPorts(ns, hosts[i]);\\n      ns.nuke(hosts[i]);\\n      ns.scp(\\\"hack.js\\\", hosts[i]);\\n      ns.scp(\\\"grow.js\\\", hosts[i]);\\n      ns.scp(\\\"weaken.js\\\", hosts[i]);\\n    } else {\\n      continue;\\n    }\\n  }\\n}\\nexport function nukeServer(ns, server) {\\n  openPorts(ns, server);\\n  ns.nuke(server);\\n  ns.scp(\\\"hack.js\\\", server);\\n  ns.scp(\\\"grow.js\\\", server);\\n  ns.scp(\\\"weaken.js\\\", server);\\n}\\nexport function openPorts(ns, target) {\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\"))\\n    ns.brutessh(target);\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\"))\\n    ns.ftpcrack(target);\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\"))\\n    ns.httpworm(target);\\n  if (ns.fileExists(\\\"SQLInject.exe\\\"))\\n    ns.sqlinject(target);\\n}\\nexport function getTimeH(timestamp) {\\n  if (timestamp == void 0 || timestamp == null)\\n    timestamp = Date.now();\\n  const date = new Date(timestamp);\\n  date.setUTCHours(date.getUTCHours() + 1);\\n  const hours = date.getUTCHours().toString().padStart(2, \\\"0\\\");\\n  const minutes = date.getUTCMinutes().toString().padStart(2, \\\"0\\\");\\n  const seconds = date.getUTCSeconds().toString().padStart(2, \\\"0\\\");\\n  const milliseconds = date.getUTCMilliseconds().toString().padStart(3, \\\"0\\\");\\n  const formattedTime = `${hours}:${minutes}:${seconds}:${milliseconds}`;\\n  return formattedTime;\\n}\\nexport function getGrowThreads(ns, server) {\\n  const serverMaxMoney = ns.getServerMaxMoney(server);\\n  const serverCurrentMoney = ns.getServerMoneyAvailable(server);\\n  let moneyMultiplier = serverMaxMoney / serverCurrentMoney;\\n  if (isNaN(moneyMultiplier) || moneyMultiplier == Infinity)\\n    moneyMultiplier = serverMaxMoney;\\n  const serverGrowThreads = Math.ceil(ns.growthAnalyze(server, moneyMultiplier));\\n  return serverGrowThreads;\\n}\\nexport function getGrowThreadsThreshold(ns, server, threshold) {\\n  const maxMoney = ns.getServerMaxMoney(server);\\n  const minMoney = maxMoney * (1 - threshold);\\n  const moneyMultiplier = maxMoney / minMoney;\\n  const serverGrowThreads = Math.ceil(ns.growthAnalyze(server, moneyMultiplier));\\n  return serverGrowThreads;\\n}\\nexport function getWeakenThreadsAfterHack(ns, numHackThreads) {\\n  const hackSecLvlIncrease = ns.hackAnalyzeSecurity(numHackThreads);\\n  const serverWeakenThreads = Math.ceil(hackSecLvlIncrease / ns.weakenAnalyze(1));\\n  return serverWeakenThreads;\\n}\\nexport function getWeakenThreadsAfterGrow(ns, numGrowThreads) {\\n  const hackSecLvlIncrease = ns.growthAnalyzeSecurity(numGrowThreads);\\n  const serverWeakenThreads = Math.ceil(hackSecLvlIncrease / ns.weakenAnalyze(1));\\n  return serverWeakenThreads;\\n}\\nexport function getWeakenThreads(ns, server) {\\n  const serverSecLvl = ns.getServerSecurityLevel(server);\\n  const serverWeakenThreads = Math.ceil((serverSecLvl - ns.getServerMinSecurityLevel(server)) / ns.weakenAnalyze(1));\\n  return serverWeakenThreads;\\n}\\nexport function getHackThreads(ns, server, moneyHackThreshold) {\\n  const serverMaxMoney = ns.getServerMaxMoney(server);\\n  const lowerMoneyBound = serverMaxMoney * (1 - moneyHackThreshold);\\n  const hackAmount = serverMaxMoney - lowerMoneyBound;\\n  const serverHackThreads = Math.floor(ns.hackAnalyzeThreads(server, hackAmount));\\n  return serverHackThreads;\\n}\\nexport function getGrowThreadsFormulas(ns, server, hackThreshold) {\\n  const serverObject = ns.getServer(server);\\n  const playerObject = ns.getPlayer();\\n  if (serverObject.moneyMax == void 0)\\n    return 0;\\n  serverObject.moneyAvailable = serverObject.moneyMax * (1 - (hackThreshold + 0.01));\\n  serverObject.baseDifficulty = serverObject.minDifficulty;\\n  return ns.formulas.hacking.growThreads(serverObject, playerObject, serverObject.moneyMax);\\n}\\nexport function getHackThreadsFormulas(ns, server, hackThreshold) {\\n  const serverObject = ns.getServer(server);\\n  const playerObject = ns.getPlayer();\\n  serverObject.baseDifficulty = serverObject.minDifficulty;\\n  serverObject.moneyAvailable = serverObject.moneyMax;\\n  return Math.floor(hackThreshold / ns.formulas.hacking.hackPercent(serverObject, playerObject));\\n}\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  const server = \\\"phantasy\\\";\\n  ns.print(getWeakenThreads(ns, server) + \\\" weakens needed\\\");\\n  ns.print(getGrowThreads(ns, server) + \\\" grows needed\\\");\\n  ns.print(getHackThreadsFormulas(ns, server, 0.9) + \\\" hacks needed\\\");\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcblxuZXhwb3J0IGVudW0gQ29sb3JzIHtcbiAgICBSRVNFVCA9IFwiXFx4MWJbMG1cIixcbiAgICBCTEFDSyA9IFwiXFx4MWJbMzBtXCIsXG4gICAgUkVEID0gXCJcXHgxYlszMW1cIixcbiAgICBHUkVFTiA9IFwiXFx4MWJbMzJtXCIsXG4gICAgWUVMTE9XID0gXCJcXHgxYlszM21cIixcbiAgICBCTFVFID0gXCJcXHgxYlszNG1cIixcbiAgICBNQUdFTlRBID0gXCJcXHgxYlszNW1cIixcbiAgICBDWUFOID0gXCJcXHgxYlszNm1cIixcbiAgICBXSElURSA9IFwiXFx4MWJbMzdtXCIsXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXJ2ZXJTY2FubmVyKG5zOiBOUykge1xuICAgIGNvbnN0IHVuY2hlY2tlZEhvc3RzID0gW1wiaG9tZVwiXTtcbiAgICBjb25zdCBjaGVja2VkSG9zdHMgPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdW5jaGVja2VkSG9zdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgbmV3SG9zdHMgPSBucy5zY2FuKHVuY2hlY2tlZEhvc3RzW2ldKTtcbiAgICAgICAgY2hlY2tlZEhvc3RzLnB1c2godW5jaGVja2VkSG9zdHNbaV0pO1xuXG4gICAgICAgIGZvciAobGV0IG4gPSAwOyBuIDwgbmV3SG9zdHMubGVuZ3RoOyBuKyspIHtcbiAgICAgICAgICAgIGlmIChjaGVja2VkSG9zdHMuaW5jbHVkZXMobmV3SG9zdHNbbl0pID09IGZhbHNlIHx8IHVuY2hlY2tlZEhvc3RzLmluY2x1ZGVzKG5ld0hvc3RzW25dKSA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHVuY2hlY2tlZEhvc3RzLnB1c2gobmV3SG9zdHNbbl0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoZWNrZWRIb3N0cy5zb3J0KCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0hhY2thYmxlKG5zOiBOUywgc2VydmVyOiBzdHJpbmcpIHtcbiAgICBpZiAoXG4gICAgICAgIG5zLmdldFNlcnZlck51bVBvcnRzUmVxdWlyZWQoc2VydmVyKSA8PSBnZXROdW1IYWNrcyhucykgJiZcbiAgICAgICAgbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc2VydmVyKSA8PSBucy5nZXRIYWNraW5nTGV2ZWwoKVxuICAgIClcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgZWxzZSByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROdW1IYWNrcyhuczogTlMpIHtcbiAgICBsZXQgaSA9IDA7XG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJCcnV0ZVNTSC5leGVcIikpIGkrKztcbiAgICBpZiAobnMuZmlsZUV4aXN0cyhcIkZUUENyYWNrLmV4ZVwiKSkgaSsrO1xuICAgIGlmIChucy5maWxlRXhpc3RzKFwiSFRUUFdvcm0uZXhlXCIpKSBpKys7XG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJTUUxJbmplY3QuZXhlXCIpKSBpKys7XG4gICAgcmV0dXJuIGk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBudWtlQWxsKG5zOiBOUykge1xuICAgIGNvbnN0IGhvc3RzID0gc2VydmVyU2Nhbm5lcihucyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBob3N0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBjaGVjayBpZiB0aGUgaG9zdCBpcyBoYWNrYWJsZVxuICAgICAgICBpZiAoaXNIYWNrYWJsZShucywgaG9zdHNbaV0pIHx8IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKS5pbmNsdWRlcyhob3N0c1tpXSkpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IGdldFB1cmNoYXNlZFNlcnZlcnMoKSBpcyBub3QgbmVlZGVkXG4gICAgICAgICAgICBvcGVuUG9ydHMobnMsIGhvc3RzW2ldKTtcbiAgICAgICAgICAgIG5zLm51a2UoaG9zdHNbaV0pO1xuXG4gICAgICAgICAgICAvLyBjb3B5IGFsbCBzY3JpcHRzIHRvIHRoZSBzZXJ2ZXJcbiAgICAgICAgICAgIG5zLnNjcChcImhhY2suanNcIiwgaG9zdHNbaV0pO1xuICAgICAgICAgICAgbnMuc2NwKFwiZ3Jvdy5qc1wiLCBob3N0c1tpXSk7XG4gICAgICAgICAgICBucy5zY3AoXCJ3ZWFrZW4uanNcIiwgaG9zdHNbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBudWtlU2VydmVyKG5zOiBOUywgc2VydmVyOiBzdHJpbmcpIHtcbiAgICBvcGVuUG9ydHMobnMsIHNlcnZlcik7XG4gICAgbnMubnVrZShzZXJ2ZXIpO1xuXG4gICAgbnMuc2NwKFwiaGFjay5qc1wiLCBzZXJ2ZXIpO1xuICAgIG5zLnNjcChcImdyb3cuanNcIiwgc2VydmVyKTtcbiAgICBucy5zY3AoXCJ3ZWFrZW4uanNcIiwgc2VydmVyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Qb3J0cyhuczogTlMsIHRhcmdldDogc3RyaW5nKSB7XG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJCcnV0ZVNTSC5leGVcIikpIG5zLmJydXRlc3NoKHRhcmdldCk7XG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJGVFBDcmFjay5leGVcIikpIG5zLmZ0cGNyYWNrKHRhcmdldCk7XG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJIVFRQV29ybS5leGVcIikpIG5zLmh0dHB3b3JtKHRhcmdldCk7XG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJTUUxJbmplY3QuZXhlXCIpKSBucy5zcWxpbmplY3QodGFyZ2V0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRpbWVIKHRpbWVzdGFtcD86IG51bWJlcikge1xuICAgIGlmICh0aW1lc3RhbXAgPT0gdW5kZWZpbmVkIHx8IHRpbWVzdGFtcCA9PSBudWxsKSB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuXG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCk7XG4gICAgZGF0ZS5zZXRVVENIb3VycyhkYXRlLmdldFVUQ0hvdXJzKCkgKyAxKTtcbiAgICBjb25zdCBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgICBjb25zdCBtaW51dGVzID0gZGF0ZS5nZXRVVENNaW51dGVzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgY29uc3Qgc2Vjb25kcyA9IGRhdGUuZ2V0VVRDU2Vjb25kcygpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgXCIwXCIpO1xuICAgIGNvbnN0IG1pbGxpc2Vjb25kcyA9IGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgzLCBcIjBcIik7XG4gICAgY29uc3QgZm9ybWF0dGVkVGltZSA9IGAke2hvdXJzfToke21pbnV0ZXN9OiR7c2Vjb25kc306JHttaWxsaXNlY29uZHN9YDtcbiAgICByZXR1cm4gZm9ybWF0dGVkVGltZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEdyb3dUaHJlYWRzKG5zOiBOUywgc2VydmVyOiBzdHJpbmcpIHtcbiAgICBjb25zdCBzZXJ2ZXJNYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XG4gICAgY29uc3Qgc2VydmVyQ3VycmVudE1vbmV5ID0gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoc2VydmVyKTtcbiAgICBsZXQgbW9uZXlNdWx0aXBsaWVyID0gc2VydmVyTWF4TW9uZXkgLyBzZXJ2ZXJDdXJyZW50TW9uZXk7XG4gICAgaWYgKGlzTmFOKG1vbmV5TXVsdGlwbGllcikgfHwgbW9uZXlNdWx0aXBsaWVyID09IEluZmluaXR5KSBtb25leU11bHRpcGxpZXIgPSBzZXJ2ZXJNYXhNb25leTtcbiAgICBjb25zdCBzZXJ2ZXJHcm93VGhyZWFkcyA9IE1hdGguY2VpbChucy5ncm93dGhBbmFseXplKHNlcnZlciwgbW9uZXlNdWx0aXBsaWVyKSk7XG5cbiAgICByZXR1cm4gc2VydmVyR3Jvd1RocmVhZHM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRHcm93VGhyZWFkc1RocmVzaG9sZChuczogTlMsIHNlcnZlcjogc3RyaW5nLCB0aHJlc2hvbGQ6IG51bWJlcikge1xuICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcbiAgICBjb25zdCBtaW5Nb25leSA9IG1heE1vbmV5ICogKDEgLSB0aHJlc2hvbGQpO1xuICAgIGNvbnN0IG1vbmV5TXVsdGlwbGllciA9IG1heE1vbmV5IC8gbWluTW9uZXk7XG4gICAgY29uc3Qgc2VydmVyR3Jvd1RocmVhZHMgPSBNYXRoLmNlaWwobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIG1vbmV5TXVsdGlwbGllcikpO1xuXG4gICAgcmV0dXJuIHNlcnZlckdyb3dUaHJlYWRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0V2Vha2VuVGhyZWFkc0FmdGVySGFjayhuczogTlMsIG51bUhhY2tUaHJlYWRzOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGNvbnN0IGhhY2tTZWNMdmxJbmNyZWFzZSA9IG5zLmhhY2tBbmFseXplU2VjdXJpdHkobnVtSGFja1RocmVhZHMpO1xuXG4gICAgY29uc3Qgc2VydmVyV2Vha2VuVGhyZWFkcyA9IE1hdGguY2VpbChoYWNrU2VjTHZsSW5jcmVhc2UgLyBucy53ZWFrZW5BbmFseXplKDEpKTtcblxuICAgIHJldHVybiBzZXJ2ZXJXZWFrZW5UaHJlYWRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyhuczogTlMsIG51bUdyb3dUaHJlYWRzOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGNvbnN0IGhhY2tTZWNMdmxJbmNyZWFzZSA9IG5zLmdyb3d0aEFuYWx5emVTZWN1cml0eShudW1Hcm93VGhyZWFkcyk7XG5cbiAgICBjb25zdCBzZXJ2ZXJXZWFrZW5UaHJlYWRzID0gTWF0aC5jZWlsKGhhY2tTZWNMdmxJbmNyZWFzZSAvIG5zLndlYWtlbkFuYWx5emUoMSkpO1xuXG4gICAgcmV0dXJuIHNlcnZlcldlYWtlblRocmVhZHM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXZWFrZW5UaHJlYWRzKG5zOiBOUywgc2VydmVyOiBzdHJpbmcpIHtcbiAgICBjb25zdCBzZXJ2ZXJTZWNMdmwgPSBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHNlcnZlcik7XG4gICAgY29uc3Qgc2VydmVyV2Vha2VuVGhyZWFkcyA9IE1hdGguY2VpbCgoc2VydmVyU2VjTHZsIC0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbChzZXJ2ZXIpKSAvIG5zLndlYWtlbkFuYWx5emUoMSkpO1xuXG4gICAgcmV0dXJuIHNlcnZlcldlYWtlblRocmVhZHM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIYWNrVGhyZWFkcyhuczogTlMsIHNlcnZlcjogc3RyaW5nLCBtb25leUhhY2tUaHJlc2hvbGQ6IG51bWJlcikge1xuICAgIGNvbnN0IHNlcnZlck1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcbiAgICBjb25zdCBsb3dlck1vbmV5Qm91bmQgPSBzZXJ2ZXJNYXhNb25leSAqICgxIC0gbW9uZXlIYWNrVGhyZXNob2xkKTtcbiAgICBjb25zdCBoYWNrQW1vdW50ID0gc2VydmVyTWF4TW9uZXkgLSBsb3dlck1vbmV5Qm91bmQ7XG4gICAgY29uc3Qgc2VydmVySGFja1RocmVhZHMgPSBNYXRoLmZsb29yKG5zLmhhY2tBbmFseXplVGhyZWFkcyhzZXJ2ZXIsIGhhY2tBbW91bnQpKTtcblxuICAgIHJldHVybiBzZXJ2ZXJIYWNrVGhyZWFkcztcbn1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0gRm9ybXVsYXNBUEkgLS0tLS0tLS0tLS0tLS0tLS1cbmV4cG9ydCBmdW5jdGlvbiBnZXRHcm93VGhyZWFkc0Zvcm11bGFzKG5zOiBOUywgc2VydmVyOiBzdHJpbmcsIGhhY2tUaHJlc2hvbGQ6IG51bWJlcikge1xuICAgIGNvbnN0IHNlcnZlck9iamVjdCA9IG5zLmdldFNlcnZlcihzZXJ2ZXIpO1xuICAgIGNvbnN0IHBsYXllck9iamVjdCA9IG5zLmdldFBsYXllcigpO1xuXG4gICAgaWYgKHNlcnZlck9iamVjdC5tb25leU1heCA9PSB1bmRlZmluZWQpIHJldHVybiAwO1xuXG4gICAgc2VydmVyT2JqZWN0Lm1vbmV5QXZhaWxhYmxlID0gc2VydmVyT2JqZWN0Lm1vbmV5TWF4ICogKDEgLSAoaGFja1RocmVzaG9sZCArIDAuMDEpKTtcbiAgICBzZXJ2ZXJPYmplY3QuYmFzZURpZmZpY3VsdHkgPSBzZXJ2ZXJPYmplY3QubWluRGlmZmljdWx0eTtcblxuICAgIHJldHVybiBucy5mb3JtdWxhcy5oYWNraW5nLmdyb3dUaHJlYWRzKHNlcnZlck9iamVjdCwgcGxheWVyT2JqZWN0LCBzZXJ2ZXJPYmplY3QubW9uZXlNYXgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SGFja1RocmVhZHNGb3JtdWxhcyhuczogTlMsIHNlcnZlcjogc3RyaW5nLCBoYWNrVGhyZXNob2xkOiBudW1iZXIpIHtcbiAgICBjb25zdCBzZXJ2ZXJPYmplY3QgPSBucy5nZXRTZXJ2ZXIoc2VydmVyKTtcbiAgICBjb25zdCBwbGF5ZXJPYmplY3QgPSBucy5nZXRQbGF5ZXIoKTtcblxuICAgIHNlcnZlck9iamVjdC5iYXNlRGlmZmljdWx0eSA9IHNlcnZlck9iamVjdC5taW5EaWZmaWN1bHR5O1xuICAgIHNlcnZlck9iamVjdC5tb25leUF2YWlsYWJsZSA9IHNlcnZlck9iamVjdC5tb25leU1heDtcblxuICAgIC8vIHRocmVhZHMgKiBwZXJjZW50ID09IGhhY2tUaHJlc2hvbGQgPT4gdGhyZWFkcyA9PSBoYWNrVGhyZXNob2xkIC8gcGVyY2VudFxuICAgIHJldHVybiBNYXRoLmZsb29yKGhhY2tUaHJlc2hvbGQgLyBucy5mb3JtdWxhcy5oYWNraW5nLmhhY2tQZXJjZW50KHNlcnZlck9iamVjdCwgcGxheWVyT2JqZWN0KSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIG5zLnRhaWwoKTtcbiAgICBucy5kaXNhYmxlTG9nKFwiQUxMXCIpO1xuXG4gICAgY29uc3Qgc2VydmVyID0gXCJwaGFudGFzeVwiO1xuICAgIG5zLnByaW50KGdldFdlYWtlblRocmVhZHMobnMsIHNlcnZlcikgKyBcIiB3ZWFrZW5zIG5lZWRlZFwiKTtcbiAgICBucy5wcmludChnZXRHcm93VGhyZWFkcyhucywgc2VydmVyKSArIFwiIGdyb3dzIG5lZWRlZFwiKTtcbiAgICBucy5wcmludChnZXRIYWNrVGhyZWFkc0Zvcm11bGFzKG5zLCBzZXJ2ZXIsIDAuOSkgKyBcIiBoYWNrcyBuZWVkZWRcIik7XG59XG4iXSwibWFwcGluZ3MiOiJBQUVPLFdBQUssU0FBTCxrQkFBS0EsWUFBTDtBQUNILEVBQUFBLFFBQUEsV0FBUTtBQUNSLEVBQUFBLFFBQUEsV0FBUTtBQUNSLEVBQUFBLFFBQUEsU0FBTTtBQUNOLEVBQUFBLFFBQUEsV0FBUTtBQUNSLEVBQUFBLFFBQUEsWUFBUztBQUNULEVBQUFBLFFBQUEsVUFBTztBQUNQLEVBQUFBLFFBQUEsYUFBVTtBQUNWLEVBQUFBLFFBQUEsVUFBTztBQUNQLEVBQUFBLFFBQUEsV0FBUTtBQVRBLFNBQUFBO0FBQUEsR0FBQTtBQVlMLGdCQUFTLGNBQWMsSUFBUTtBQUNsQyxRQUFNLGlCQUFpQixDQUFDLE1BQU07QUFDOUIsUUFBTSxlQUFlLENBQUM7QUFFdEIsV0FBUyxJQUFJLEdBQUcsSUFBSSxlQUFlLFFBQVEsS0FBSztBQUM1QyxVQUFNLFdBQVcsR0FBRyxLQUFLLGVBQWUsQ0FBQyxDQUFDO0FBQzFDLGlCQUFhLEtBQUssZUFBZSxDQUFDLENBQUM7QUFFbkMsYUFBUyxJQUFJLEdBQUcsSUFBSSxTQUFTLFFBQVEsS0FBSztBQUN0QyxVQUFJLGFBQWEsU0FBUyxTQUFTLENBQUMsQ0FBQyxLQUFLLFNBQVMsZUFBZSxTQUFTLFNBQVMsQ0FBQyxDQUFDLEtBQUssT0FBTztBQUM5Rix1QkFBZSxLQUFLLFNBQVMsQ0FBQyxDQUFDO0FBQUEsTUFDbkM7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUVBLFNBQU8sYUFBYSxLQUFLO0FBQzdCO0FBRU8sZ0JBQVMsV0FBVyxJQUFRLFFBQWdCO0FBQy9DLE1BQ0ksR0FBRywwQkFBMEIsTUFBTSxLQUFLLFlBQVksRUFBRSxLQUN0RCxHQUFHLDhCQUE4QixNQUFNLEtBQUssR0FBRyxnQkFBZ0I7QUFFL0QsV0FBTztBQUFBO0FBQ04sV0FBTztBQUNoQjtBQUVPLGdCQUFTLFlBQVksSUFBUTtBQUNoQyxNQUFJLElBQUk7QUFDUixNQUFJLEdBQUcsV0FBVyxjQUFjO0FBQUc7QUFDbkMsTUFBSSxHQUFHLFdBQVcsY0FBYztBQUFHO0FBQ25DLE1BQUksR0FBRyxXQUFXLGNBQWM7QUFBRztBQUNuQyxNQUFJLEdBQUcsV0FBVyxlQUFlO0FBQUc7QUFDcEMsU0FBTztBQUNYO0FBRU8sZ0JBQVMsUUFBUSxJQUFRO0FBQzVCLFFBQU0sUUFBUSxjQUFjLEVBQUU7QUFDOUIsV0FBUyxJQUFJLEdBQUcsSUFBSSxNQUFNLFFBQVEsS0FBSztBQUVuQyxRQUFJLFdBQVcsSUFBSSxNQUFNLENBQUMsQ0FBQyxLQUFLLEdBQUcsb0JBQW9CLEVBQUUsU0FBUyxNQUFNLENBQUMsQ0FBQyxHQUFHO0FBRXpFLGdCQUFVLElBQUksTUFBTSxDQUFDLENBQUM7QUFDdEIsU0FBRyxLQUFLLE1BQU0sQ0FBQyxDQUFDO0FBR2hCLFNBQUcsSUFBSSxXQUFXLE1BQU0sQ0FBQyxDQUFDO0FBQzFCLFNBQUcsSUFBSSxXQUFXLE1BQU0sQ0FBQyxDQUFDO0FBQzFCLFNBQUcsSUFBSSxhQUFhLE1BQU0sQ0FBQyxDQUFDO0FBQUEsSUFDaEMsT0FBTztBQUNIO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFDSjtBQUVPLGdCQUFTLFdBQVcsSUFBUSxRQUFnQjtBQUMvQyxZQUFVLElBQUksTUFBTTtBQUNwQixLQUFHLEtBQUssTUFBTTtBQUVkLEtBQUcsSUFBSSxXQUFXLE1BQU07QUFDeEIsS0FBRyxJQUFJLFdBQVcsTUFBTTtBQUN4QixLQUFHLElBQUksYUFBYSxNQUFNO0FBQzlCO0FBRU8sZ0JBQVMsVUFBVSxJQUFRLFFBQWdCO0FBQzlDLE1BQUksR0FBRyxXQUFXLGNBQWM7QUFBRyxPQUFHLFNBQVMsTUFBTTtBQUNyRCxNQUFJLEdBQUcsV0FBVyxjQUFjO0FBQUcsT0FBRyxTQUFTLE1BQU07QUFDckQsTUFBSSxHQUFHLFdBQVcsY0FBYztBQUFHLE9BQUcsU0FBUyxNQUFNO0FBQ3JELE1BQUksR0FBRyxXQUFXLGVBQWU7QUFBRyxPQUFHLFVBQVUsTUFBTTtBQUMzRDtBQUVPLGdCQUFTLFNBQVMsV0FBb0I7QUFDekMsTUFBSSxhQUFhLFVBQWEsYUFBYTtBQUFNLGdCQUFZLEtBQUssSUFBSTtBQUV0RSxRQUFNLE9BQU8sSUFBSSxLQUFLLFNBQVM7QUFDL0IsT0FBSyxZQUFZLEtBQUssWUFBWSxJQUFJLENBQUM7QUFDdkMsUUFBTSxRQUFRLEtBQUssWUFBWSxFQUFFLFNBQVMsRUFBRSxTQUFTLEdBQUcsR0FBRztBQUMzRCxRQUFNLFVBQVUsS0FBSyxjQUFjLEVBQUUsU0FBUyxFQUFFLFNBQVMsR0FBRyxHQUFHO0FBQy9ELFFBQU0sVUFBVSxLQUFLLGNBQWMsRUFBRSxTQUFTLEVBQUUsU0FBUyxHQUFHLEdBQUc7QUFDL0QsUUFBTSxlQUFlLEtBQUssbUJBQW1CLEVBQUUsU0FBUyxFQUFFLFNBQVMsR0FBRyxHQUFHO0FBQ3pFLFFBQU0sZ0JBQWdCLEdBQUcsS0FBSyxJQUFJLE9BQU8sSUFBSSxPQUFPLElBQUksWUFBWTtBQUNwRSxTQUFPO0FBQ1g7QUFFTyxnQkFBUyxlQUFlLElBQVEsUUFBZ0I7QUFDbkQsUUFBTSxpQkFBaUIsR0FBRyxrQkFBa0IsTUFBTTtBQUNsRCxRQUFNLHFCQUFxQixHQUFHLHdCQUF3QixNQUFNO0FBQzVELE1BQUksa0JBQWtCLGlCQUFpQjtBQUN2QyxNQUFJLE1BQU0sZUFBZSxLQUFLLG1CQUFtQjtBQUFVLHNCQUFrQjtBQUM3RSxRQUFNLG9CQUFvQixLQUFLLEtBQUssR0FBRyxjQUFjLFFBQVEsZUFBZSxDQUFDO0FBRTdFLFNBQU87QUFDWDtBQUVPLGdCQUFTLHdCQUF3QixJQUFRLFFBQWdCLFdBQW1CO0FBQy9FLFFBQU0sV0FBVyxHQUFHLGtCQUFrQixNQUFNO0FBQzVDLFFBQU0sV0FBVyxZQUFZLElBQUk7QUFDakMsUUFBTSxrQkFBa0IsV0FBVztBQUNuQyxRQUFNLG9CQUFvQixLQUFLLEtBQUssR0FBRyxjQUFjLFFBQVEsZUFBZSxDQUFDO0FBRTdFLFNBQU87QUFDWDtBQUVPLGdCQUFTLDBCQUEwQixJQUFRLGdCQUFnQztBQUM5RSxRQUFNLHFCQUFxQixHQUFHLG9CQUFvQixjQUFjO0FBRWhFLFFBQU0sc0JBQXNCLEtBQUssS0FBSyxxQkFBcUIsR0FBRyxjQUFjLENBQUMsQ0FBQztBQUU5RSxTQUFPO0FBQ1g7QUFFTyxnQkFBUywwQkFBMEIsSUFBUSxnQkFBZ0M7QUFDOUUsUUFBTSxxQkFBcUIsR0FBRyxzQkFBc0IsY0FBYztBQUVsRSxRQUFNLHNCQUFzQixLQUFLLEtBQUsscUJBQXFCLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFFOUUsU0FBTztBQUNYO0FBRU8sZ0JBQVMsaUJBQWlCLElBQVEsUUFBZ0I7QUFDckQsUUFBTSxlQUFlLEdBQUcsdUJBQXVCLE1BQU07QUFDckQsUUFBTSxzQkFBc0IsS0FBSyxNQUFNLGVBQWUsR0FBRywwQkFBMEIsTUFBTSxLQUFLLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFFakgsU0FBTztBQUNYO0FBRU8sZ0JBQVMsZUFBZSxJQUFRLFFBQWdCLG9CQUE0QjtBQUMvRSxRQUFNLGlCQUFpQixHQUFHLGtCQUFrQixNQUFNO0FBQ2xELFFBQU0sa0JBQWtCLGtCQUFrQixJQUFJO0FBQzlDLFFBQU0sYUFBYSxpQkFBaUI7QUFDcEMsUUFBTSxvQkFBb0IsS0FBSyxNQUFNLEdBQUcsbUJBQW1CLFFBQVEsVUFBVSxDQUFDO0FBRTlFLFNBQU87QUFDWDtBQUdPLGdCQUFTLHVCQUF1QixJQUFRLFFBQWdCLGVBQXVCO0FBQ2xGLFFBQU0sZUFBZSxHQUFHLFVBQVUsTUFBTTtBQUN4QyxRQUFNLGVBQWUsR0FBRyxVQUFVO0FBRWxDLE1BQUksYUFBYSxZQUFZO0FBQVcsV0FBTztBQUUvQyxlQUFhLGlCQUFpQixhQUFhLFlBQVksS0FBSyxnQkFBZ0I7QUFDNUUsZUFBYSxpQkFBaUIsYUFBYTtBQUUzQyxTQUFPLEdBQUcsU0FBUyxRQUFRLFlBQVksY0FBYyxjQUFjLGFBQWEsUUFBUTtBQUM1RjtBQUVPLGdCQUFTLHVCQUF1QixJQUFRLFFBQWdCLGVBQXVCO0FBQ2xGLFFBQU0sZUFBZSxHQUFHLFVBQVUsTUFBTTtBQUN4QyxRQUFNLGVBQWUsR0FBRyxVQUFVO0FBRWxDLGVBQWEsaUJBQWlCLGFBQWE7QUFDM0MsZUFBYSxpQkFBaUIsYUFBYTtBQUczQyxTQUFPLEtBQUssTUFBTSxnQkFBZ0IsR0FBRyxTQUFTLFFBQVEsWUFBWSxjQUFjLFlBQVksQ0FBQztBQUNqRztBQUVBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsS0FBRyxXQUFXLEtBQUs7QUFFbkIsUUFBTSxTQUFTO0FBQ2YsS0FBRyxNQUFNLGlCQUFpQixJQUFJLE1BQU0sSUFBSSxpQkFBaUI7QUFDekQsS0FBRyxNQUFNLGVBQWUsSUFBSSxNQUFNLElBQUksZUFBZTtBQUNyRCxLQUFHLE1BQU0sdUJBQXVCLElBQUksUUFBUSxHQUFHLElBQUksZUFBZTtBQUN0RTsiLCJuYW1lcyI6WyJDb2xvcnMiXX0=\",\"filename\":\"lib.js\",\"server\":\"home\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"home\"}}],[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"home\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"home\"}}],[\"hackingDeamon.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRam, getBestServerList } from \\\"/bestServer.js\\\";\\nimport {\\n  Colors,\\n  getGrowThreadsFormulas,\\n  getGrowThreadsThreshold,\\n  getHackThreadsFormulas,\\n  getWeakenThreadsAfterGrow,\\n  getWeakenThreadsAfterHack\\n} from \\\"/lib.js\\\";\\nimport { prepareServer } from \\\"/loop/prepareServer.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nimport { parallelCycle } from \\\"/parallel/manager.js\\\";\\nimport { Time } from \\\"/Time.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  let hackThreshold = 0.5;\\n  let lastTarget = \\\"\\\";\\n  const time = Time.getInstance();\\n  while (true) {\\n    time.startTime();\\n    const target = getBestServerList(ns, false)[0].name;\\n    ns.print(\\\"lastTarget: \\\" + lastTarget + \\\" target: \\\" + target);\\n    if (ns.fileExists(\\\"Formulas.exe\\\", \\\"home\\\")) {\\n      if (lastTarget !== target) {\\n        if (ns.getServerMaxMoney(target) != parseFloat(ns.getServerMoneyAvailable(target).toFixed(5)) || parseFloat(ns.getServerSecurityLevel(target).toFixed(5)) != ns.getServerMinSecurityLevel(target)) {\\n          await prepareServer(ns, target);\\n        }\\n        hackThreshold = getHackThresholdBatch(ns, target);\\n        ns.print(\\\"hackThreshold: \\\" + hackThreshold);\\n        if (ns.getServerMaxMoney(target) == parseFloat(ns.getServerMoneyAvailable(target).toFixed(5)) || parseFloat(ns.getServerSecurityLevel(target).toFixed(5)) == ns.getServerMinSecurityLevel(target)) {\\n          ns.print(Colors.GREEN + \\\"Preparation finished, starting parallel mode\\\");\\n        } else {\\n          ns.tprint(Colors.RED + \\\"Preparation failed\\\");\\n          throw new Error(\\\"Preparation failed\\\");\\n        }\\n        lastTarget = target;\\n      }\\n      await parallelCycle(ns, target, hackThreshold, Config.LOOP_BATCH_COUNT);\\n    } else {\\n      if (ns.getServerMaxMoney(target) != ns.getServerMoneyAvailable(target) || ns.getServerSecurityLevel(target) != ns.getServerMinSecurityLevel(target)) {\\n        await prepareServer(ns, target);\\n        hackThreshold = getHackThreshold(ns, target);\\n        ns.print(\\\"hackThreshold: \\\" + hackThreshold);\\n      }\\n      if (ns.getServerMaxMoney(target) == ns.getServerMoneyAvailable(target) && ns.getServerSecurityLevel(target) == ns.getServerMinSecurityLevel(target)) {\\n        ns.print(Colors.GREEN + \\\"Preparation finished, starting parallel mode\\\");\\n      } else {\\n        ns.tprint(Colors.RED + \\\"Preparation failed, starting loop mode\\\");\\n        throw new Error(\\\"Preparation failed, starting loop mode\\\");\\n      }\\n      await parallelCycle(ns, target, hackThreshold);\\n    }\\n    time.endTime();\\n    ns.print(\\\"Cycle took: \\\" + time.getTime(ns));\\n  }\\n}\\nfunction getHackThreshold(ns, target) {\\n  const allHosts = getBestHostByRam(ns);\\n  const totalMaxRam = allHosts.reduce((acc, server) => {\\n    return acc + server.maxRam;\\n  }, 0);\\n  let hackThreshold = 0.9;\\n  const THRESHOLD_STEP = Config.THRESHOLD_STEP;\\n  const MIN_HACK_THRESHOLD = Config.MIN_HACK_THRESHOLD;\\n  const RAM_WEAKEN = Config.WEAKEN_SCRIPT_RAM;\\n  const RAM_GROW = Config.GROW_SCRIPT_RAM;\\n  const RAM_HACK = Config.HACK_SCRIPT_RAM;\\n  while (true) {\\n    const serverGrowThreads = getGrowThreadsThreshold(ns, target, hackThreshold + THRESHOLD_STEP);\\n    const secIncrease = ns.growthAnalyzeSecurity(serverGrowThreads);\\n    const secondWeakenThreads = Math.ceil(secIncrease / ns.weakenAnalyze(1));\\n    const hackAmount = ns.getServerMaxMoney(target) * hackThreshold;\\n    const serverHackThreads = Math.ceil(ns.hackAnalyzeThreads(target, hackAmount));\\n    const firstWeakenThreads = getWeakenThreadsAfterHack(ns, serverHackThreads);\\n    const totalRamNeeded = firstWeakenThreads * RAM_WEAKEN + serverGrowThreads * RAM_GROW + secondWeakenThreads * RAM_WEAKEN + serverHackThreads * RAM_HACK;\\n    ns.print(\\\"predicted threads needed:\\\");\\n    ns.print(\\\"firstWeakenThreads: \\\" + firstWeakenThreads);\\n    ns.print(\\\"serverGrowThreads: \\\" + serverGrowThreads);\\n    ns.print(\\\"secondWeakenThreads: \\\" + secondWeakenThreads);\\n    ns.print(\\\"serverHackThreads: \\\" + serverHackThreads);\\n    if (totalRamNeeded < totalMaxRam) {\\n      ns.print(\\n        \\\"needs \\\" + totalRamNeeded + \\\"GB of RAM and got \\\" + totalMaxRam + \\\". Running parallel mode on \\\" + target\\n      );\\n      break;\\n    }\\n    if (hackThreshold < MIN_HACK_THRESHOLD) {\\n      ns.tprint(\\\"Error! Not enough RAM to run parallel mode on \\\" + target);\\n      throw new Error(\\\"Error! Not enough RAM to run parallel mode on \\\" + target);\\n    }\\n    hackThreshold = Math.round((hackThreshold - THRESHOLD_STEP) * 100) / 100;\\n    ns.print(\\\"Threshold is too high, trying with: \\\" + hackThreshold);\\n  }\\n  return hackThreshold;\\n}\\nfunction getHackThresholdBatch(ns, target) {\\n  const allHosts = getBestHostByRam(ns);\\n  const totalMaxRam = allHosts.reduce((acc, server) => {\\n    return acc + server.maxRam;\\n  }, 0);\\n  let hackThreshold = 0.9;\\n  const THRESHOLD_STEP = Config.THRESHOLD_STEP;\\n  while (true) {\\n    const serverGrowThreads = getGrowThreadsFormulas(ns, target, hackThreshold);\\n    const secondWeakenThreads = getWeakenThreadsAfterGrow(ns, serverGrowThreads);\\n    const serverHackThreads = getHackThreadsFormulas(ns, target, hackThreshold);\\n    const firstWeakenThreads = getWeakenThreadsAfterHack(ns, serverHackThreads);\\n    const weaken1RamNeeded = Config.WEAKEN_SCRIPT_RAM * firstWeakenThreads;\\n    const weaken2RamNeeded = Config.WEAKEN_SCRIPT_RAM * secondWeakenThreads;\\n    const growRamNeeded = Config.GROW_SCRIPT_RAM * serverGrowThreads;\\n    const hackRamNeeded = Config.HACK_SCRIPT_RAM * serverHackThreads;\\n    const totalRamNeeded = weaken1RamNeeded + weaken2RamNeeded + growRamNeeded + hackRamNeeded;\\n    ns.print(\\\"predicted threads needed:\\\");\\n    ns.print(\\\"firstWeakenThreads: \\\" + firstWeakenThreads + \\\" with \\\" + weaken1RamNeeded + \\\"GB of RAM\\\");\\n    ns.print(\\\"serverGrowThreads: \\\" + serverGrowThreads + \\\" with \\\" + growRamNeeded + \\\"GB of RAM\\\");\\n    ns.print(\\\"secondWeakenThreads: \\\" + secondWeakenThreads + \\\" with \\\" + weaken2RamNeeded + \\\"GB of RAM\\\");\\n    ns.print(\\\"serverHackThreads: \\\" + serverHackThreads + \\\" with \\\" + hackRamNeeded + \\\"GB of RAM\\\");\\n    ns.print(\\n      \\\"totalThreads: \\\" + (firstWeakenThreads + serverGrowThreads + secondWeakenThreads + serverHackThreads) + \\\" with \\\" + totalRamNeeded + \\\"GB of RAM\\\"\\n    );\\n    if (totalRamNeeded < totalMaxRam) {\\n      ns.print(\\n        \\\"needs \\\" + totalRamNeeded + \\\"GB of RAM and got \\\" + totalMaxRam + \\\". Running parallel mode on \\\" + target\\n      );\\n      return hackThreshold;\\n    }\\n    ns.print(\\n      Colors.YELLOW + \\\"Not enough RAM to run parallel mode on \\\" + target + \\\". Attempting to upgrade/buy server...\\\"\\n    );\\n    const hackServer = ServerManager.buyOrUpgradeServer(ns, hackRamNeeded, \\\"hack\\\", 0);\\n    const Server = ServerManager.buyOrUpgradeServer(ns, growRamNeeded, \\\"grow\\\", 0);\\n    const weaken1Server = ServerManager.buyOrUpgradeServer(ns, weaken1RamNeeded, \\\"weak_1\\\", 0);\\n    const weaken2Server = ServerManager.buyOrUpgradeServer(ns, weaken2RamNeeded, \\\"weak_2\\\", 0);\\n    if (hackServer !== \\\"\\\" && Server !== \\\"\\\" && weaken1Server !== \\\"\\\" && weaken2Server !== \\\"\\\") {\\n      ns.print(Colors.GREEN + \\\"Servers bought, running parallel mode on \\\" + target);\\n      return hackThreshold;\\n    }\\n    hackThreshold = Math.round((hackThreshold - THRESHOLD_STEP) * 100) / 100;\\n    ns.print(\\\"Threshold is too high, trying with: \\\" + hackThreshold);\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2tpbmdEZWFtb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiLi9Db25maWcvQ29uZmlnXCI7XHJcbmltcG9ydCB7IGdldEJlc3RIb3N0QnlSYW0sIGdldEJlc3RTZXJ2ZXJMaXN0IH0gZnJvbSBcIi4vYmVzdFNlcnZlclwiO1xyXG5pbXBvcnQge1xyXG4gICAgQ29sb3JzLFxyXG4gICAgZ2V0R3Jvd1RocmVhZHNGb3JtdWxhcyxcclxuICAgIGdldEdyb3dUaHJlYWRzVGhyZXNob2xkLFxyXG4gICAgZ2V0SGFja1RocmVhZHNGb3JtdWxhcyxcclxuICAgIGdldFdlYWtlblRocmVhZHNBZnRlckdyb3csXHJcbiAgICBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJIYWNrLFxyXG59IGZyb20gXCIuL2xpYlwiO1xyXG5pbXBvcnQgeyBwcmVwYXJlU2VydmVyIH0gZnJvbSBcIi4vbG9vcC9wcmVwYXJlU2VydmVyXCI7XHJcbmltcG9ydCB7IFNlcnZlck1hbmFnZXIgfSBmcm9tIFwiLi9wYXJhbGxlbC9TZXJ2ZXJNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IHBhcmFsbGVsQ3ljbGUgfSBmcm9tIFwiLi9wYXJhbGxlbC9tYW5hZ2VyXCI7XHJcbmltcG9ydCB7IFRpbWUgfSBmcm9tIFwiLi9UaW1lXCI7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcclxuICAgIG5zLnRhaWwoKTtcclxuICAgIG5zLmRpc2FibGVMb2coXCJBTExcIik7XHJcbiAgICAvLyBlaXRoZXIgc3RhcnQgbG9vcCBvciBwYXJhbGxlbGl6ZSwgZGVwZW5kaW5nIG9uIHRoZSBudW1iZXIgb2Ygc2VydmVycyBhbmQgbW9uZXkgdGhlIHBsYXllciBoYXNcclxuXHJcbiAgICBsZXQgaGFja1RocmVzaG9sZCA9IDAuNTtcclxuICAgIC8vIGxldCB0YXJnZXQgPSBnZXRCZXN0U2VydmVyTGlzdChucywgZmFsc2UpWzBdLm5hbWU7XHJcbiAgICBsZXQgbGFzdFRhcmdldCA9IFwiXCI7XHJcblxyXG4gICAgY29uc3QgdGltZSA9IFRpbWUuZ2V0SW5zdGFuY2UoKTtcclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgdGltZS5zdGFydFRpbWUoKTtcclxuICAgICAgICBjb25zdCB0YXJnZXQgPSBnZXRCZXN0U2VydmVyTGlzdChucywgZmFsc2UpWzBdLm5hbWU7XHJcbiAgICAgICAgLy8gdGFyZ2V0ID0gXCJ0aGUtaHViXCI7XHJcblxyXG4gICAgICAgIG5zLnByaW50KFwibGFzdFRhcmdldDogXCIgKyBsYXN0VGFyZ2V0ICsgXCIgdGFyZ2V0OiBcIiArIHRhcmdldCk7XHJcbiAgICAgICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJGb3JtdWxhcy5leGVcIiwgXCJob21lXCIpKSB7XHJcbiAgICAgICAgICAgIGlmIChsYXN0VGFyZ2V0ICE9PSB0YXJnZXQpIHtcclxuICAgICAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tIFBSRVBBUkUgU0VSVkVSIC0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAhPSBwYXJzZUZsb2F0KG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkudG9GaXhlZCg1KSkgfHxcclxuICAgICAgICAgICAgICAgICAgICBwYXJzZUZsb2F0KG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KS50b0ZpeGVkKDUpKSAhPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldClcclxuICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHByZXBhcmVTZXJ2ZXIobnMsIHRhcmdldCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBoYWNrVGhyZXNob2xkID0gZ2V0SGFja1RocmVzaG9sZEJhdGNoKG5zLCB0YXJnZXQpO1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoXCJoYWNrVGhyZXNob2xkOiBcIiArIGhhY2tUaHJlc2hvbGQpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgICAgICBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpID09IHBhcnNlRmxvYXQobnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUodGFyZ2V0KS50b0ZpeGVkKDUpKSB8fFxyXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlRmxvYXQobnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpLnRvRml4ZWQoNSkpID09IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KVxyXG4gICAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJQcmVwYXJhdGlvbiBmaW5pc2hlZCwgc3RhcnRpbmcgcGFyYWxsZWwgbW9kZVwiKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbnMudHByaW50KENvbG9ycy5SRUQgKyBcIlByZXBhcmF0aW9uIGZhaWxlZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQcmVwYXJhdGlvbiBmYWlsZWRcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbGFzdFRhcmdldCA9IHRhcmdldDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0gQ0hFQ0sgV0hJQ0ggTU9ERSBUTyBVU0UgLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICAgICAgICAgIGF3YWl0IHBhcmFsbGVsQ3ljbGUobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCwgQ29uZmlnLkxPT1BfQkFUQ0hfQ09VTlQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tIFBSRVBBUkUgU0VSVkVSIC0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgICAgICAgICAvLyBwcmVwYXJlIHdoZW4gbW9uZXkgaXMgbm90IGF0IG1heCBvciBzZWMgbHZsIGlzIG5vdCBhdCBtaW5cclxuICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICAgbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAhPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIHx8XHJcbiAgICAgICAgICAgICAgICBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgIT0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpXHJcbiAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgcHJlcGFyZVNlcnZlcihucywgdGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIGhhY2tUaHJlc2hvbGQgPSBnZXRIYWNrVGhyZXNob2xkKG5zLCB0YXJnZXQpO1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoXCJoYWNrVGhyZXNob2xkOiBcIiArIGhhY2tUaHJlc2hvbGQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpID09IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgJiZcclxuICAgICAgICAgICAgICAgIG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KSA9PSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldClcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICBucy5wcmludChDb2xvcnMuR1JFRU4gKyBcIlByZXBhcmF0aW9uIGZpbmlzaGVkLCBzdGFydGluZyBwYXJhbGxlbCBtb2RlXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbnMudHByaW50KENvbG9ycy5SRUQgKyBcIlByZXBhcmF0aW9uIGZhaWxlZCwgc3RhcnRpbmcgbG9vcCBtb2RlXCIpO1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUHJlcGFyYXRpb24gZmFpbGVkLCBzdGFydGluZyBsb29wIG1vZGVcIik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tIENIRUNLIFdISUNIIE1PREUgVE8gVVNFIC0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgICAgICAgICBhd2FpdCBwYXJhbGxlbEN5Y2xlKG5zLCB0YXJnZXQsIGhhY2tUaHJlc2hvbGQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aW1lLmVuZFRpbWUoKTtcclxuICAgICAgICBucy5wcmludChcIkN5Y2xlIHRvb2s6IFwiICsgdGltZS5nZXRUaW1lKG5zKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBOZWVkcyB1cGRhdGU6IGhhY2sgYXMgbXVjaCBhcyBwb3NzaWJsZSwgd2l0aG91dCBoYXZpbmcgdG8gYnV5IGEgZXh0cmEgc2VydmVyXHJcbiAqXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRIYWNrVGhyZXNob2xkKG5zOiBOUywgdGFyZ2V0OiBzdHJpbmcpOiBudW1iZXIge1xyXG4gICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtKG5zKTtcclxuICAgIGNvbnN0IHRvdGFsTWF4UmFtID0gYWxsSG9zdHMucmVkdWNlKChhY2MsIHNlcnZlcikgPT4ge1xyXG4gICAgICAgIHJldHVybiBhY2MgKyBzZXJ2ZXIubWF4UmFtO1xyXG4gICAgfSwgMCk7XHJcblxyXG4gICAgbGV0IGhhY2tUaHJlc2hvbGQgPSAwLjk7XHJcbiAgICBjb25zdCBUSFJFU0hPTERfU1RFUCA9IENvbmZpZy5USFJFU0hPTERfU1RFUDtcclxuICAgIGNvbnN0IE1JTl9IQUNLX1RIUkVTSE9MRCA9IENvbmZpZy5NSU5fSEFDS19USFJFU0hPTEQ7XHJcblxyXG4gICAgY29uc3QgUkFNX1dFQUtFTiA9IENvbmZpZy5XRUFLRU5fU0NSSVBUX1JBTTtcclxuICAgIGNvbnN0IFJBTV9HUk9XID0gQ29uZmlnLkdST1dfU0NSSVBUX1JBTTtcclxuICAgIGNvbnN0IFJBTV9IQUNLID0gQ29uZmlnLkhBQ0tfU0NSSVBUX1JBTTtcclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgLy8gaG93IG1hbnkgdGhyZWFkcyBpIG5lZWQgdG8gZ3JvdyB0aGUgc2VydmVyIGZyb20gKDEgLSBUaHJlc2hvbGQpIHRvIDFcclxuICAgICAgICAvLyBuZWVkcyB0aHJlc2hvbGQgZ3JvdyBjYWxjdWxhdGlvbiwgY2F1c2Ugd2hlbiB0aGUgc2VydmVyIGlzIGF0IG1heCBtb25leSwgaXQgd291bGQgcmV0dXJuIDAgb3RoZXJ3aXNlXHJcbiAgICAgICAgY29uc3Qgc2VydmVyR3Jvd1RocmVhZHMgPSBnZXRHcm93VGhyZWFkc1RocmVzaG9sZChucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkICsgVEhSRVNIT0xEX1NURVApO1xyXG5cclxuICAgICAgICAvLyBob3cgbWFueSB0aHJlYWRzIGkgbmVlZCB0byB3ZWFrZW4gc2VjdXJpdHkgdG8gMCBhZnRlciBncm93aW5nc1xyXG4gICAgICAgIGNvbnN0IHNlY0luY3JlYXNlID0gbnMuZ3Jvd3RoQW5hbHl6ZVNlY3VyaXR5KHNlcnZlckdyb3dUaHJlYWRzKTtcclxuICAgICAgICBjb25zdCBzZWNvbmRXZWFrZW5UaHJlYWRzID0gTWF0aC5jZWlsKHNlY0luY3JlYXNlIC8gbnMud2Vha2VuQW5hbHl6ZSgxKSk7XHJcblxyXG4gICAgICAgIC8vIGhvdyBtYW55IHRocmVhZHMgaSBuZWVkIHRvIGhhY2sgdGhlIHNlcnZlclxyXG4gICAgICAgIGNvbnN0IGhhY2tBbW91bnQgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogaGFja1RocmVzaG9sZDtcclxuICAgICAgICBjb25zdCBzZXJ2ZXJIYWNrVGhyZWFkcyA9IE1hdGguY2VpbChucy5oYWNrQW5hbHl6ZVRocmVhZHModGFyZ2V0LCBoYWNrQW1vdW50KSk7XHJcblxyXG4gICAgICAgIC8vIGhvdyBtYW55IHRvIHdlYWsgdG8gbWluIHNlYyBsdmwgYWZ0ZXIgW3RocmVzaG9sZF0taGFja1xyXG4gICAgICAgIGNvbnN0IGZpcnN0V2Vha2VuVGhyZWFkcyA9IGdldFdlYWtlblRocmVhZHNBZnRlckhhY2sobnMsIHNlcnZlckhhY2tUaHJlYWRzKTtcclxuXHJcbiAgICAgICAgLy8gdGhpcyB2YXIgZGVzY3JpYmVzIHRoZSB0b3RhbCBhbW91bnQgb2YgdGhyZWFkcyBpIG5lZWQgdG8gcnVuIHBhcmFsbGVsIG1vZGVcclxuICAgICAgICBjb25zdCB0b3RhbFJhbU5lZWRlZCA9XHJcbiAgICAgICAgICAgIGZpcnN0V2Vha2VuVGhyZWFkcyAqIFJBTV9XRUFLRU4gK1xyXG4gICAgICAgICAgICBzZXJ2ZXJHcm93VGhyZWFkcyAqIFJBTV9HUk9XICtcclxuICAgICAgICAgICAgc2Vjb25kV2Vha2VuVGhyZWFkcyAqIFJBTV9XRUFLRU4gK1xyXG4gICAgICAgICAgICBzZXJ2ZXJIYWNrVGhyZWFkcyAqIFJBTV9IQUNLO1xyXG5cclxuICAgICAgICAvLyBsb2cgYWxsXHJcbiAgICAgICAgbnMucHJpbnQoXCJwcmVkaWN0ZWQgdGhyZWFkcyBuZWVkZWQ6XCIpO1xyXG4gICAgICAgIG5zLnByaW50KFwiZmlyc3RXZWFrZW5UaHJlYWRzOiBcIiArIGZpcnN0V2Vha2VuVGhyZWFkcyk7XHJcbiAgICAgICAgbnMucHJpbnQoXCJzZXJ2ZXJHcm93VGhyZWFkczogXCIgKyBzZXJ2ZXJHcm93VGhyZWFkcyk7XHJcbiAgICAgICAgbnMucHJpbnQoXCJzZWNvbmRXZWFrZW5UaHJlYWRzOiBcIiArIHNlY29uZFdlYWtlblRocmVhZHMpO1xyXG4gICAgICAgIG5zLnByaW50KFwic2VydmVySGFja1RocmVhZHM6IFwiICsgc2VydmVySGFja1RocmVhZHMpO1xyXG5cclxuICAgICAgICBpZiAodG90YWxSYW1OZWVkZWQgPCB0b3RhbE1heFJhbSkge1xyXG4gICAgICAgICAgICBucy5wcmludChcclxuICAgICAgICAgICAgICAgIFwibmVlZHMgXCIgKyB0b3RhbFJhbU5lZWRlZCArIFwiR0Igb2YgUkFNIGFuZCBnb3QgXCIgKyB0b3RhbE1heFJhbSArIFwiLiBSdW5uaW5nIHBhcmFsbGVsIG1vZGUgb24gXCIgKyB0YXJnZXQsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaGFja1RocmVzaG9sZCA8IE1JTl9IQUNLX1RIUkVTSE9MRCkge1xyXG4gICAgICAgICAgICBucy50cHJpbnQoXCJFcnJvciEgTm90IGVub3VnaCBSQU0gdG8gcnVuIHBhcmFsbGVsIG1vZGUgb24gXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciEgTm90IGVub3VnaCBSQU0gdG8gcnVuIHBhcmFsbGVsIG1vZGUgb24gXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgICAgICAvLyBUT0RPOiBzaG91bGQgcnVuIGxvb3AgbW9yZSBpbnN0ZWFkXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGhhY2tUaHJlc2hvbGQgPSBNYXRoLnJvdW5kKChoYWNrVGhyZXNob2xkIC0gVEhSRVNIT0xEX1NURVApICogMTAwKSAvIDEwMDtcclxuICAgICAgICBucy5wcmludChcIlRocmVzaG9sZCBpcyB0b28gaGlnaCwgdHJ5aW5nIHdpdGg6IFwiICsgaGFja1RocmVzaG9sZCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaGFja1RocmVzaG9sZDtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0SGFja1RocmVzaG9sZEJhdGNoKG5zOiBOUywgdGFyZ2V0OiBzdHJpbmcpOiBudW1iZXIge1xyXG4gICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtKG5zKTtcclxuICAgIGNvbnN0IHRvdGFsTWF4UmFtID0gYWxsSG9zdHMucmVkdWNlKChhY2MsIHNlcnZlcikgPT4ge1xyXG4gICAgICAgIHJldHVybiBhY2MgKyBzZXJ2ZXIubWF4UmFtO1xyXG4gICAgfSwgMCk7XHJcblxyXG4gICAgbGV0IGhhY2tUaHJlc2hvbGQgPSAwLjk7XHJcbiAgICBjb25zdCBUSFJFU0hPTERfU1RFUCA9IENvbmZpZy5USFJFU0hPTERfU1RFUDtcclxuXHJcbiAgICAvLyBjb25zdCBNSU5fSEFDS19USFJFU0hPTEQgPSBDb25maWcuTUlOX0hBQ0tfVEhSRVNIT0xEO1xyXG4gICAgLy8gY29uc3QgbW9uZXlBbGxvd2VkVG9Vc2UgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcImhvbWVcIikgKiAoMiAvIDMpO1xyXG5cclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgLy8gaG93IG1hbnkgdGhyZWFkcyBpIG5lZWQgdG8gZ3JvdyB0aGUgc2VydmVyIGZyb20gKDEgLSBUaHJlc2hvbGQpIHRvIDFcclxuICAgICAgICAvLyBuZWVkcyB0aHJlc2hvbGQgZ3JvdyBjYWxjdWxhdGlvbiwgY2F1c2Ugd2hlbiB0aGUgc2VydmVyIGlzIGF0IG1heCBtb25leSwgaXQgd291bGQgcmV0dXJuIDAgb3RoZXJ3aXNlXHJcbiAgICAgICAgY29uc3Qgc2VydmVyR3Jvd1RocmVhZHMgPSBnZXRHcm93VGhyZWFkc0Zvcm11bGFzKG5zLCB0YXJnZXQsIGhhY2tUaHJlc2hvbGQpO1xyXG5cclxuICAgICAgICAvLyBob3cgbWFueSB0aHJlYWRzIGkgbmVlZCB0byB3ZWFrZW4gc2VjdXJpdHkgdG8gMCBhZnRlciBncm93aW5nc1xyXG4gICAgICAgIGNvbnN0IHNlY29uZFdlYWtlblRocmVhZHMgPSBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJHcm93KG5zLCBzZXJ2ZXJHcm93VGhyZWFkcyk7XHJcblxyXG4gICAgICAgIC8vIGhvdyBtYW55IHRocmVhZHMgaSBuZWVkIHRvIGhhY2sgdGhlIHNlcnZlclxyXG4gICAgICAgIGNvbnN0IHNlcnZlckhhY2tUaHJlYWRzID0gZ2V0SGFja1RocmVhZHNGb3JtdWxhcyhucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkKTtcclxuXHJcbiAgICAgICAgLy8gaG93IG1hbnkgdG8gd2VhayB0byBtaW4gc2VjIGx2bCBhZnRlciBbdGhyZXNob2xkXS1oYWNrXHJcbiAgICAgICAgY29uc3QgZmlyc3RXZWFrZW5UaHJlYWRzID0gZ2V0V2Vha2VuVGhyZWFkc0FmdGVySGFjayhucywgc2VydmVySGFja1RocmVhZHMpO1xyXG5cclxuICAgICAgICAvLyB0aGlzIHZhciBkZXNjcmliZXMgdGhlIHRvdGFsIGFtb3VudCBvZiB0aHJlYWRzIGkgbmVlZCB0byBydW4gcGFyYWxsZWwgbW9kZVxyXG4gICAgICAgIGNvbnN0IHdlYWtlbjFSYW1OZWVkZWQgPSBDb25maWcuV0VBS0VOX1NDUklQVF9SQU0gKiBmaXJzdFdlYWtlblRocmVhZHM7XHJcbiAgICAgICAgY29uc3Qgd2Vha2VuMlJhbU5lZWRlZCA9IENvbmZpZy5XRUFLRU5fU0NSSVBUX1JBTSAqIHNlY29uZFdlYWtlblRocmVhZHM7XHJcbiAgICAgICAgY29uc3QgZ3Jvd1JhbU5lZWRlZCA9IENvbmZpZy5HUk9XX1NDUklQVF9SQU0gKiBzZXJ2ZXJHcm93VGhyZWFkcztcclxuICAgICAgICBjb25zdCBoYWNrUmFtTmVlZGVkID0gQ29uZmlnLkhBQ0tfU0NSSVBUX1JBTSAqIHNlcnZlckhhY2tUaHJlYWRzO1xyXG5cclxuICAgICAgICBjb25zdCB0b3RhbFJhbU5lZWRlZCA9IHdlYWtlbjFSYW1OZWVkZWQgKyB3ZWFrZW4yUmFtTmVlZGVkICsgZ3Jvd1JhbU5lZWRlZCArIGhhY2tSYW1OZWVkZWQ7XHJcblxyXG4gICAgICAgIC8vIGxvZyBhbGxcclxuICAgICAgICBucy5wcmludChcInByZWRpY3RlZCB0aHJlYWRzIG5lZWRlZDpcIik7XHJcbiAgICAgICAgbnMucHJpbnQoXCJmaXJzdFdlYWtlblRocmVhZHM6IFwiICsgZmlyc3RXZWFrZW5UaHJlYWRzICsgXCIgd2l0aCBcIiArIHdlYWtlbjFSYW1OZWVkZWQgKyBcIkdCIG9mIFJBTVwiKTtcclxuICAgICAgICBucy5wcmludChcInNlcnZlckdyb3dUaHJlYWRzOiBcIiArIHNlcnZlckdyb3dUaHJlYWRzICsgXCIgd2l0aCBcIiArIGdyb3dSYW1OZWVkZWQgKyBcIkdCIG9mIFJBTVwiKTtcclxuICAgICAgICBucy5wcmludChcInNlY29uZFdlYWtlblRocmVhZHM6IFwiICsgc2Vjb25kV2Vha2VuVGhyZWFkcyArIFwiIHdpdGggXCIgKyB3ZWFrZW4yUmFtTmVlZGVkICsgXCJHQiBvZiBSQU1cIik7XHJcbiAgICAgICAgbnMucHJpbnQoXCJzZXJ2ZXJIYWNrVGhyZWFkczogXCIgKyBzZXJ2ZXJIYWNrVGhyZWFkcyArIFwiIHdpdGggXCIgKyBoYWNrUmFtTmVlZGVkICsgXCJHQiBvZiBSQU1cIik7XHJcbiAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgIFwidG90YWxUaHJlYWRzOiBcIiArXHJcbiAgICAgICAgICAgICAgICAoZmlyc3RXZWFrZW5UaHJlYWRzICsgc2VydmVyR3Jvd1RocmVhZHMgKyBzZWNvbmRXZWFrZW5UaHJlYWRzICsgc2VydmVySGFja1RocmVhZHMpICtcclxuICAgICAgICAgICAgICAgIFwiIHdpdGggXCIgK1xyXG4gICAgICAgICAgICAgICAgdG90YWxSYW1OZWVkZWQgK1xyXG4gICAgICAgICAgICAgICAgXCJHQiBvZiBSQU1cIixcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICBpZiAodG90YWxSYW1OZWVkZWQgPCB0b3RhbE1heFJhbSkge1xyXG4gICAgICAgICAgICBucy5wcmludChcclxuICAgICAgICAgICAgICAgIFwibmVlZHMgXCIgKyB0b3RhbFJhbU5lZWRlZCArIFwiR0Igb2YgUkFNIGFuZCBnb3QgXCIgKyB0b3RhbE1heFJhbSArIFwiLiBSdW5uaW5nIHBhcmFsbGVsIG1vZGUgb24gXCIgKyB0YXJnZXQsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiBoYWNrVGhyZXNob2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgICBucy5wcmludChcclxuICAgICAgICAgICAgQ29sb3JzLllFTExPVyArXHJcbiAgICAgICAgICAgICAgICBcIk5vdCBlbm91Z2ggUkFNIHRvIHJ1biBwYXJhbGxlbCBtb2RlIG9uIFwiICtcclxuICAgICAgICAgICAgICAgIHRhcmdldCArXHJcbiAgICAgICAgICAgICAgICBcIi4gQXR0ZW1wdGluZyB0byB1cGdyYWRlL2J1eSBzZXJ2ZXIuLi5cIixcclxuICAgICAgICApO1xyXG4gICAgICAgIC8vIGkgbmVlZCBzb21lIHNvcnQgb2YgbG9naWMsIHRvIGZpbmRcclxuICAgICAgICBjb25zdCBoYWNrU2VydmVyID0gU2VydmVyTWFuYWdlci5idXlPclVwZ3JhZGVTZXJ2ZXIobnMsIGhhY2tSYW1OZWVkZWQsIFwiaGFja1wiLCAwKTtcclxuICAgICAgICBjb25zdCBTZXJ2ZXIgPSBTZXJ2ZXJNYW5hZ2VyLmJ1eU9yVXBncmFkZVNlcnZlcihucywgZ3Jvd1JhbU5lZWRlZCwgXCJncm93XCIsIDApO1xyXG4gICAgICAgIGNvbnN0IHdlYWtlbjFTZXJ2ZXIgPSBTZXJ2ZXJNYW5hZ2VyLmJ1eU9yVXBncmFkZVNlcnZlcihucywgd2Vha2VuMVJhbU5lZWRlZCwgXCJ3ZWFrXzFcIiwgMCk7XHJcbiAgICAgICAgY29uc3Qgd2Vha2VuMlNlcnZlciA9IFNlcnZlck1hbmFnZXIuYnV5T3JVcGdyYWRlU2VydmVyKG5zLCB3ZWFrZW4yUmFtTmVlZGVkLCBcIndlYWtfMlwiLCAwKTtcclxuXHJcbiAgICAgICAgaWYgKGhhY2tTZXJ2ZXIgIT09IFwiXCIgJiYgU2VydmVyICE9PSBcIlwiICYmIHdlYWtlbjFTZXJ2ZXIgIT09IFwiXCIgJiYgd2Vha2VuMlNlcnZlciAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICBucy5wcmludChDb2xvcnMuR1JFRU4gKyBcIlNlcnZlcnMgYm91Z2h0LCBydW5uaW5nIHBhcmFsbGVsIG1vZGUgb24gXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgICAgICByZXR1cm4gaGFja1RocmVzaG9sZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGhhY2tUaHJlc2hvbGQgPSBNYXRoLnJvdW5kKChoYWNrVGhyZXNob2xkIC0gVEhSRVNIT0xEX1NURVApICogMTAwKSAvIDEwMDtcclxuICAgICAgICBucy5wcmludChcIlRocmVzaG9sZCBpcyB0b28gaGlnaCwgdHJ5aW5nIHdpdGg6IFwiICsgaGFja1RocmVzaG9sZCk7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFFQSxTQUFTLGNBQWM7QUFDdkIsU0FBUyxrQkFBa0IseUJBQXlCO0FBQ3BEO0FBQUEsRUFDSTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsT0FDRztBQUNQLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMsWUFBWTtBQUVyQixzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLEtBQUcsS0FBSztBQUNSLEtBQUcsV0FBVyxLQUFLO0FBR25CLE1BQUksZ0JBQWdCO0FBRXBCLE1BQUksYUFBYTtBQUVqQixRQUFNLE9BQU8sS0FBSyxZQUFZO0FBQzlCLFNBQU8sTUFBTTtBQUNULFNBQUssVUFBVTtBQUNmLFVBQU0sU0FBUyxrQkFBa0IsSUFBSSxLQUFLLEVBQUUsQ0FBQyxFQUFFO0FBRy9DLE9BQUcsTUFBTSxpQkFBaUIsYUFBYSxjQUFjLE1BQU07QUFDM0QsUUFBSSxHQUFHLFdBQVcsZ0JBQWdCLE1BQU0sR0FBRztBQUN2QyxVQUFJLGVBQWUsUUFBUTtBQUV2QixZQUNJLEdBQUcsa0JBQWtCLE1BQU0sS0FBSyxXQUFXLEdBQUcsd0JBQXdCLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxLQUN4RixXQUFXLEdBQUcsdUJBQXVCLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxLQUFLLEdBQUcsMEJBQTBCLE1BQU0sR0FDakc7QUFDRSxnQkFBTSxjQUFjLElBQUksTUFBTTtBQUFBLFFBQ2xDO0FBQ0Esd0JBQWdCLHNCQUFzQixJQUFJLE1BQU07QUFDaEQsV0FBRyxNQUFNLG9CQUFvQixhQUFhO0FBRTFDLFlBQ0ksR0FBRyxrQkFBa0IsTUFBTSxLQUFLLFdBQVcsR0FBRyx3QkFBd0IsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLEtBQ3hGLFdBQVcsR0FBRyx1QkFBdUIsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLEtBQUssR0FBRywwQkFBMEIsTUFBTSxHQUNqRztBQUNFLGFBQUcsTUFBTSxPQUFPLFFBQVEsOENBQThDO0FBQUEsUUFDMUUsT0FBTztBQUNILGFBQUcsT0FBTyxPQUFPLE1BQU0sb0JBQW9CO0FBQzNDLGdCQUFNLElBQUksTUFBTSxvQkFBb0I7QUFBQSxRQUN4QztBQUVBLHFCQUFhO0FBQUEsTUFDakI7QUFJQSxZQUFNLGNBQWMsSUFBSSxRQUFRLGVBQWUsT0FBTyxnQkFBZ0I7QUFBQSxJQUMxRSxPQUFPO0FBSUgsVUFDSSxHQUFHLGtCQUFrQixNQUFNLEtBQUssR0FBRyx3QkFBd0IsTUFBTSxLQUNqRSxHQUFHLHVCQUF1QixNQUFNLEtBQUssR0FBRywwQkFBMEIsTUFBTSxHQUMxRTtBQUNFLGNBQU0sY0FBYyxJQUFJLE1BQU07QUFDOUIsd0JBQWdCLGlCQUFpQixJQUFJLE1BQU07QUFDM0MsV0FBRyxNQUFNLG9CQUFvQixhQUFhO0FBQUEsTUFDOUM7QUFFQSxVQUNJLEdBQUcsa0JBQWtCLE1BQU0sS0FBSyxHQUFHLHdCQUF3QixNQUFNLEtBQ2pFLEdBQUcsdUJBQXVCLE1BQU0sS0FBSyxHQUFHLDBCQUEwQixNQUFNLEdBQzFFO0FBQ0UsV0FBRyxNQUFNLE9BQU8sUUFBUSw4Q0FBOEM7QUFBQSxNQUMxRSxPQUFPO0FBQ0gsV0FBRyxPQUFPLE9BQU8sTUFBTSx3Q0FBd0M7QUFDL0QsY0FBTSxJQUFJLE1BQU0sd0NBQXdDO0FBQUEsTUFDNUQ7QUFJQSxZQUFNLGNBQWMsSUFBSSxRQUFRLGFBQWE7QUFBQSxJQUNqRDtBQUNBLFNBQUssUUFBUTtBQUNiLE9BQUcsTUFBTSxpQkFBaUIsS0FBSyxRQUFRLEVBQUUsQ0FBQztBQUFBLEVBQzlDO0FBQ0o7QUFNQSxTQUFTLGlCQUFpQixJQUFRLFFBQXdCO0FBQ3RELFFBQU0sV0FBVyxpQkFBaUIsRUFBRTtBQUNwQyxRQUFNLGNBQWMsU0FBUyxPQUFPLENBQUMsS0FBSyxXQUFXO0FBQ2pELFdBQU8sTUFBTSxPQUFPO0FBQUEsRUFDeEIsR0FBRyxDQUFDO0FBRUosTUFBSSxnQkFBZ0I7QUFDcEIsUUFBTSxpQkFBaUIsT0FBTztBQUM5QixRQUFNLHFCQUFxQixPQUFPO0FBRWxDLFFBQU0sYUFBYSxPQUFPO0FBQzFCLFFBQU0sV0FBVyxPQUFPO0FBQ3hCLFFBQU0sV0FBVyxPQUFPO0FBQ3hCLFNBQU8sTUFBTTtBQUdULFVBQU0sb0JBQW9CLHdCQUF3QixJQUFJLFFBQVEsZ0JBQWdCLGNBQWM7QUFHNUYsVUFBTSxjQUFjLEdBQUcsc0JBQXNCLGlCQUFpQjtBQUM5RCxVQUFNLHNCQUFzQixLQUFLLEtBQUssY0FBYyxHQUFHLGNBQWMsQ0FBQyxDQUFDO0FBR3ZFLFVBQU0sYUFBYSxHQUFHLGtCQUFrQixNQUFNLElBQUk7QUFDbEQsVUFBTSxvQkFBb0IsS0FBSyxLQUFLLEdBQUcsbUJBQW1CLFFBQVEsVUFBVSxDQUFDO0FBRzdFLFVBQU0scUJBQXFCLDBCQUEwQixJQUFJLGlCQUFpQjtBQUcxRSxVQUFNLGlCQUNGLHFCQUFxQixhQUNyQixvQkFBb0IsV0FDcEIsc0JBQXNCLGFBQ3RCLG9CQUFvQjtBQUd4QixPQUFHLE1BQU0sMkJBQTJCO0FBQ3BDLE9BQUcsTUFBTSx5QkFBeUIsa0JBQWtCO0FBQ3BELE9BQUcsTUFBTSx3QkFBd0IsaUJBQWlCO0FBQ2xELE9BQUcsTUFBTSwwQkFBMEIsbUJBQW1CO0FBQ3RELE9BQUcsTUFBTSx3QkFBd0IsaUJBQWlCO0FBRWxELFFBQUksaUJBQWlCLGFBQWE7QUFDOUIsU0FBRztBQUFBLFFBQ0MsV0FBVyxpQkFBaUIsdUJBQXVCLGNBQWMsZ0NBQWdDO0FBQUEsTUFDckc7QUFDQTtBQUFBLElBQ0o7QUFDQSxRQUFJLGdCQUFnQixvQkFBb0I7QUFDcEMsU0FBRyxPQUFPLG1EQUFtRCxNQUFNO0FBQ25FLFlBQU0sSUFBSSxNQUFNLG1EQUFtRCxNQUFNO0FBQUEsSUFFN0U7QUFDQSxvQkFBZ0IsS0FBSyxPQUFPLGdCQUFnQixrQkFBa0IsR0FBRyxJQUFJO0FBQ3JFLE9BQUcsTUFBTSx5Q0FBeUMsYUFBYTtBQUFBLEVBQ25FO0FBQ0EsU0FBTztBQUNYO0FBRUEsU0FBUyxzQkFBc0IsSUFBUSxRQUF3QjtBQUMzRCxRQUFNLFdBQVcsaUJBQWlCLEVBQUU7QUFDcEMsUUFBTSxjQUFjLFNBQVMsT0FBTyxDQUFDLEtBQUssV0FBVztBQUNqRCxXQUFPLE1BQU0sT0FBTztBQUFBLEVBQ3hCLEdBQUcsQ0FBQztBQUVKLE1BQUksZ0JBQWdCO0FBQ3BCLFFBQU0saUJBQWlCLE9BQU87QUFLOUIsU0FBTyxNQUFNO0FBR1QsVUFBTSxvQkFBb0IsdUJBQXVCLElBQUksUUFBUSxhQUFhO0FBRzFFLFVBQU0sc0JBQXNCLDBCQUEwQixJQUFJLGlCQUFpQjtBQUczRSxVQUFNLG9CQUFvQix1QkFBdUIsSUFBSSxRQUFRLGFBQWE7QUFHMUUsVUFBTSxxQkFBcUIsMEJBQTBCLElBQUksaUJBQWlCO0FBRzFFLFVBQU0sbUJBQW1CLE9BQU8sb0JBQW9CO0FBQ3BELFVBQU0sbUJBQW1CLE9BQU8sb0JBQW9CO0FBQ3BELFVBQU0sZ0JBQWdCLE9BQU8sa0JBQWtCO0FBQy9DLFVBQU0sZ0JBQWdCLE9BQU8sa0JBQWtCO0FBRS9DLFVBQU0saUJBQWlCLG1CQUFtQixtQkFBbUIsZ0JBQWdCO0FBRzdFLE9BQUcsTUFBTSwyQkFBMkI7QUFDcEMsT0FBRyxNQUFNLHlCQUF5QixxQkFBcUIsV0FBVyxtQkFBbUIsV0FBVztBQUNoRyxPQUFHLE1BQU0sd0JBQXdCLG9CQUFvQixXQUFXLGdCQUFnQixXQUFXO0FBQzNGLE9BQUcsTUFBTSwwQkFBMEIsc0JBQXNCLFdBQVcsbUJBQW1CLFdBQVc7QUFDbEcsT0FBRyxNQUFNLHdCQUF3QixvQkFBb0IsV0FBVyxnQkFBZ0IsV0FBVztBQUMzRixPQUFHO0FBQUEsTUFDQyxvQkFDSyxxQkFBcUIsb0JBQW9CLHNCQUFzQixxQkFDaEUsV0FDQSxpQkFDQTtBQUFBLElBQ1I7QUFFQSxRQUFJLGlCQUFpQixhQUFhO0FBQzlCLFNBQUc7QUFBQSxRQUNDLFdBQVcsaUJBQWlCLHVCQUF1QixjQUFjLGdDQUFnQztBQUFBLE1BQ3JHO0FBQ0EsYUFBTztBQUFBLElBQ1g7QUFDQSxPQUFHO0FBQUEsTUFDQyxPQUFPLFNBQ0gsNENBQ0EsU0FDQTtBQUFBLElBQ1I7QUFFQSxVQUFNLGFBQWEsY0FBYyxtQkFBbUIsSUFBSSxlQUFlLFFBQVEsQ0FBQztBQUNoRixVQUFNLFNBQVMsY0FBYyxtQkFBbUIsSUFBSSxlQUFlLFFBQVEsQ0FBQztBQUM1RSxVQUFNLGdCQUFnQixjQUFjLG1CQUFtQixJQUFJLGtCQUFrQixVQUFVLENBQUM7QUFDeEYsVUFBTSxnQkFBZ0IsY0FBYyxtQkFBbUIsSUFBSSxrQkFBa0IsVUFBVSxDQUFDO0FBRXhGLFFBQUksZUFBZSxNQUFNLFdBQVcsTUFBTSxrQkFBa0IsTUFBTSxrQkFBa0IsSUFBSTtBQUNwRixTQUFHLE1BQU0sT0FBTyxRQUFRLDhDQUE4QyxNQUFNO0FBQzVFLGFBQU87QUFBQSxJQUNYO0FBRUEsb0JBQWdCLEtBQUssT0FBTyxnQkFBZ0Isa0JBQWtCLEdBQUcsSUFBSTtBQUNyRSxPQUFHLE1BQU0seUNBQXlDLGFBQWE7QUFBQSxFQUNuRTtBQUNKOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hackingDeamon.js\",\"server\":\"home\"}}],[\"loop/prepareServer.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { Colors, getGrowThreads, getWeakenThreads, getWeakenThreadsAfterGrow } from \\\"/lib.js\\\";\\nimport { WGHAlgorithms } from \\\"/parallel/WGHAlgorithms.js\\\";\\nimport { printServerStats } from \\\"/serverStats.js\\\";\\nimport { getBestHostByRam } from \\\"/bestServer.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  await prepareServer(ns, \\\"foodnstuff\\\");\\n}\\nexport async function prepareServer(ns, target, threshold = 0.8) {\\n  const allHosts = getBestHostByRam(ns);\\n  const sumAvailableRam = allHosts.reduce((acc, server) => {\\n    return acc + server.availableRam;\\n  }, 0);\\n  const weakenThreads = getWeakenThreads(ns, target);\\n  const growThreads = getGrowThreads(ns, target);\\n  const weakenAfterGrowThreads = getWeakenThreadsAfterGrow(ns, growThreads);\\n  const totalRamNeeded = weakenThreads * Config.WEAKEN_SCRIPT_RAM + growThreads * Config.GROW_SCRIPT_RAM + weakenAfterGrowThreads * Config.WEAKEN_SCRIPT_RAM;\\n  ns.print(\\n    \\\"needs \\\" + totalRamNeeded + \\\"GB of RAM and got \\\" + sumAvailableRam + \\\" to running parallel mode on \\\" + target\\n  );\\n  if (totalRamNeeded < sumAvailableRam) {\\n    ns.print(Colors.CYAN + \\\"Preparing \\\" + target + \\\" in parallel mode\\\");\\n    const weakTime = ns.getWeakenTime(target);\\n    const growTime = ns.getGrowTime(target);\\n    WGHAlgorithms.weakenServer(ns, target, 1, 0, false, 0, false);\\n    const growDelay = weakTime - growTime + Config.DELAY_MARGIN_MS;\\n    WGHAlgorithms.growServer(ns, target, 0, false, 0, growDelay, false);\\n    const weak2delay = 2 * Config.DELAY_MARGIN_MS;\\n    WGHAlgorithms.weakenServer(ns, target, 2, 0, false, weak2delay, false);\\n    await ns.sleep(weakTime + 4 * Config.DELAY_MARGIN_MS);\\n  } else {\\n    ns.print(Colors.CYAN + \\\"Preparing \\\" + target + \\\" in loop mode\\\");\\n    const safetyMarginMs = Config.DELAY_MARGIN_MS;\\n    while (true) {\\n      const totalWeakenThreadsNeeded = getWeakenThreads(ns, target);\\n      ns.print(Colors.CYAN + \\\"------------ WEAKENING ------------\\\");\\n      ns.print(\\\"total weaken threads needed: \\\" + totalWeakenThreadsNeeded);\\n      let threadsDispatched = 0;\\n      let threadsRemaining = totalWeakenThreadsNeeded;\\n      while (threadsDispatched < totalWeakenThreadsNeeded) {\\n        const weakenTime = ns.getWeakenTime(target);\\n        for (let i = 0; i < allHosts.length; i++) {\\n          if (threadsDispatched >= totalWeakenThreadsNeeded)\\n            break;\\n          const host = allHosts[i];\\n          const freeRam = host.maxRam - ns.getServerUsedRam(host.name);\\n          if (freeRam < Config.WEAKEN_SCRIPT_RAM)\\n            continue;\\n          const numThreadsOnHost = Math.floor(freeRam / Config.WEAKEN_SCRIPT_RAM);\\n          const threadsToDispatch = Math.min(threadsRemaining, numThreadsOnHost);\\n          ns.exec(\\\"weaken.js\\\", host.name, threadsToDispatch, target, 0);\\n          threadsRemaining -= threadsToDispatch;\\n          threadsDispatched += threadsToDispatch;\\n        }\\n        ns.print(\\\"dispatched \\\" + threadsDispatched + \\\" weaken threads\\\");\\n        await ns.sleep(weakenTime + safetyMarginMs + 1e3);\\n        ns.print(\\\"done with \\\" + threadsDispatched + \\\"/\\\" + totalWeakenThreadsNeeded + \\\" weakens\\\");\\n      }\\n      printServerStats(ns, target, threshold);\\n      ns.print(Colors.CYAN + \\\"------------- GROWING -------------\\\");\\n      const totalGrowThreadsNeeded = getGrowThreads(ns, target);\\n      if (totalGrowThreadsNeeded === 0) {\\n        ns.print(\\\"No growth needed\\\");\\n        break;\\n      }\\n      ns.print(\\\"total growing threads needed: \\\" + totalGrowThreadsNeeded);\\n      const growingTime = ns.getGrowTime(target);\\n      threadsDispatched = 0;\\n      for (let i = 0; i < allHosts.length; i++) {\\n        const host = allHosts[i];\\n        const freeRam = host.maxRam - ns.getServerUsedRam(host.name);\\n        if (freeRam < Config.GROW_SCRIPT_RAM)\\n          continue;\\n        const numThreadsOnHost = Math.floor(freeRam / Config.GROW_SCRIPT_RAM);\\n        ns.exec(\\\"grow.js\\\", host.name, numThreadsOnHost, target, 0);\\n        threadsDispatched += numThreadsOnHost;\\n      }\\n      ns.print(\\\"dispatched \\\" + threadsDispatched + \\\" grow threads\\\");\\n      await ns.sleep(growingTime + safetyMarginMs);\\n      ns.print(\\\"done with \\\" + threadsDispatched + \\\"/\\\" + totalGrowThreadsNeeded + \\\" grows\\\");\\n      printServerStats(ns, target, threshold);\\n    }\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZXBhcmVTZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSBcIkAvQ29uZmlnL0NvbmZpZ1wiO1xuaW1wb3J0IHsgQ29sb3JzLCBnZXRHcm93VGhyZWFkcywgZ2V0V2Vha2VuVGhyZWFkcywgZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyB9IGZyb20gXCJAL2xpYlwiO1xuaW1wb3J0IHsgV0dIQWxnb3JpdGhtcyB9IGZyb20gXCJAL3BhcmFsbGVsL1dHSEFsZ29yaXRobXNcIjtcbmltcG9ydCB7IHByaW50U2VydmVyU3RhdHMgfSBmcm9tIFwiQC9zZXJ2ZXJTdGF0c1wiO1xuaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5pbXBvcnQgeyBnZXRCZXN0SG9zdEJ5UmFtIH0gZnJvbSBcIi4uL2Jlc3RTZXJ2ZXJcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XG4gICAgbnMudGFpbCgpO1xuICAgIGF3YWl0IHByZXBhcmVTZXJ2ZXIobnMsIFwiZm9vZG5zdHVmZlwiKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZXBhcmVTZXJ2ZXIobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgdGhyZXNob2xkID0gMC44KSB7XG4gICAgLy8gZWl0aGVyIHByZXBhcmUgaW4gbG9vcCBvciBwYXJhbGxlbCBtb2RlXG4gICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtKG5zKTtcbiAgICBjb25zdCBzdW1BdmFpbGFibGVSYW0gPSBhbGxIb3N0cy5yZWR1Y2UoKGFjYywgc2VydmVyKSA9PiB7XG4gICAgICAgIHJldHVybiBhY2MgKyBzZXJ2ZXIuYXZhaWxhYmxlUmFtO1xuICAgIH0sIDApO1xuXG4gICAgLy8gaG93IG11Y2ggdGhyZWFkcyBhcmUgbmVlZGVkOiB3ZWFrZW4gZnJvbSB1bmtub3duIHRvIG1pbiArIGdyb3cgZnJvbSB1bmtub3duIHRvIG1heCArIHdlYWtlbiBncm93IGVmZmVjdFxuICAgIGNvbnN0IHdlYWtlblRocmVhZHMgPSBnZXRXZWFrZW5UaHJlYWRzKG5zLCB0YXJnZXQpO1xuICAgIGNvbnN0IGdyb3dUaHJlYWRzID0gZ2V0R3Jvd1RocmVhZHMobnMsIHRhcmdldCk7XG4gICAgY29uc3Qgd2Vha2VuQWZ0ZXJHcm93VGhyZWFkcyA9IGdldFdlYWtlblRocmVhZHNBZnRlckdyb3cobnMsIGdyb3dUaHJlYWRzKTtcblxuICAgIGNvbnN0IHRvdGFsUmFtTmVlZGVkID1cbiAgICAgICAgd2Vha2VuVGhyZWFkcyAqIENvbmZpZy5XRUFLRU5fU0NSSVBUX1JBTSArXG4gICAgICAgIGdyb3dUaHJlYWRzICogQ29uZmlnLkdST1dfU0NSSVBUX1JBTSArXG4gICAgICAgIHdlYWtlbkFmdGVyR3Jvd1RocmVhZHMgKiBDb25maWcuV0VBS0VOX1NDUklQVF9SQU07XG5cbiAgICBucy5wcmludChcbiAgICAgICAgXCJuZWVkcyBcIiArIHRvdGFsUmFtTmVlZGVkICsgXCJHQiBvZiBSQU0gYW5kIGdvdCBcIiArIHN1bUF2YWlsYWJsZVJhbSArIFwiIHRvIHJ1bm5pbmcgcGFyYWxsZWwgbW9kZSBvbiBcIiArIHRhcmdldCxcbiAgICApO1xuXG4gICAgaWYgKHRvdGFsUmFtTmVlZGVkIDwgc3VtQXZhaWxhYmxlUmFtKSB7XG4gICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFBBUkFMTEVMIE1PREUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIlByZXBhcmluZyBcIiArIHRhcmdldCArIFwiIGluIHBhcmFsbGVsIG1vZGVcIik7XG5cbiAgICAgICAgY29uc3Qgd2Vha1RpbWUgPSBucy5nZXRXZWFrZW5UaW1lKHRhcmdldCk7XG4gICAgICAgIGNvbnN0IGdyb3dUaW1lID0gbnMuZ2V0R3Jvd1RpbWUodGFyZ2V0KTtcblxuICAgICAgICBXR0hBbGdvcml0aG1zLndlYWtlblNlcnZlcihucywgdGFyZ2V0LCAxLCAwLCBmYWxzZSwgMCwgZmFsc2UpO1xuXG4gICAgICAgIGNvbnN0IGdyb3dEZWxheSA9IHdlYWtUaW1lIC0gZ3Jvd1RpbWUgKyBDb25maWcuREVMQVlfTUFSR0lOX01TO1xuICAgICAgICBXR0hBbGdvcml0aG1zLmdyb3dTZXJ2ZXIobnMsIHRhcmdldCwgMCwgZmFsc2UsIDAsIGdyb3dEZWxheSwgZmFsc2UpO1xuXG4gICAgICAgIGNvbnN0IHdlYWsyZGVsYXkgPSAyICogQ29uZmlnLkRFTEFZX01BUkdJTl9NUztcbiAgICAgICAgV0dIQWxnb3JpdGhtcy53ZWFrZW5TZXJ2ZXIobnMsIHRhcmdldCwgMiwgMCwgZmFsc2UsIHdlYWsyZGVsYXksIGZhbHNlKTtcblxuICAgICAgICAvLyB3YWl0IGZvciBwcmVwIHRvIGZpbmlzaFxuICAgICAgICBhd2FpdCBucy5zbGVlcCh3ZWFrVGltZSArIDQgKiBDb25maWcuREVMQVlfTUFSR0lOX01TKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIExPT1AgTU9ERSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCJQcmVwYXJpbmcgXCIgKyB0YXJnZXQgKyBcIiBpbiBsb29wIG1vZGVcIik7XG5cbiAgICAgICAgY29uc3Qgc2FmZXR5TWFyZ2luTXMgPSBDb25maWcuREVMQVlfTUFSR0lOX01TO1xuXG4gICAgICAgIC8vIFRPRE86IHVzZSBzaW1pbGFyIG1ldGhvZCBhcyBpbiBwYXJhbGxlbC9tYW5hZ2VyLnRzIHRvIGxldCB0aGUgZ3JvdyBmaW5pc2ggcmlnaHQgYWZ0ZXIgdGhlIHdlYWtlblxuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgY29uc3QgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gZ2V0V2Vha2VuVGhyZWFkcyhucywgdGFyZ2V0KTtcblxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIi0tLS0tLS0tLS0tLSBXRUFLRU5JTkcgLS0tLS0tLS0tLS0tXCIpO1xuICAgICAgICAgICAgbnMucHJpbnQoXCJ0b3RhbCB3ZWFrZW4gdGhyZWFkcyBuZWVkZWQ6IFwiICsgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkKTtcbiAgICAgICAgICAgIC8vIHdlYWtlbiB0byBtaW4gc2VjIGx2bFxuICAgICAgICAgICAgbGV0IHRocmVhZHNEaXNwYXRjaGVkID0gMDtcbiAgICAgICAgICAgIGxldCB0aHJlYWRzUmVtYWluaW5nID0gdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkO1xuICAgICAgICAgICAgd2hpbGUgKHRocmVhZHNEaXNwYXRjaGVkIDwgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgd2Vha2VuVGltZSA9IG5zLmdldFdlYWtlblRpbWUodGFyZ2V0KTtcblxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRocmVhZHNEaXNwYXRjaGVkID49IHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCkgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmcmVlUmFtID0gaG9zdC5tYXhSYW0gLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKGhvc3QubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmcmVlUmFtIDwgQ29uZmlnLldFQUtFTl9TQ1JJUFRfUkFNKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbnVtVGhyZWFkc09uSG9zdCA9IE1hdGguZmxvb3IoZnJlZVJhbSAvIENvbmZpZy5XRUFLRU5fU0NSSVBUX1JBTSk7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGhyZWFkc1RvRGlzcGF0Y2ggPSBNYXRoLm1pbih0aHJlYWRzUmVtYWluaW5nLCBudW1UaHJlYWRzT25Ib3N0KTtcblxuICAgICAgICAgICAgICAgICAgICBucy5leGVjKFwid2Vha2VuLmpzXCIsIGhvc3QubmFtZSwgdGhyZWFkc1RvRGlzcGF0Y2gsIHRhcmdldCwgMCk7XG4gICAgICAgICAgICAgICAgICAgIHRocmVhZHNSZW1haW5pbmcgLT0gdGhyZWFkc1RvRGlzcGF0Y2g7XG4gICAgICAgICAgICAgICAgICAgIHRocmVhZHNEaXNwYXRjaGVkICs9IHRocmVhZHNUb0Rpc3BhdGNoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBucy5wcmludChcImRpc3BhdGNoZWQgXCIgKyB0aHJlYWRzRGlzcGF0Y2hlZCArIFwiIHdlYWtlbiB0aHJlYWRzXCIpO1xuICAgICAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKHdlYWtlblRpbWUgKyBzYWZldHlNYXJnaW5NcyArIDEwMDApO1xuICAgICAgICAgICAgICAgIG5zLnByaW50KFwiZG9uZSB3aXRoIFwiICsgdGhyZWFkc0Rpc3BhdGNoZWQgKyBcIi9cIiArIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCArIFwiIHdlYWtlbnNcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmludFNlcnZlclN0YXRzKG5zLCB0YXJnZXQsIHRocmVzaG9sZCk7XG5cbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCItLS0tLS0tLS0tLS0tIEdST1dJTkcgLS0tLS0tLS0tLS0tLVwiKTtcbiAgICAgICAgICAgIGNvbnN0IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgPSBnZXRHcm93VGhyZWFkcyhucywgdGFyZ2V0KTtcbiAgICAgICAgICAgIC8vIGNoZWNrIGlmIGdyb3cgaXMgbmVlZGVkXG4gICAgICAgICAgICBpZiAodG90YWxHcm93VGhyZWFkc05lZWRlZCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIG5zLnByaW50KFwiTm8gZ3Jvd3RoIG5lZWRlZFwiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5zLnByaW50KFwidG90YWwgZ3Jvd2luZyB0aHJlYWRzIG5lZWRlZDogXCIgKyB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkKTtcblxuICAgICAgICAgICAgLy8gZ3JvdyBvbmUgYmF0Y2hcbiAgICAgICAgICAgIGNvbnN0IGdyb3dpbmdUaW1lID0gbnMuZ2V0R3Jvd1RpbWUodGFyZ2V0KTtcbiAgICAgICAgICAgIHRocmVhZHNEaXNwYXRjaGVkID0gMDtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAvLyBpZiAodGhyZWFkc0Rpc3BhdGNoZWQgPj0gdG90YWxHcm93VGhyZWFkc05lZWRlZCkgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBob3N0ID0gYWxsSG9zdHNbaV07XG4gICAgICAgICAgICAgICAgY29uc3QgZnJlZVJhbSA9IGhvc3QubWF4UmFtIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShob3N0Lm5hbWUpO1xuICAgICAgICAgICAgICAgIGlmIChmcmVlUmFtIDwgQ29uZmlnLkdST1dfU0NSSVBUX1JBTSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgY29uc3QgbnVtVGhyZWFkc09uSG9zdCA9IE1hdGguZmxvb3IoZnJlZVJhbSAvIENvbmZpZy5HUk9XX1NDUklQVF9SQU0pO1xuXG4gICAgICAgICAgICAgICAgbnMuZXhlYyhcImdyb3cuanNcIiwgaG9zdC5uYW1lLCBudW1UaHJlYWRzT25Ib3N0LCB0YXJnZXQsIDApO1xuICAgICAgICAgICAgICAgIHRocmVhZHNEaXNwYXRjaGVkICs9IG51bVRocmVhZHNPbkhvc3Q7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBucy5wcmludChcImRpc3BhdGNoZWQgXCIgKyB0aHJlYWRzRGlzcGF0Y2hlZCArIFwiIGdyb3cgdGhyZWFkc1wiKTtcbiAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKGdyb3dpbmdUaW1lICsgc2FmZXR5TWFyZ2luTXMpO1xuICAgICAgICAgICAgbnMucHJpbnQoXCJkb25lIHdpdGggXCIgKyB0aHJlYWRzRGlzcGF0Y2hlZCArIFwiL1wiICsgdG90YWxHcm93VGhyZWFkc05lZWRlZCArIFwiIGdyb3dzXCIpO1xuICAgICAgICAgICAgcHJpbnRTZXJ2ZXJTdGF0cyhucywgdGFyZ2V0LCB0aHJlc2hvbGQpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLGNBQWM7QUFDdkIsU0FBUyxRQUFRLGdCQUFnQixrQkFBa0IsaUNBQWlDO0FBQ3BGLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMsd0JBQXdCO0FBRWpDLFNBQVMsd0JBQXdCO0FBRWpDLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsUUFBTSxjQUFjLElBQUksWUFBWTtBQUN4QztBQUVBLHNCQUFzQixjQUFjLElBQVEsUUFBZ0IsWUFBWSxLQUFLO0FBRXpFLFFBQU0sV0FBVyxpQkFBaUIsRUFBRTtBQUNwQyxRQUFNLGtCQUFrQixTQUFTLE9BQU8sQ0FBQyxLQUFLLFdBQVc7QUFDckQsV0FBTyxNQUFNLE9BQU87QUFBQSxFQUN4QixHQUFHLENBQUM7QUFHSixRQUFNLGdCQUFnQixpQkFBaUIsSUFBSSxNQUFNO0FBQ2pELFFBQU0sY0FBYyxlQUFlLElBQUksTUFBTTtBQUM3QyxRQUFNLHlCQUF5QiwwQkFBMEIsSUFBSSxXQUFXO0FBRXhFLFFBQU0saUJBQ0YsZ0JBQWdCLE9BQU8sb0JBQ3ZCLGNBQWMsT0FBTyxrQkFDckIseUJBQXlCLE9BQU87QUFFcEMsS0FBRztBQUFBLElBQ0MsV0FBVyxpQkFBaUIsdUJBQXVCLGtCQUFrQixrQ0FBa0M7QUFBQSxFQUMzRztBQUVBLE1BQUksaUJBQWlCLGlCQUFpQjtBQUVsQyxPQUFHLE1BQU0sT0FBTyxPQUFPLGVBQWUsU0FBUyxtQkFBbUI7QUFFbEUsVUFBTSxXQUFXLEdBQUcsY0FBYyxNQUFNO0FBQ3hDLFVBQU0sV0FBVyxHQUFHLFlBQVksTUFBTTtBQUV0QyxrQkFBYyxhQUFhLElBQUksUUFBUSxHQUFHLEdBQUcsT0FBTyxHQUFHLEtBQUs7QUFFNUQsVUFBTSxZQUFZLFdBQVcsV0FBVyxPQUFPO0FBQy9DLGtCQUFjLFdBQVcsSUFBSSxRQUFRLEdBQUcsT0FBTyxHQUFHLFdBQVcsS0FBSztBQUVsRSxVQUFNLGFBQWEsSUFBSSxPQUFPO0FBQzlCLGtCQUFjLGFBQWEsSUFBSSxRQUFRLEdBQUcsR0FBRyxPQUFPLFlBQVksS0FBSztBQUdyRSxVQUFNLEdBQUcsTUFBTSxXQUFXLElBQUksT0FBTyxlQUFlO0FBQUEsRUFDeEQsT0FBTztBQUVILE9BQUcsTUFBTSxPQUFPLE9BQU8sZUFBZSxTQUFTLGVBQWU7QUFFOUQsVUFBTSxpQkFBaUIsT0FBTztBQUc5QixXQUFPLE1BQU07QUFDVCxZQUFNLDJCQUEyQixpQkFBaUIsSUFBSSxNQUFNO0FBRTVELFNBQUcsTUFBTSxPQUFPLE9BQU8scUNBQXFDO0FBQzVELFNBQUcsTUFBTSxrQ0FBa0Msd0JBQXdCO0FBRW5FLFVBQUksb0JBQW9CO0FBQ3hCLFVBQUksbUJBQW1CO0FBQ3ZCLGFBQU8sb0JBQW9CLDBCQUEwQjtBQUNqRCxjQUFNLGFBQWEsR0FBRyxjQUFjLE1BQU07QUFFMUMsaUJBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsY0FBSSxxQkFBcUI7QUFBMEI7QUFFbkQsZ0JBQU0sT0FBTyxTQUFTLENBQUM7QUFDdkIsZ0JBQU0sVUFBVSxLQUFLLFNBQVMsR0FBRyxpQkFBaUIsS0FBSyxJQUFJO0FBQzNELGNBQUksVUFBVSxPQUFPO0FBQW1CO0FBQ3hDLGdCQUFNLG1CQUFtQixLQUFLLE1BQU0sVUFBVSxPQUFPLGlCQUFpQjtBQUV0RSxnQkFBTSxvQkFBb0IsS0FBSyxJQUFJLGtCQUFrQixnQkFBZ0I7QUFFckUsYUFBRyxLQUFLLGFBQWEsS0FBSyxNQUFNLG1CQUFtQixRQUFRLENBQUM7QUFDNUQsOEJBQW9CO0FBQ3BCLCtCQUFxQjtBQUFBLFFBQ3pCO0FBQ0EsV0FBRyxNQUFNLGdCQUFnQixvQkFBb0IsaUJBQWlCO0FBQzlELGNBQU0sR0FBRyxNQUFNLGFBQWEsaUJBQWlCLEdBQUk7QUFDakQsV0FBRyxNQUFNLGVBQWUsb0JBQW9CLE1BQU0sMkJBQTJCLFVBQVU7QUFBQSxNQUMzRjtBQUNBLHVCQUFpQixJQUFJLFFBQVEsU0FBUztBQUV0QyxTQUFHLE1BQU0sT0FBTyxPQUFPLHFDQUFxQztBQUM1RCxZQUFNLHlCQUF5QixlQUFlLElBQUksTUFBTTtBQUV4RCxVQUFJLDJCQUEyQixHQUFHO0FBQzlCLFdBQUcsTUFBTSxrQkFBa0I7QUFDM0I7QUFBQSxNQUNKO0FBQ0EsU0FBRyxNQUFNLG1DQUFtQyxzQkFBc0I7QUFHbEUsWUFBTSxjQUFjLEdBQUcsWUFBWSxNQUFNO0FBQ3pDLDBCQUFvQjtBQUNwQixlQUFTLElBQUksR0FBRyxJQUFJLFNBQVMsUUFBUSxLQUFLO0FBR3RDLGNBQU0sT0FBTyxTQUFTLENBQUM7QUFDdkIsY0FBTSxVQUFVLEtBQUssU0FBUyxHQUFHLGlCQUFpQixLQUFLLElBQUk7QUFDM0QsWUFBSSxVQUFVLE9BQU87QUFBaUI7QUFDdEMsY0FBTSxtQkFBbUIsS0FBSyxNQUFNLFVBQVUsT0FBTyxlQUFlO0FBRXBFLFdBQUcsS0FBSyxXQUFXLEtBQUssTUFBTSxrQkFBa0IsUUFBUSxDQUFDO0FBQ3pELDZCQUFxQjtBQUFBLE1BQ3pCO0FBQ0EsU0FBRyxNQUFNLGdCQUFnQixvQkFBb0IsZUFBZTtBQUM1RCxZQUFNLEdBQUcsTUFBTSxjQUFjLGNBQWM7QUFDM0MsU0FBRyxNQUFNLGVBQWUsb0JBQW9CLE1BQU0seUJBQXlCLFFBQVE7QUFDbkYsdUJBQWlCLElBQUksUUFBUSxTQUFTO0FBQUEsSUFDMUM7QUFBQSxFQUNKO0FBQ0o7IiwibmFtZXMiOltdfQ==\",\"filename\":\"loop/prepareServer.js\",\"server\":\"home\"}}],[\"sm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  let isUpgrade = false;\\n  let upgradeName = \\\"\\\";\\n  let upgradeRam = 0;\\n  let upgradeUnit = \\\"\\\";\\n  let isBuy = false;\\n  let buyName = \\\"\\\";\\n  let buyRam = 0;\\n  let buyUnit = \\\"\\\";\\n  let isRename = false;\\n  let oldName = \\\"\\\";\\n  let newName = \\\"\\\";\\n  if (ns.args.length == 3 || ns.args.length == 0) {\\n    if (ns.args[0] == \\\"-u\\\") {\\n      isUpgrade = true;\\n      upgradeName = ns.args[1].toString();\\n      upgradeRam = Number(String(ns.args[2]).slice(0, -1));\\n      upgradeUnit = String(ns.args[2]).slice(-1);\\n    }\\n    if (ns.args[0] == \\\"-b\\\") {\\n      isBuy = true;\\n      buyName = ns.args[1].toString();\\n      buyRam = Number(String(ns.args[2]).slice(0, -1));\\n      buyUnit = String(ns.args[2]).slice(-1);\\n    }\\n    if (ns.args[0] == \\\"-r\\\") {\\n      isRename = true;\\n      oldName = ns.args[1].toString();\\n      newName = ns.args[2].toString();\\n    }\\n  } else {\\n    ns.tprint(\\n      \\\"\\\\nusage: sm.js [options]\\\\n\\\\nOptions:\\\\n\\t-u <Name> <Ram><G|T|P>\\\\n\\t-b <Name> <Ram><G|T|P>\\\\n\\t-r <old name> <new name>\\\"\\n    );\\n    return;\\n  }\\n  if (isUpgrade) {\\n    const exponent = Math.ceil(Math.log2(upgradeRam));\\n    upgradeRam = Math.pow(2, exponent);\\n    upgradeRam = getGBfromAnyUnit(ns, upgradeRam, upgradeUnit);\\n    const servers = ns.getPurchasedServers();\\n    if (!servers.includes(upgradeName)) {\\n      ns.tprint(\\\"You do not own a server called \\\" + upgradeName);\\n    }\\n    const price = ns.getPurchasedServerUpgradeCost(upgradeName, upgradeRam);\\n    const answer = await ns.prompt(\\n      \\\"upgrading the server (\\\" + upgradeName + \\\") to \\\" + upgradeRam + \\\"GB of Ram, will cost \\\" + ns.formatNumber(price)\\n    );\\n    if (answer)\\n      ns.upgradePurchasedServer(upgradeName, upgradeRam);\\n  } else if (isBuy) {\\n    buyRam = getGBfromAnyUnit(ns, buyRam, buyUnit);\\n    if (buyRam < 1)\\n      return;\\n    const price = ns.getPurchasedServerCost(buyRam);\\n    const answer = await ns.prompt(\\n      \\\"buying the server (\\\" + buyName + \\\") with \\\" + buyRam + \\\"GB of Ram, will cost \\\" + ns.formatNumber(price)\\n    );\\n    if (answer)\\n      ns.purchaseServer(buyName, buyRam);\\n  } else if (isRename) {\\n    if (!ns.getPurchasedServers().includes(oldName)) {\\n      ns.tprint(\\\"You do not own a server called \\\" + oldName);\\n    }\\n    ns.renamePurchasedServer(oldName, newName);\\n  } else {\\n    const playerMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n    let ramSize = 16;\\n    while (ns.getPurchasedServerCost(ramSize) < playerMoney) {\\n      ramSize *= 2;\\n    }\\n    ramSize = ramSize / 2;\\n    ns.tprint(\\n      \\\"you can buy a server with \\\" + ramSize + \\\"GB of ram. This costs \\\" + ns.formatNumber(ns.getPurchasedServerCost(ramSize))\\n    );\\n    const answer = await ns.prompt(\\\"buy Server for \\\" + ns.formatNumber(ns.getPurchasedServerCost(ramSize)) + \\\"?\\\");\\n    if (answer) {\\n      ns.purchaseServer(\\\"hacker\\\", ramSize);\\n    }\\n  }\\n}\\nfunction getGBfromAnyUnit(ns, ram, unit) {\\n  if (unit == \\\"G\\\") {\\n    return ram;\\n  } else if (unit == \\\"T\\\") {\\n    return ram * 1024;\\n  } else if (unit == \\\"P\\\") {\\n    return ram * 1024 * 1024;\\n  } else {\\n    ns.tprint(\\n      \\\"\\\\nusage: sm.js [options]\\\\n\\\\nOptions:\\\\n\\t-u <Name> <Ram><G|T|P>\\\\n\\t-b <Name> <Ram><G|T|P>\\\\n\\t-r <old name> <new name>\\\"\\n    );\\n    return 0;\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBsZXQgaXNVcGdyYWRlID0gZmFsc2U7XG4gICAgbGV0IHVwZ3JhZGVOYW1lID0gXCJcIjtcbiAgICBsZXQgdXBncmFkZVJhbSA9IDA7XG4gICAgbGV0IHVwZ3JhZGVVbml0ID0gXCJcIjtcblxuICAgIGxldCBpc0J1eSA9IGZhbHNlO1xuICAgIGxldCBidXlOYW1lID0gXCJcIjtcbiAgICBsZXQgYnV5UmFtID0gMDtcbiAgICBsZXQgYnV5VW5pdCA9IFwiXCI7XG5cbiAgICBsZXQgaXNSZW5hbWUgPSBmYWxzZTtcbiAgICBsZXQgb2xkTmFtZSA9IFwiXCI7XG4gICAgbGV0IG5ld05hbWUgPSBcIlwiO1xuXG4gICAgaWYgKG5zLmFyZ3MubGVuZ3RoID09IDMgfHwgbnMuYXJncy5sZW5ndGggPT0gMCkge1xuICAgICAgICBpZiAobnMuYXJnc1swXSA9PSBcIi11XCIpIHtcbiAgICAgICAgICAgIGlzVXBncmFkZSA9IHRydWU7XG4gICAgICAgICAgICB1cGdyYWRlTmFtZSA9IG5zLmFyZ3NbMV0udG9TdHJpbmcoKTtcbiAgICAgICAgICAgIHVwZ3JhZGVSYW0gPSBOdW1iZXIoU3RyaW5nKG5zLmFyZ3NbMl0pLnNsaWNlKDAsIC0xKSk7XG4gICAgICAgICAgICB1cGdyYWRlVW5pdCA9IFN0cmluZyhucy5hcmdzWzJdKS5zbGljZSgtMSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5zLmFyZ3NbMF0gPT0gXCItYlwiKSB7XG4gICAgICAgICAgICBpc0J1eSA9IHRydWU7XG4gICAgICAgICAgICBidXlOYW1lID0gbnMuYXJnc1sxXS50b1N0cmluZygpO1xuICAgICAgICAgICAgYnV5UmFtID0gTnVtYmVyKFN0cmluZyhucy5hcmdzWzJdKS5zbGljZSgwLCAtMSkpO1xuICAgICAgICAgICAgYnV5VW5pdCA9IFN0cmluZyhucy5hcmdzWzJdKS5zbGljZSgtMSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5zLmFyZ3NbMF0gPT0gXCItclwiKSB7XG4gICAgICAgICAgICBpc1JlbmFtZSA9IHRydWU7XG4gICAgICAgICAgICBvbGROYW1lID0gbnMuYXJnc1sxXS50b1N0cmluZygpO1xuICAgICAgICAgICAgbmV3TmFtZSA9IG5zLmFyZ3NbMl0udG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIG5zLnRwcmludChcbiAgICAgICAgICAgIFwiXFxudXNhZ2U6IHNtLmpzIFtvcHRpb25zXVxcblxcbk9wdGlvbnM6XFxuXFx0LXUgPE5hbWU+IDxSYW0+PEd8VHxQPlxcblxcdC1iIDxOYW1lPiA8UmFtPjxHfFR8UD5cXG5cXHQtciA8b2xkIG5hbWU+IDxuZXcgbmFtZT5cIixcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpc1VwZ3JhZGUpIHtcbiAgICAgICAgLy8gZ2V0IGN1cnJlbnQgcmFtXG4gICAgICAgIGNvbnN0IGV4cG9uZW50ID0gTWF0aC5jZWlsKE1hdGgubG9nMih1cGdyYWRlUmFtKSk7XG4gICAgICAgIHVwZ3JhZGVSYW0gPSBNYXRoLnBvdygyLCBleHBvbmVudCk7XG5cbiAgICAgICAgdXBncmFkZVJhbSA9IGdldEdCZnJvbUFueVVuaXQobnMsIHVwZ3JhZGVSYW0sIHVwZ3JhZGVVbml0KTtcbiAgICAgICAgY29uc3Qgc2VydmVycyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKTtcbiAgICAgICAgaWYgKCFzZXJ2ZXJzLmluY2x1ZGVzKHVwZ3JhZGVOYW1lKSkge1xuICAgICAgICAgICAgbnMudHByaW50KFwiWW91IGRvIG5vdCBvd24gYSBzZXJ2ZXIgY2FsbGVkIFwiICsgdXBncmFkZU5hbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcHJpY2UgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJVcGdyYWRlQ29zdCh1cGdyYWRlTmFtZSwgdXBncmFkZVJhbSk7XG5cbiAgICAgICAgY29uc3QgYW5zd2VyID0gYXdhaXQgbnMucHJvbXB0KFxuICAgICAgICAgICAgXCJ1cGdyYWRpbmcgdGhlIHNlcnZlciAoXCIgK1xuICAgICAgICAgICAgICAgIHVwZ3JhZGVOYW1lICtcbiAgICAgICAgICAgICAgICBcIikgdG8gXCIgK1xuICAgICAgICAgICAgICAgIHVwZ3JhZGVSYW0gK1xuICAgICAgICAgICAgICAgIFwiR0Igb2YgUmFtLCB3aWxsIGNvc3QgXCIgK1xuICAgICAgICAgICAgICAgIG5zLmZvcm1hdE51bWJlcihwcmljZSksXG4gICAgICAgICk7XG4gICAgICAgIGlmIChhbnN3ZXIpIG5zLnVwZ3JhZGVQdXJjaGFzZWRTZXJ2ZXIodXBncmFkZU5hbWUsIHVwZ3JhZGVSYW0pO1xuICAgIH0gZWxzZSBpZiAoaXNCdXkpIHtcbiAgICAgICAgYnV5UmFtID0gZ2V0R0Jmcm9tQW55VW5pdChucywgYnV5UmFtLCBidXlVbml0KTtcbiAgICAgICAgaWYgKGJ1eVJhbSA8IDEpIHJldHVybjtcblxuICAgICAgICBjb25zdCBwcmljZSA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QoYnV5UmFtKTtcblxuICAgICAgICBjb25zdCBhbnN3ZXIgPSBhd2FpdCBucy5wcm9tcHQoXG4gICAgICAgICAgICBcImJ1eWluZyB0aGUgc2VydmVyIChcIiArIGJ1eU5hbWUgKyBcIikgd2l0aCBcIiArIGJ1eVJhbSArIFwiR0Igb2YgUmFtLCB3aWxsIGNvc3QgXCIgKyBucy5mb3JtYXROdW1iZXIocHJpY2UpLFxuICAgICAgICApO1xuICAgICAgICBpZiAoYW5zd2VyKSBucy5wdXJjaGFzZVNlcnZlcihidXlOYW1lLCBidXlSYW0pO1xuICAgIH0gZWxzZSBpZiAoaXNSZW5hbWUpIHtcbiAgICAgICAgaWYgKCFucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCkuaW5jbHVkZXMob2xkTmFtZSkpIHtcbiAgICAgICAgICAgIG5zLnRwcmludChcIllvdSBkbyBub3Qgb3duIGEgc2VydmVyIGNhbGxlZCBcIiArIG9sZE5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIG5zLnJlbmFtZVB1cmNoYXNlZFNlcnZlcihvbGROYW1lLCBuZXdOYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBwbGF5ZXJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFwiaG9tZVwiKTtcbiAgICAgICAgbGV0IHJhbVNpemUgPSAxNjtcbiAgICAgICAgd2hpbGUgKG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtU2l6ZSkgPCBwbGF5ZXJNb25leSkge1xuICAgICAgICAgICAgcmFtU2l6ZSAqPSAyO1xuICAgICAgICB9XG4gICAgICAgIHJhbVNpemUgPSByYW1TaXplIC8gMjtcbiAgICAgICAgbnMudHByaW50KFxuICAgICAgICAgICAgXCJ5b3UgY2FuIGJ1eSBhIHNlcnZlciB3aXRoIFwiICtcbiAgICAgICAgICAgICAgICByYW1TaXplICtcbiAgICAgICAgICAgICAgICBcIkdCIG9mIHJhbS4gVGhpcyBjb3N0cyBcIiArXG4gICAgICAgICAgICAgICAgbnMuZm9ybWF0TnVtYmVyKG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtU2l6ZSkpLFxuICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IG5zLnByb21wdChcImJ1eSBTZXJ2ZXIgZm9yIFwiICsgbnMuZm9ybWF0TnVtYmVyKG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtU2l6ZSkpICsgXCI/XCIpO1xuXG4gICAgICAgIGlmIChhbnN3ZXIpIHtcbiAgICAgICAgICAgIG5zLnB1cmNoYXNlU2VydmVyKFwiaGFja2VyXCIsIHJhbVNpemUpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXRHQmZyb21BbnlVbml0KG5zOiBOUywgcmFtOiBudW1iZXIsIHVuaXQ6IHN0cmluZyk6IG51bWJlciB7XG4gICAgaWYgKHVuaXQgPT0gXCJHXCIpIHtcbiAgICAgICAgcmV0dXJuIHJhbTtcbiAgICB9IGVsc2UgaWYgKHVuaXQgPT0gXCJUXCIpIHtcbiAgICAgICAgcmV0dXJuIHJhbSAqIDEwMjQ7XG4gICAgfSBlbHNlIGlmICh1bml0ID09IFwiUFwiKSB7XG4gICAgICAgIHJldHVybiByYW0gKiAxMDI0ICogMTAyNDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBucy50cHJpbnQoXG4gICAgICAgICAgICBcIlxcbnVzYWdlOiBzbS5qcyBbb3B0aW9uc11cXG5cXG5PcHRpb25zOlxcblxcdC11IDxOYW1lPiA8UmFtPjxHfFR8UD5cXG5cXHQtYiA8TmFtZT4gPFJhbT48R3xUfFA+XFxuXFx0LXIgPG9sZCBuYW1lPiA8bmV3IG5hbWU+XCIsXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBRUEsc0JBQXNCLEtBQUssSUFBUTtBQUMvQixNQUFJLFlBQVk7QUFDaEIsTUFBSSxjQUFjO0FBQ2xCLE1BQUksYUFBYTtBQUNqQixNQUFJLGNBQWM7QUFFbEIsTUFBSSxRQUFRO0FBQ1osTUFBSSxVQUFVO0FBQ2QsTUFBSSxTQUFTO0FBQ2IsTUFBSSxVQUFVO0FBRWQsTUFBSSxXQUFXO0FBQ2YsTUFBSSxVQUFVO0FBQ2QsTUFBSSxVQUFVO0FBRWQsTUFBSSxHQUFHLEtBQUssVUFBVSxLQUFLLEdBQUcsS0FBSyxVQUFVLEdBQUc7QUFDNUMsUUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLE1BQU07QUFDcEIsa0JBQVk7QUFDWixvQkFBYyxHQUFHLEtBQUssQ0FBQyxFQUFFLFNBQVM7QUFDbEMsbUJBQWEsT0FBTyxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUMsRUFBRSxNQUFNLEdBQUcsRUFBRSxDQUFDO0FBQ25ELG9CQUFjLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRTtBQUFBLElBQzdDO0FBQ0EsUUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLE1BQU07QUFDcEIsY0FBUTtBQUNSLGdCQUFVLEdBQUcsS0FBSyxDQUFDLEVBQUUsU0FBUztBQUM5QixlQUFTLE9BQU8sT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLEVBQUUsTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUMvQyxnQkFBVSxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUU7QUFBQSxJQUN6QztBQUNBLFFBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxNQUFNO0FBQ3BCLGlCQUFXO0FBQ1gsZ0JBQVUsR0FBRyxLQUFLLENBQUMsRUFBRSxTQUFTO0FBQzlCLGdCQUFVLEdBQUcsS0FBSyxDQUFDLEVBQUUsU0FBUztBQUFBLElBQ2xDO0FBQUEsRUFDSixPQUFPO0FBQ0gsT0FBRztBQUFBLE1BQ0M7QUFBQSxJQUNKO0FBQ0E7QUFBQSxFQUNKO0FBRUEsTUFBSSxXQUFXO0FBRVgsVUFBTSxXQUFXLEtBQUssS0FBSyxLQUFLLEtBQUssVUFBVSxDQUFDO0FBQ2hELGlCQUFhLEtBQUssSUFBSSxHQUFHLFFBQVE7QUFFakMsaUJBQWEsaUJBQWlCLElBQUksWUFBWSxXQUFXO0FBQ3pELFVBQU0sVUFBVSxHQUFHLG9CQUFvQjtBQUN2QyxRQUFJLENBQUMsUUFBUSxTQUFTLFdBQVcsR0FBRztBQUNoQyxTQUFHLE9BQU8sb0NBQW9DLFdBQVc7QUFBQSxJQUM3RDtBQUVBLFVBQU0sUUFBUSxHQUFHLDhCQUE4QixhQUFhLFVBQVU7QUFFdEUsVUFBTSxTQUFTLE1BQU0sR0FBRztBQUFBLE1BQ3BCLDJCQUNJLGNBQ0EsVUFDQSxhQUNBLDBCQUNBLEdBQUcsYUFBYSxLQUFLO0FBQUEsSUFDN0I7QUFDQSxRQUFJO0FBQVEsU0FBRyx1QkFBdUIsYUFBYSxVQUFVO0FBQUEsRUFDakUsV0FBVyxPQUFPO0FBQ2QsYUFBUyxpQkFBaUIsSUFBSSxRQUFRLE9BQU87QUFDN0MsUUFBSSxTQUFTO0FBQUc7QUFFaEIsVUFBTSxRQUFRLEdBQUcsdUJBQXVCLE1BQU07QUFFOUMsVUFBTSxTQUFTLE1BQU0sR0FBRztBQUFBLE1BQ3BCLHdCQUF3QixVQUFVLFlBQVksU0FBUywwQkFBMEIsR0FBRyxhQUFhLEtBQUs7QUFBQSxJQUMxRztBQUNBLFFBQUk7QUFBUSxTQUFHLGVBQWUsU0FBUyxNQUFNO0FBQUEsRUFDakQsV0FBVyxVQUFVO0FBQ2pCLFFBQUksQ0FBQyxHQUFHLG9CQUFvQixFQUFFLFNBQVMsT0FBTyxHQUFHO0FBQzdDLFNBQUcsT0FBTyxvQ0FBb0MsT0FBTztBQUFBLElBQ3pEO0FBQ0EsT0FBRyxzQkFBc0IsU0FBUyxPQUFPO0FBQUEsRUFDN0MsT0FBTztBQUNILFVBQU0sY0FBYyxHQUFHLHdCQUF3QixNQUFNO0FBQ3JELFFBQUksVUFBVTtBQUNkLFdBQU8sR0FBRyx1QkFBdUIsT0FBTyxJQUFJLGFBQWE7QUFDckQsaUJBQVc7QUFBQSxJQUNmO0FBQ0EsY0FBVSxVQUFVO0FBQ3BCLE9BQUc7QUFBQSxNQUNDLCtCQUNJLFVBQ0EsMkJBQ0EsR0FBRyxhQUFhLEdBQUcsdUJBQXVCLE9BQU8sQ0FBQztBQUFBLElBQzFEO0FBRUEsVUFBTSxTQUFTLE1BQU0sR0FBRyxPQUFPLG9CQUFvQixHQUFHLGFBQWEsR0FBRyx1QkFBdUIsT0FBTyxDQUFDLElBQUksR0FBRztBQUU1RyxRQUFJLFFBQVE7QUFDUixTQUFHLGVBQWUsVUFBVSxPQUFPO0FBQUEsSUFDdkM7QUFBQSxFQUNKO0FBQ0o7QUFFQSxTQUFTLGlCQUFpQixJQUFRLEtBQWEsTUFBc0I7QUFDakUsTUFBSSxRQUFRLEtBQUs7QUFDYixXQUFPO0FBQUEsRUFDWCxXQUFXLFFBQVEsS0FBSztBQUNwQixXQUFPLE1BQU07QUFBQSxFQUNqQixXQUFXLFFBQVEsS0FBSztBQUNwQixXQUFPLE1BQU0sT0FBTztBQUFBLEVBQ3hCLE9BQU87QUFDSCxPQUFHO0FBQUEsTUFDQztBQUFBLElBQ0o7QUFDQSxXQUFPO0FBQUEsRUFDWDtBQUNKOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"sm.js\",\"server\":\"home\"}}],[\"parallel/WGHAlgorithms.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRam } from \\\"/bestServer.js\\\";\\nimport {\\n  Colors,\\n  getGrowThreads,\\n  getGrowThreadsFormulas,\\n  getHackThreadsFormulas,\\n  getWeakenThreads,\\n  getWeakenThreadsAfterGrow,\\n  getWeakenThreadsAfterHack\\n} from \\\"/lib.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nexport class WGHAlgorithms {\\n  static currentGrowThreads = 0;\\n  static currentHackThreads = 0;\\n  /**\\n   * Weakens a server by executing the weaken.js script with the specified number of threads.\\n   * The number of threads dispatched depends on the order, batch mode, and available resources.\\n   *\\n   * @param ns - The NetScriptJS object.\\n   * @param target - The name of the target server to weaken.\\n   * @param order - wether it is weaken I or weaken II.\\n   * @param batchId - The ID of the parallel batch.\\n   * @param batchMode - Set to true, of more than one batch should run in parallel mode.\\n   * @param delay - Time in ms, by how much the weaken script should be delayed to enable precise parallel batch mode timing (default: 0).\\n   * @returns A boolean indicating whether the weakening process was successful.\\n   * @throws An error if the weaken order is not 1 or 2.\\n   */\\n  static weakenServer(ns, target, order, batchId, batchMode, delay = 0, filterNotAllowedHosts = true) {\\n    let totalWeakenThreadsNeeded = 0;\\n    if (order == 1 && !batchMode) {\\n      totalWeakenThreadsNeeded = getWeakenThreads(ns, target);\\n    } else if (order == 2 && !batchMode) {\\n      const growThreads = getGrowThreads(ns, target);\\n      totalWeakenThreadsNeeded = getWeakenThreadsAfterGrow(ns, growThreads);\\n    } else if (order == 1 && batchMode) {\\n      totalWeakenThreadsNeeded = getWeakenThreadsAfterHack(ns, this.currentHackThreads);\\n    } else if (order == 2 && batchMode) {\\n      totalWeakenThreadsNeeded = getWeakenThreadsAfterGrow(ns, this.currentGrowThreads);\\n    } else {\\n      throw new Error(\\\"weaken order can only be either 1 or 2!\\\");\\n    }\\n    if (totalWeakenThreadsNeeded < 1) {\\n      ns.print(\\\"Weakenthreads are 0, skipping weak \\\" + order);\\n      return false;\\n    }\\n    let allHosts = getBestHostByRam(ns);\\n    if (filterNotAllowedHosts) {\\n      allHosts = allHosts.filter((host) => !host.name.includes(\\\"grow-\\\") && !host.name.includes(\\\"hack-\\\"));\\n    }\\n    const weakenScriptRam = Config.WEAKEN_SCRIPT_RAM;\\n    let threadsDispatched = 0;\\n    let threadsRemaining = totalWeakenThreadsNeeded;\\n    for (let i = 0; i < allHosts.length; i++) {\\n      if (threadsDispatched >= totalWeakenThreadsNeeded)\\n        break;\\n      const host = allHosts[i];\\n      const freeRam = host.availableRam;\\n      if (freeRam < weakenScriptRam)\\n        continue;\\n      const threadSpace = Math.floor(freeRam / weakenScriptRam);\\n      const threadsToDispatch = Math.min(threadsRemaining, threadSpace);\\n      ns.exec(\\\"weaken.js\\\", host.name, threadsToDispatch, target, delay);\\n      threadsRemaining -= threadsToDispatch;\\n      threadsDispatched += threadsToDispatch;\\n    }\\n    if (threadsRemaining <= 0) {\\n      ns.print(\\\"Done deploying weaken\\\" + order + \\\"!\\\");\\n      return true;\\n    }\\n    ns.print(\\n      Colors.YELLOW + \\\"There are \\\" + threadsRemaining + \\\" threads remaining after dispatching all threads, attempting to dispatch remaining threads on purchased server\\\"\\n    );\\n    const neededWeakenRam = threadsRemaining * weakenScriptRam;\\n    const server = ServerManager.buyOrUpgradeServer(ns, neededWeakenRam, \\\"weak\\\", batchId);\\n    if (server === \\\"\\\") {\\n      ns.tprint(\\\"Error! Could not buy server to weak \\\" + target);\\n      throw new Error(\\\"Error! Could not buy server to weak \\\" + target);\\n    }\\n    ns.exec(\\\"weaken.js\\\", server, threadsRemaining, target, delay);\\n    return true;\\n  }\\n  /**\\n   * Grows the specified server by executing the \\\"grow.js\\\" script with the specified number of threads.\\n   * If batchMode is enabled, it calculates the number of threads needed using the getGrowThreadsFormulas function.\\n   * Otherwise, it uses the getGrowThreads function to determine the number of threads needed.\\n   * If there are no threads needed, the growth process is skipped.\\n   * If there is an available host with enough RAM to execute the \\\"grow.js\\\" script, it is executed immediately.\\n   * Otherwise, it attempts to upgrade or buy a server with enough RAM to execute the script.\\n   *\\n   * @param ns - The NetScript instance.\\n   * @param target - The name of the server to grow.\\n   * @param batchId - The ID of the batch.\\n   * @param batchMode - Set to true, of more than one batch should run in parallel mode.\\n   * @param hackThreshold - The hack threshold.\\n   * @param delay - Time in ms, by how much the weaken script should be delayed to enable precise parallel batch mode timing (default: 0).\\n   * @returns A boolean indicating whether the growth process was successful.\\n   */\\n  static growServer(ns, target, batchId, batchMode, hackThreshold, delay, filterNotAllowedHosts = true) {\\n    let totalGrowThreadsNeeded = 0;\\n    if (!batchMode) {\\n      totalGrowThreadsNeeded = getGrowThreads(ns, target);\\n    } else {\\n      totalGrowThreadsNeeded = getGrowThreadsFormulas(ns, target, hackThreshold);\\n      this.currentGrowThreads = totalGrowThreadsNeeded;\\n    }\\n    if (totalGrowThreadsNeeded < 1) {\\n      ns.print(\\\"No grow threads needed, skipping growth process\\\");\\n      return false;\\n    }\\n    let allHosts = getBestHostByRam(ns);\\n    if (filterNotAllowedHosts) {\\n      allHosts = allHosts.filter((host) => !host.name.includes(\\\"weak-\\\") && !host.name.includes(\\\"hack-\\\"));\\n    }\\n    const growingScriptRam = Config.GROW_SCRIPT_RAM;\\n    for (let i = 0; i < allHosts.length; i++) {\\n      const host = allHosts[i];\\n      const maxThreadsOnHost = Math.floor(host.availableRam / growingScriptRam);\\n      if (maxThreadsOnHost >= totalGrowThreadsNeeded) {\\n        ns.exec(\\\"grow.js\\\", host.name, totalGrowThreadsNeeded, target, delay);\\n        ns.print(\\\"Done deploying grow!\\\");\\n        return true;\\n      }\\n    }\\n    ns.print(Colors.YELLOW + \\\"No available host to grow \\\" + target + \\\". Attempting to upgrade/buy server...\\\");\\n    const neededGrowRam = totalGrowThreadsNeeded * growingScriptRam;\\n    const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, \\\"grow\\\", batchId);\\n    if (server === \\\"\\\") {\\n      ns.tprint(\\\"Error! Could not buy server to grow \\\" + target);\\n      throw new Error(\\\"Error! Could not buy server to grow \\\" + target);\\n    }\\n    ns.exec(\\\"grow.js\\\", server, totalGrowThreadsNeeded, target, delay);\\n    return true;\\n  }\\n  /**\\n   * Hacks a given server by executing the \\\"hack.js\\\" script with the specified number of threads, on certain hosts.\\n   *\\n   * @param ns - The NetScript object.\\n   * @param target - The name of the server to hack.\\n   * @param threshold - The hacking threshold for the server.\\n   * @param batchId - The ID of the current hacking batch.\\n   * @param batchMode - Set to true, of more than one batch should run in parallel mode.\\n   * @param delay - Time in ms, by how much the weaken script should be delayed to enable precise parallel batch mode timing (default: 0).\\n   * @returns A boolean indicating whether the hacking was successful.\\n   */\\n  static hackServer(ns, target, threshold, batchId, batchMode, delay) {\\n    let totalHackThreadsNeeded = 0;\\n    if (!batchMode) {\\n      totalHackThreadsNeeded = Math.ceil(threshold / ns.hackAnalyze(target));\\n    } else {\\n      totalHackThreadsNeeded = getHackThreadsFormulas(ns, target, threshold);\\n      this.currentHackThreads = totalHackThreadsNeeded;\\n    }\\n    const allHosts = getBestHostByRam(ns).filter(\\n      (host) => !host.name.includes(\\\"weak-\\\") && !host.name.includes(\\\"grow-\\\")\\n    );\\n    const hackingScriptRam = Config.HACK_SCRIPT_RAM;\\n    for (let i = 0; i < allHosts.length; i++) {\\n      const host = allHosts[i];\\n      const maxThreadsOnHost = Math.floor(host.availableRam / hackingScriptRam);\\n      if (maxThreadsOnHost >= totalHackThreadsNeeded) {\\n        ns.exec(\\\"hack.js\\\", host.name, totalHackThreadsNeeded, target, delay);\\n        ns.print(\\\"Done deploying hack!\\\");\\n        return true;\\n      }\\n    }\\n    ns.print(Colors.YELLOW + \\\"No available host to hack \\\" + target + \\\". Buying server...\\\");\\n    const neededGrowRam = totalHackThreadsNeeded * hackingScriptRam;\\n    const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, \\\"hack\\\", batchId);\\n    if (server === \\\"\\\") {\\n      ns.tprint(\\\"Error! Could not buy server to hack \\\" + target);\\n      throw new Error(\\\"Error! Could not buy server to hack \\\" + target);\\n    }\\n    ns.exec(\\\"hack.js\\\", server, totalHackThreadsNeeded, target, delay);\\n    return true;\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldHSEFsZ29yaXRobXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiQC9Db25maWcvQ29uZmlnXCI7XHJcbmltcG9ydCB7IFNlcnZlciwgZ2V0QmVzdEhvc3RCeVJhbSB9IGZyb20gXCJAL2Jlc3RTZXJ2ZXJcIjtcclxuaW1wb3J0IHtcclxuICAgIENvbG9ycyxcclxuICAgIGdldEdyb3dUaHJlYWRzLFxyXG4gICAgZ2V0R3Jvd1RocmVhZHNGb3JtdWxhcyxcclxuICAgIGdldEhhY2tUaHJlYWRzRm9ybXVsYXMsXHJcbiAgICBnZXRXZWFrZW5UaHJlYWRzLFxyXG4gICAgZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyxcclxuICAgIGdldFdlYWtlblRocmVhZHNBZnRlckhhY2ssXHJcbn0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IFNlcnZlck1hbmFnZXIgfSBmcm9tIFwiLi9TZXJ2ZXJNYW5hZ2VyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgV0dIQWxnb3JpdGhtcyB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBjdXJyZW50R3Jvd1RocmVhZHMgPSAwO1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgY3VycmVudEhhY2tUaHJlYWRzID0gMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFdlYWtlbnMgYSBzZXJ2ZXIgYnkgZXhlY3V0aW5nIHRoZSB3ZWFrZW4uanMgc2NyaXB0IHdpdGggdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgdGhyZWFkcy5cclxuICAgICAqIFRoZSBudW1iZXIgb2YgdGhyZWFkcyBkaXNwYXRjaGVkIGRlcGVuZHMgb24gdGhlIG9yZGVyLCBiYXRjaCBtb2RlLCBhbmQgYXZhaWxhYmxlIHJlc291cmNlcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbnMgLSBUaGUgTmV0U2NyaXB0SlMgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHRhcmdldCAtIFRoZSBuYW1lIG9mIHRoZSB0YXJnZXQgc2VydmVyIHRvIHdlYWtlbi5cclxuICAgICAqIEBwYXJhbSBvcmRlciAtIHdldGhlciBpdCBpcyB3ZWFrZW4gSSBvciB3ZWFrZW4gSUkuXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hJZCAtIFRoZSBJRCBvZiB0aGUgcGFyYWxsZWwgYmF0Y2guXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hNb2RlIC0gU2V0IHRvIHRydWUsIG9mIG1vcmUgdGhhbiBvbmUgYmF0Y2ggc2hvdWxkIHJ1biBpbiBwYXJhbGxlbCBtb2RlLlxyXG4gICAgICogQHBhcmFtIGRlbGF5IC0gVGltZSBpbiBtcywgYnkgaG93IG11Y2ggdGhlIHdlYWtlbiBzY3JpcHQgc2hvdWxkIGJlIGRlbGF5ZWQgdG8gZW5hYmxlIHByZWNpc2UgcGFyYWxsZWwgYmF0Y2ggbW9kZSB0aW1pbmcgKGRlZmF1bHQ6IDApLlxyXG4gICAgICogQHJldHVybnMgQSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciB0aGUgd2Vha2VuaW5nIHByb2Nlc3Mgd2FzIHN1Y2Nlc3NmdWwuXHJcbiAgICAgKiBAdGhyb3dzIEFuIGVycm9yIGlmIHRoZSB3ZWFrZW4gb3JkZXIgaXMgbm90IDEgb3IgMi5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIHdlYWtlblNlcnZlcihcclxuICAgICAgICBuczogTlMsXHJcbiAgICAgICAgdGFyZ2V0OiBzdHJpbmcsXHJcbiAgICAgICAgb3JkZXI6IG51bWJlcixcclxuICAgICAgICBiYXRjaElkOiBudW1iZXIsXHJcbiAgICAgICAgYmF0Y2hNb2RlOiBib29sZWFuLFxyXG4gICAgICAgIGRlbGF5ID0gMCxcclxuICAgICAgICBmaWx0ZXJOb3RBbGxvd2VkSG9zdHMgPSB0cnVlLFxyXG4gICAgKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCA9IDA7XHJcbiAgICAgICAgLy8gY2FsY3VsYXRlIHdlYWtlbmluZyB0aHJlYWRzIGJhc2VkIG9uIHRoZSBvcmRlclxyXG5cclxuICAgICAgICBpZiAob3JkZXIgPT0gMSAmJiAhYmF0Y2hNb2RlKSB7XHJcbiAgICAgICAgICAgIC8vIGZpcnN0IHdlYWsgaGFzIHRvIHdlYWtlbiBzZXJ2ZXIgdG8gbWluIGZyb20gdW5rbm93biBzZWMgbHZsXHJcbiAgICAgICAgICAgIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCA9IGdldFdlYWtlblRocmVhZHMobnMsIHRhcmdldCk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChvcmRlciA9PSAyICYmICFiYXRjaE1vZGUpIHtcclxuICAgICAgICAgICAgLy8gc2Vjb25kIHdlYWsgb25seSBoYXMgdG8gcmVtb3ZlIHRoZSBzZWMgaW5jcmVhc2UgZnJvbSB0aGUgZ3JvdyBiZWZvcmUgKG1vcmUgcmFtIGVmZmljaWVudClcclxuICAgICAgICAgICAgY29uc3QgZ3Jvd1RocmVhZHMgPSBnZXRHcm93VGhyZWFkcyhucywgdGFyZ2V0KTtcclxuXHJcbiAgICAgICAgICAgIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCA9IGdldFdlYWtlblRocmVhZHNBZnRlckdyb3cobnMsIGdyb3dUaHJlYWRzKTtcclxuICAgICAgICB9IGVsc2UgaWYgKG9yZGVyID09IDEgJiYgYmF0Y2hNb2RlKSB7XHJcbiAgICAgICAgICAgIC8vIHdlYWsgYWZ0ZXIgcHJldmlvdXMgaGFja1xyXG4gICAgICAgICAgICB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQgPSBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJIYWNrKG5zLCB0aGlzLmN1cnJlbnRIYWNrVGhyZWFkcyk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChvcmRlciA9PSAyICYmIGJhdGNoTW9kZSkge1xyXG4gICAgICAgICAgICAvLyB3ZWFrIGFmdGVyIHByZXZpb3VzIGdyb3dcclxuICAgICAgICAgICAgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyhucywgdGhpcy5jdXJyZW50R3Jvd1RocmVhZHMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIndlYWtlbiBvcmRlciBjYW4gb25seSBiZSBlaXRoZXIgMSBvciAyIVwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQgPCAxKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KFwiV2Vha2VudGhyZWFkcyBhcmUgMCwgc2tpcHBpbmcgd2VhayBcIiArIG9yZGVyKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gZXhlYyB3ZWFrZW4uanMgd2l0aCBudW0gb2YgdGhyZWFkc1xyXG4gICAgICAgIGxldCBhbGxIb3N0czogU2VydmVyW10gPSBnZXRCZXN0SG9zdEJ5UmFtKG5zKTtcclxuICAgICAgICBpZiAoZmlsdGVyTm90QWxsb3dlZEhvc3RzKSB7XHJcbiAgICAgICAgICAgIGFsbEhvc3RzID0gYWxsSG9zdHMuZmlsdGVyKChob3N0KSA9PiAhaG9zdC5uYW1lLmluY2x1ZGVzKFwiZ3Jvdy1cIikgJiYgIWhvc3QubmFtZS5pbmNsdWRlcyhcImhhY2stXCIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgd2Vha2VuU2NyaXB0UmFtID0gQ29uZmlnLldFQUtFTl9TQ1JJUFRfUkFNO1xyXG5cclxuICAgICAgICBsZXQgdGhyZWFkc0Rpc3BhdGNoZWQgPSAwO1xyXG4gICAgICAgIGxldCB0aHJlYWRzUmVtYWluaW5nID0gdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKHRocmVhZHNEaXNwYXRjaGVkID49IHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCkgYnJlYWs7XHJcbiAgICAgICAgICAgIGNvbnN0IGhvc3QgPSBhbGxIb3N0c1tpXTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGZyZWVSYW0gPSBob3N0LmF2YWlsYWJsZVJhbTtcclxuICAgICAgICAgICAgaWYgKGZyZWVSYW0gPCB3ZWFrZW5TY3JpcHRSYW0pIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICBjb25zdCB0aHJlYWRTcGFjZSA9IE1hdGguZmxvb3IoZnJlZVJhbSAvIHdlYWtlblNjcmlwdFJhbSk7XHJcblxyXG4gICAgICAgICAgICAvLyBpZiB0aHJlYWRzUmVtYWluaW5nIGlzIGxlc3MgdGhhbiB0aGUgdGhyZWFkU3BhY2UsIHRoZW4gd2UgY2FuIG9ubHkgZGlzcGF0Y2ggdGhyZWFkc1JlbWFpbmluZyB0aHJlYWRzXHJcbiAgICAgICAgICAgIGNvbnN0IHRocmVhZHNUb0Rpc3BhdGNoID0gTWF0aC5taW4odGhyZWFkc1JlbWFpbmluZywgdGhyZWFkU3BhY2UpO1xyXG5cclxuICAgICAgICAgICAgbnMuZXhlYyhcIndlYWtlbi5qc1wiLCBob3N0Lm5hbWUsIHRocmVhZHNUb0Rpc3BhdGNoLCB0YXJnZXQsIGRlbGF5KTtcclxuICAgICAgICAgICAgdGhyZWFkc1JlbWFpbmluZyAtPSB0aHJlYWRzVG9EaXNwYXRjaDtcclxuICAgICAgICAgICAgdGhyZWFkc0Rpc3BhdGNoZWQgKz0gdGhyZWFkc1RvRGlzcGF0Y2g7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhyZWFkc1JlbWFpbmluZyA8PSAwKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KFwiRG9uZSBkZXBsb3lpbmcgd2Vha2VuXCIgKyBvcmRlciArIFwiIVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG5zLnByaW50KFxyXG4gICAgICAgICAgICBDb2xvcnMuWUVMTE9XICtcclxuICAgICAgICAgICAgICAgIFwiVGhlcmUgYXJlIFwiICtcclxuICAgICAgICAgICAgICAgIHRocmVhZHNSZW1haW5pbmcgK1xyXG4gICAgICAgICAgICAgICAgXCIgdGhyZWFkcyByZW1haW5pbmcgYWZ0ZXIgZGlzcGF0Y2hpbmcgYWxsIHRocmVhZHMsIGF0dGVtcHRpbmcgdG8gZGlzcGF0Y2ggcmVtYWluaW5nIHRocmVhZHMgb24gcHVyY2hhc2VkIHNlcnZlclwiLFxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGNvbnN0IG5lZWRlZFdlYWtlblJhbSA9IHRocmVhZHNSZW1haW5pbmcgKiB3ZWFrZW5TY3JpcHRSYW07XHJcbiAgICAgICAgY29uc3Qgc2VydmVyID0gU2VydmVyTWFuYWdlci5idXlPclVwZ3JhZGVTZXJ2ZXIobnMsIG5lZWRlZFdlYWtlblJhbSwgXCJ3ZWFrXCIsIGJhdGNoSWQpO1xyXG5cclxuICAgICAgICBpZiAoc2VydmVyID09PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIG5zLnRwcmludChcIkVycm9yISBDb3VsZCBub3QgYnV5IHNlcnZlciB0byB3ZWFrIFwiICsgdGFyZ2V0KTtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIHdlYWsgXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbnMuZXhlYyhcIndlYWtlbi5qc1wiLCBzZXJ2ZXIsIHRocmVhZHNSZW1haW5pbmcsIHRhcmdldCwgZGVsYXkpO1xyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdyb3dzIHRoZSBzcGVjaWZpZWQgc2VydmVyIGJ5IGV4ZWN1dGluZyB0aGUgXCJncm93LmpzXCIgc2NyaXB0IHdpdGggdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgdGhyZWFkcy5cclxuICAgICAqIElmIGJhdGNoTW9kZSBpcyBlbmFibGVkLCBpdCBjYWxjdWxhdGVzIHRoZSBudW1iZXIgb2YgdGhyZWFkcyBuZWVkZWQgdXNpbmcgdGhlIGdldEdyb3dUaHJlYWRzRm9ybXVsYXMgZnVuY3Rpb24uXHJcbiAgICAgKiBPdGhlcndpc2UsIGl0IHVzZXMgdGhlIGdldEdyb3dUaHJlYWRzIGZ1bmN0aW9uIHRvIGRldGVybWluZSB0aGUgbnVtYmVyIG9mIHRocmVhZHMgbmVlZGVkLlxyXG4gICAgICogSWYgdGhlcmUgYXJlIG5vIHRocmVhZHMgbmVlZGVkLCB0aGUgZ3Jvd3RoIHByb2Nlc3MgaXMgc2tpcHBlZC5cclxuICAgICAqIElmIHRoZXJlIGlzIGFuIGF2YWlsYWJsZSBob3N0IHdpdGggZW5vdWdoIFJBTSB0byBleGVjdXRlIHRoZSBcImdyb3cuanNcIiBzY3JpcHQsIGl0IGlzIGV4ZWN1dGVkIGltbWVkaWF0ZWx5LlxyXG4gICAgICogT3RoZXJ3aXNlLCBpdCBhdHRlbXB0cyB0byB1cGdyYWRlIG9yIGJ1eSBhIHNlcnZlciB3aXRoIGVub3VnaCBSQU0gdG8gZXhlY3V0ZSB0aGUgc2NyaXB0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBucyAtIFRoZSBOZXRTY3JpcHQgaW5zdGFuY2UuXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2V0IC0gVGhlIG5hbWUgb2YgdGhlIHNlcnZlciB0byBncm93LlxyXG4gICAgICogQHBhcmFtIGJhdGNoSWQgLSBUaGUgSUQgb2YgdGhlIGJhdGNoLlxyXG4gICAgICogQHBhcmFtIGJhdGNoTW9kZSAtIFNldCB0byB0cnVlLCBvZiBtb3JlIHRoYW4gb25lIGJhdGNoIHNob3VsZCBydW4gaW4gcGFyYWxsZWwgbW9kZS5cclxuICAgICAqIEBwYXJhbSBoYWNrVGhyZXNob2xkIC0gVGhlIGhhY2sgdGhyZXNob2xkLlxyXG4gICAgICogQHBhcmFtIGRlbGF5IC0gVGltZSBpbiBtcywgYnkgaG93IG11Y2ggdGhlIHdlYWtlbiBzY3JpcHQgc2hvdWxkIGJlIGRlbGF5ZWQgdG8gZW5hYmxlIHByZWNpc2UgcGFyYWxsZWwgYmF0Y2ggbW9kZSB0aW1pbmcgKGRlZmF1bHQ6IDApLlxyXG4gICAgICogQHJldHVybnMgQSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciB0aGUgZ3Jvd3RoIHByb2Nlc3Mgd2FzIHN1Y2Nlc3NmdWwuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBncm93U2VydmVyKFxyXG4gICAgICAgIG5zOiBOUyxcclxuICAgICAgICB0YXJnZXQ6IHN0cmluZyxcclxuICAgICAgICBiYXRjaElkOiBudW1iZXIsXHJcbiAgICAgICAgYmF0Y2hNb2RlOiBib29sZWFuLFxyXG4gICAgICAgIGhhY2tUaHJlc2hvbGQ6IG51bWJlcixcclxuICAgICAgICBkZWxheTogbnVtYmVyLFxyXG4gICAgICAgIGZpbHRlck5vdEFsbG93ZWRIb3N0cyA9IHRydWUsXHJcbiAgICApOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgdG90YWxHcm93VGhyZWFkc05lZWRlZCA9IDA7XHJcbiAgICAgICAgaWYgKCFiYXRjaE1vZGUpIHtcclxuICAgICAgICAgICAgdG90YWxHcm93VGhyZWFkc05lZWRlZCA9IGdldEdyb3dUaHJlYWRzKG5zLCB0YXJnZXQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgPSBnZXRHcm93VGhyZWFkc0Zvcm11bGFzKG5zLCB0YXJnZXQsIGhhY2tUaHJlc2hvbGQpO1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRHcm93VGhyZWFkcyA9IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodG90YWxHcm93VGhyZWFkc05lZWRlZCA8IDEpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoXCJObyBncm93IHRocmVhZHMgbmVlZGVkLCBza2lwcGluZyBncm93dGggcHJvY2Vzc1wiKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gZXhlYyBncm93LmpzIHdpdGggbnVtIG9mIHRocmVhZHNcclxuICAgICAgICBsZXQgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtKG5zKTtcclxuICAgICAgICBpZiAoZmlsdGVyTm90QWxsb3dlZEhvc3RzKSB7XHJcbiAgICAgICAgICAgIGFsbEhvc3RzID0gYWxsSG9zdHMuZmlsdGVyKChob3N0KSA9PiAhaG9zdC5uYW1lLmluY2x1ZGVzKFwid2Vhay1cIikgJiYgIWhvc3QubmFtZS5pbmNsdWRlcyhcImhhY2stXCIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZ3Jvd2luZ1NjcmlwdFJhbSA9IENvbmZpZy5HUk9XX1NDUklQVF9SQU07XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgbWF4VGhyZWFkc09uSG9zdCA9IE1hdGguZmxvb3IoaG9zdC5hdmFpbGFibGVSYW0gLyBncm93aW5nU2NyaXB0UmFtKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChtYXhUaHJlYWRzT25Ib3N0ID49IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQpIHtcclxuICAgICAgICAgICAgICAgIG5zLmV4ZWMoXCJncm93LmpzXCIsIGhvc3QubmFtZSwgdG90YWxHcm93VGhyZWFkc05lZWRlZCwgdGFyZ2V0LCBkZWxheSk7XHJcbiAgICAgICAgICAgICAgICBucy5wcmludChcIkRvbmUgZGVwbG95aW5nIGdyb3chXCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5zLnByaW50KENvbG9ycy5ZRUxMT1cgKyBcIk5vIGF2YWlsYWJsZSBob3N0IHRvIGdyb3cgXCIgKyB0YXJnZXQgKyBcIi4gQXR0ZW1wdGluZyB0byB1cGdyYWRlL2J1eSBzZXJ2ZXIuLi5cIik7XHJcblxyXG4gICAgICAgIGNvbnN0IG5lZWRlZEdyb3dSYW0gPSB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkICogZ3Jvd2luZ1NjcmlwdFJhbTtcclxuICAgICAgICBjb25zdCBzZXJ2ZXIgPSBTZXJ2ZXJNYW5hZ2VyLmJ1eU9yVXBncmFkZVNlcnZlcihucywgbmVlZGVkR3Jvd1JhbSwgXCJncm93XCIsIGJhdGNoSWQpO1xyXG5cclxuICAgICAgICBpZiAoc2VydmVyID09PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIG5zLnRwcmludChcIkVycm9yISBDb3VsZCBub3QgYnV5IHNlcnZlciB0byBncm93IFwiICsgdGFyZ2V0KTtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIGdyb3cgXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbnMuZXhlYyhcImdyb3cuanNcIiwgc2VydmVyLCB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkLCB0YXJnZXQsIGRlbGF5KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYWNrcyBhIGdpdmVuIHNlcnZlciBieSBleGVjdXRpbmcgdGhlIFwiaGFjay5qc1wiIHNjcmlwdCB3aXRoIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIHRocmVhZHMsIG9uIGNlcnRhaW4gaG9zdHMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG5zIC0gVGhlIE5ldFNjcmlwdCBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2V0IC0gVGhlIG5hbWUgb2YgdGhlIHNlcnZlciB0byBoYWNrLlxyXG4gICAgICogQHBhcmFtIHRocmVzaG9sZCAtIFRoZSBoYWNraW5nIHRocmVzaG9sZCBmb3IgdGhlIHNlcnZlci5cclxuICAgICAqIEBwYXJhbSBiYXRjaElkIC0gVGhlIElEIG9mIHRoZSBjdXJyZW50IGhhY2tpbmcgYmF0Y2guXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hNb2RlIC0gU2V0IHRvIHRydWUsIG9mIG1vcmUgdGhhbiBvbmUgYmF0Y2ggc2hvdWxkIHJ1biBpbiBwYXJhbGxlbCBtb2RlLlxyXG4gICAgICogQHBhcmFtIGRlbGF5IC0gVGltZSBpbiBtcywgYnkgaG93IG11Y2ggdGhlIHdlYWtlbiBzY3JpcHQgc2hvdWxkIGJlIGRlbGF5ZWQgdG8gZW5hYmxlIHByZWNpc2UgcGFyYWxsZWwgYmF0Y2ggbW9kZSB0aW1pbmcgKGRlZmF1bHQ6IDApLlxyXG4gICAgICogQHJldHVybnMgQSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciB0aGUgaGFja2luZyB3YXMgc3VjY2Vzc2Z1bC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGhhY2tTZXJ2ZXIobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgdGhyZXNob2xkOiBudW1iZXIsIGJhdGNoSWQ6IG51bWJlciwgYmF0Y2hNb2RlOiBib29sZWFuLCBkZWxheTogbnVtYmVyKSB7XHJcbiAgICAgICAgbGV0IHRvdGFsSGFja1RocmVhZHNOZWVkZWQgPSAwO1xyXG4gICAgICAgIGlmICghYmF0Y2hNb2RlKSB7XHJcbiAgICAgICAgICAgIHRvdGFsSGFja1RocmVhZHNOZWVkZWQgPSBNYXRoLmNlaWwodGhyZXNob2xkIC8gbnMuaGFja0FuYWx5emUodGFyZ2V0KSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdG90YWxIYWNrVGhyZWFkc05lZWRlZCA9IGdldEhhY2tUaHJlYWRzRm9ybXVsYXMobnMsIHRhcmdldCwgdGhyZXNob2xkKTtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50SGFja1RocmVhZHMgPSB0b3RhbEhhY2tUaHJlYWRzTmVlZGVkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtKG5zKS5maWx0ZXIoXHJcbiAgICAgICAgICAgIChob3N0KSA9PiAhaG9zdC5uYW1lLmluY2x1ZGVzKFwid2Vhay1cIikgJiYgIWhvc3QubmFtZS5pbmNsdWRlcyhcImdyb3ctXCIpLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgY29uc3QgaGFja2luZ1NjcmlwdFJhbSA9IENvbmZpZy5IQUNLX1NDUklQVF9SQU07XHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgbWF4VGhyZWFkc09uSG9zdCA9IE1hdGguZmxvb3IoaG9zdC5hdmFpbGFibGVSYW0gLyBoYWNraW5nU2NyaXB0UmFtKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChtYXhUaHJlYWRzT25Ib3N0ID49IHRvdGFsSGFja1RocmVhZHNOZWVkZWQpIHtcclxuICAgICAgICAgICAgICAgIG5zLmV4ZWMoXCJoYWNrLmpzXCIsIGhvc3QubmFtZSwgdG90YWxIYWNrVGhyZWFkc05lZWRlZCwgdGFyZ2V0LCBkZWxheSk7XHJcbiAgICAgICAgICAgICAgICBucy5wcmludChcIkRvbmUgZGVwbG95aW5nIGhhY2shXCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5zLnByaW50KENvbG9ycy5ZRUxMT1cgKyBcIk5vIGF2YWlsYWJsZSBob3N0IHRvIGhhY2sgXCIgKyB0YXJnZXQgKyBcIi4gQnV5aW5nIHNlcnZlci4uLlwiKTtcclxuXHJcbiAgICAgICAgY29uc3QgbmVlZGVkR3Jvd1JhbSA9IHRvdGFsSGFja1RocmVhZHNOZWVkZWQgKiBoYWNraW5nU2NyaXB0UmFtO1xyXG4gICAgICAgIGNvbnN0IHNlcnZlciA9IFNlcnZlck1hbmFnZXIuYnV5T3JVcGdyYWRlU2VydmVyKG5zLCBuZWVkZWRHcm93UmFtLCBcImhhY2tcIiwgYmF0Y2hJZCk7XHJcblxyXG4gICAgICAgIGlmIChzZXJ2ZXIgPT09IFwiXCIpIHtcclxuICAgICAgICAgICAgbnMudHByaW50KFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIGhhY2sgXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciEgQ291bGQgbm90IGJ1eSBzZXJ2ZXIgdG8gaGFjayBcIiArIHRhcmdldCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBucy5leGVjKFwiaGFjay5qc1wiLCBzZXJ2ZXIsIHRvdGFsSGFja1RocmVhZHNOZWVkZWQsIHRhcmdldCwgZGVsYXkpO1xyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUVBLFNBQVMsY0FBYztBQUN2QixTQUFpQix3QkFBd0I7QUFDekM7QUFBQSxFQUNJO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsT0FDRztBQUNQLFNBQVMscUJBQXFCO0FBRXZCLGFBQU0sY0FBYztBQUFBLEVBQ3ZCLE9BQWUscUJBQXFCO0FBQUEsRUFDcEMsT0FBZSxxQkFBcUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBZXBDLE9BQU8sYUFDSCxJQUNBLFFBQ0EsT0FDQSxTQUNBLFdBQ0EsUUFBUSxHQUNSLHdCQUF3QixNQUNqQjtBQUNQLFFBQUksMkJBQTJCO0FBRy9CLFFBQUksU0FBUyxLQUFLLENBQUMsV0FBVztBQUUxQixpQ0FBMkIsaUJBQWlCLElBQUksTUFBTTtBQUFBLElBQzFELFdBQVcsU0FBUyxLQUFLLENBQUMsV0FBVztBQUVqQyxZQUFNLGNBQWMsZUFBZSxJQUFJLE1BQU07QUFFN0MsaUNBQTJCLDBCQUEwQixJQUFJLFdBQVc7QUFBQSxJQUN4RSxXQUFXLFNBQVMsS0FBSyxXQUFXO0FBRWhDLGlDQUEyQiwwQkFBMEIsSUFBSSxLQUFLLGtCQUFrQjtBQUFBLElBQ3BGLFdBQVcsU0FBUyxLQUFLLFdBQVc7QUFFaEMsaUNBQTJCLDBCQUEwQixJQUFJLEtBQUssa0JBQWtCO0FBQUEsSUFDcEYsT0FBTztBQUNILFlBQU0sSUFBSSxNQUFNLHlDQUF5QztBQUFBLElBQzdEO0FBRUEsUUFBSSwyQkFBMkIsR0FBRztBQUM5QixTQUFHLE1BQU0sd0NBQXdDLEtBQUs7QUFDdEQsYUFBTztBQUFBLElBQ1g7QUFHQSxRQUFJLFdBQXFCLGlCQUFpQixFQUFFO0FBQzVDLFFBQUksdUJBQXVCO0FBQ3ZCLGlCQUFXLFNBQVMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEtBQUssU0FBUyxPQUFPLEtBQUssQ0FBQyxLQUFLLEtBQUssU0FBUyxPQUFPLENBQUM7QUFBQSxJQUNyRztBQUNBLFVBQU0sa0JBQWtCLE9BQU87QUFFL0IsUUFBSSxvQkFBb0I7QUFDeEIsUUFBSSxtQkFBbUI7QUFDdkIsYUFBUyxJQUFJLEdBQUcsSUFBSSxTQUFTLFFBQVEsS0FBSztBQUN0QyxVQUFJLHFCQUFxQjtBQUEwQjtBQUNuRCxZQUFNLE9BQU8sU0FBUyxDQUFDO0FBRXZCLFlBQU0sVUFBVSxLQUFLO0FBQ3JCLFVBQUksVUFBVTtBQUFpQjtBQUMvQixZQUFNLGNBQWMsS0FBSyxNQUFNLFVBQVUsZUFBZTtBQUd4RCxZQUFNLG9CQUFvQixLQUFLLElBQUksa0JBQWtCLFdBQVc7QUFFaEUsU0FBRyxLQUFLLGFBQWEsS0FBSyxNQUFNLG1CQUFtQixRQUFRLEtBQUs7QUFDaEUsMEJBQW9CO0FBQ3BCLDJCQUFxQjtBQUFBLElBQ3pCO0FBRUEsUUFBSSxvQkFBb0IsR0FBRztBQUN2QixTQUFHLE1BQU0sMEJBQTBCLFFBQVEsR0FBRztBQUM5QyxhQUFPO0FBQUEsSUFDWDtBQUNBLE9BQUc7QUFBQSxNQUNDLE9BQU8sU0FDSCxlQUNBLG1CQUNBO0FBQUEsSUFDUjtBQUVBLFVBQU0sa0JBQWtCLG1CQUFtQjtBQUMzQyxVQUFNLFNBQVMsY0FBYyxtQkFBbUIsSUFBSSxpQkFBaUIsUUFBUSxPQUFPO0FBRXBGLFFBQUksV0FBVyxJQUFJO0FBQ2YsU0FBRyxPQUFPLHlDQUF5QyxNQUFNO0FBQ3pELFlBQU0sSUFBSSxNQUFNLHlDQUF5QyxNQUFNO0FBQUEsSUFDbkU7QUFFQSxPQUFHLEtBQUssYUFBYSxRQUFRLGtCQUFrQixRQUFRLEtBQUs7QUFFNUQsV0FBTztBQUFBLEVBQ1g7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBa0JBLE9BQU8sV0FDSCxJQUNBLFFBQ0EsU0FDQSxXQUNBLGVBQ0EsT0FDQSx3QkFBd0IsTUFDakI7QUFDUCxRQUFJLHlCQUF5QjtBQUM3QixRQUFJLENBQUMsV0FBVztBQUNaLCtCQUF5QixlQUFlLElBQUksTUFBTTtBQUFBLElBQ3RELE9BQU87QUFDSCwrQkFBeUIsdUJBQXVCLElBQUksUUFBUSxhQUFhO0FBQ3pFLFdBQUsscUJBQXFCO0FBQUEsSUFDOUI7QUFFQSxRQUFJLHlCQUF5QixHQUFHO0FBQzVCLFNBQUcsTUFBTSxpREFBaUQ7QUFDMUQsYUFBTztBQUFBLElBQ1g7QUFHQSxRQUFJLFdBQVcsaUJBQWlCLEVBQUU7QUFDbEMsUUFBSSx1QkFBdUI7QUFDdkIsaUJBQVcsU0FBUyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssS0FBSyxTQUFTLE9BQU8sS0FBSyxDQUFDLEtBQUssS0FBSyxTQUFTLE9BQU8sQ0FBQztBQUFBLElBQ3JHO0FBQ0EsVUFBTSxtQkFBbUIsT0FBTztBQUVoQyxhQUFTLElBQUksR0FBRyxJQUFJLFNBQVMsUUFBUSxLQUFLO0FBQ3RDLFlBQU0sT0FBTyxTQUFTLENBQUM7QUFFdkIsWUFBTSxtQkFBbUIsS0FBSyxNQUFNLEtBQUssZUFBZSxnQkFBZ0I7QUFFeEUsVUFBSSxvQkFBb0Isd0JBQXdCO0FBQzVDLFdBQUcsS0FBSyxXQUFXLEtBQUssTUFBTSx3QkFBd0IsUUFBUSxLQUFLO0FBQ25FLFdBQUcsTUFBTSxzQkFBc0I7QUFDL0IsZUFBTztBQUFBLE1BQ1g7QUFBQSxJQUNKO0FBRUEsT0FBRyxNQUFNLE9BQU8sU0FBUywrQkFBK0IsU0FBUyx1Q0FBdUM7QUFFeEcsVUFBTSxnQkFBZ0IseUJBQXlCO0FBQy9DLFVBQU0sU0FBUyxjQUFjLG1CQUFtQixJQUFJLGVBQWUsUUFBUSxPQUFPO0FBRWxGLFFBQUksV0FBVyxJQUFJO0FBQ2YsU0FBRyxPQUFPLHlDQUF5QyxNQUFNO0FBQ3pELFlBQU0sSUFBSSxNQUFNLHlDQUF5QyxNQUFNO0FBQUEsSUFDbkU7QUFFQSxPQUFHLEtBQUssV0FBVyxRQUFRLHdCQUF3QixRQUFRLEtBQUs7QUFFaEUsV0FBTztBQUFBLEVBQ1g7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFhQSxPQUFPLFdBQVcsSUFBUSxRQUFnQixXQUFtQixTQUFpQixXQUFvQixPQUFlO0FBQzdHLFFBQUkseUJBQXlCO0FBQzdCLFFBQUksQ0FBQyxXQUFXO0FBQ1osK0JBQXlCLEtBQUssS0FBSyxZQUFZLEdBQUcsWUFBWSxNQUFNLENBQUM7QUFBQSxJQUN6RSxPQUFPO0FBQ0gsK0JBQXlCLHVCQUF1QixJQUFJLFFBQVEsU0FBUztBQUNyRSxXQUFLLHFCQUFxQjtBQUFBLElBQzlCO0FBRUEsVUFBTSxXQUFXLGlCQUFpQixFQUFFLEVBQUU7QUFBQSxNQUNsQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEtBQUssU0FBUyxPQUFPLEtBQUssQ0FBQyxLQUFLLEtBQUssU0FBUyxPQUFPO0FBQUEsSUFDekU7QUFDQSxVQUFNLG1CQUFtQixPQUFPO0FBRWhDLGFBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsWUFBTSxPQUFPLFNBQVMsQ0FBQztBQUV2QixZQUFNLG1CQUFtQixLQUFLLE1BQU0sS0FBSyxlQUFlLGdCQUFnQjtBQUV4RSxVQUFJLG9CQUFvQix3QkFBd0I7QUFDNUMsV0FBRyxLQUFLLFdBQVcsS0FBSyxNQUFNLHdCQUF3QixRQUFRLEtBQUs7QUFDbkUsV0FBRyxNQUFNLHNCQUFzQjtBQUMvQixlQUFPO0FBQUEsTUFDWDtBQUFBLElBQ0o7QUFFQSxPQUFHLE1BQU0sT0FBTyxTQUFTLCtCQUErQixTQUFTLG9CQUFvQjtBQUVyRixVQUFNLGdCQUFnQix5QkFBeUI7QUFDL0MsVUFBTSxTQUFTLGNBQWMsbUJBQW1CLElBQUksZUFBZSxRQUFRLE9BQU87QUFFbEYsUUFBSSxXQUFXLElBQUk7QUFDZixTQUFHLE9BQU8seUNBQXlDLE1BQU07QUFDekQsWUFBTSxJQUFJLE1BQU0seUNBQXlDLE1BQU07QUFBQSxJQUNuRTtBQUVBLE9BQUcsS0FBSyxXQUFXLFFBQVEsd0JBQXdCLFFBQVEsS0FBSztBQUVoRSxXQUFPO0FBQUEsRUFDWDtBQUNKOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"parallel/WGHAlgorithms.js\",\"server\":\"home\"}}],[\"Config/Config.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export class Config {\\n  /**\\n   * The target the daemon should hack, leave empty to hack the best server.\\n   * Default: \\\"\\\"\\n   */\\n  static TARGET = \\\"\\\";\\n  /**\\n   * The maximum amount of money the daemon is allowed to use to buy servers.\\n   * Default: 0\\n   */\\n  static MAX_MONEY_TO_BUY = 0;\\n  /**\\n   * The maximum amount of money the daemon is allowed to hack from a server, leave at 0 to let the daemon decide.\\n   * Default: 0\\n   */\\n  static HACK_THRESHOLD = 0;\\n  /**\\n   * The step value which is used to decrease the hack threshold to calculate the optimal HACK_THRESHOLD.\\n   * Default: 0.05\\n   */\\n  static THRESHOLD_STEP = 0.05;\\n  /**\\n   * The minimum hack threshold value.\\n   * This value represents the minimum threshold required for a successful hack.\\n   * Default: 0.15\\n   */\\n  static MIN_HACK_THRESHOLD = 0.15;\\n  /**\\n   * The maximum amount of RAM the daemon should leave free on the Home server.\\n   * Default: 50\\n   */\\n  static HOME_FREE_RAM = 50;\\n  /**\\n   * The delay time in milliseconds.\\n   * This constant represents the amount of time to add as a margin when calling weak/grow/hack in parallel mode.\\n   * Default: 1000\\n   */\\n  static DELAY_MARGIN_MS = 500;\\n  /**\\n   * The number of batches to use in parallel mode.\\n   * Default: 2\\n   */\\n  static LOOP_BATCH_COUNT = 100;\\n  /**\\n   * The amount of RAM (in gigabytes) required by the weaken, grow and hack script.\\n   * Default: 1.75, 1.75, 1.7\\n   */\\n  static WEAKEN_SCRIPT_RAM = 1.75;\\n  static GROW_SCRIPT_RAM = 1.75;\\n  static HACK_SCRIPT_RAM = 1.7;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUmVwcmVzZW50cyB0aGUgc2V0dGluZ3MgZm9yIHRoZSBhcHBsaWNhdGlvbi5cclxuICpcclxuICogVG8gbW9kaWZ5IHRoZSBzZXR0aW5ncywgdXBkYXRlIHRoZSBjbGFzcyBwcm9wZXJ0aWVzIGFjY29yZGluZ2x5LlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIENvbmZpZyB7XHJcbiAgICAvKipcclxuICAgICAqIFRoZSB0YXJnZXQgdGhlIGRhZW1vbiBzaG91bGQgaGFjaywgbGVhdmUgZW1wdHkgdG8gaGFjayB0aGUgYmVzdCBzZXJ2ZXIuXHJcbiAgICAgKiBEZWZhdWx0OiBcIlwiXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgVEFSR0VUID0gXCJcIjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBtb25leSB0aGUgZGFlbW9uIGlzIGFsbG93ZWQgdG8gdXNlIHRvIGJ1eSBzZXJ2ZXJzLlxyXG4gICAgICogRGVmYXVsdDogMFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE1BWF9NT05FWV9UT19CVVkgPSAwO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1heGltdW0gYW1vdW50IG9mIG1vbmV5IHRoZSBkYWVtb24gaXMgYWxsb3dlZCB0byBoYWNrIGZyb20gYSBzZXJ2ZXIsIGxlYXZlIGF0IDAgdG8gbGV0IHRoZSBkYWVtb24gZGVjaWRlLlxyXG4gICAgICogRGVmYXVsdDogMFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEhBQ0tfVEhSRVNIT0xEID0gMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBzdGVwIHZhbHVlIHdoaWNoIGlzIHVzZWQgdG8gZGVjcmVhc2UgdGhlIGhhY2sgdGhyZXNob2xkIHRvIGNhbGN1bGF0ZSB0aGUgb3B0aW1hbCBIQUNLX1RIUkVTSE9MRC5cclxuICAgICAqIERlZmF1bHQ6IDAuMDVcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBUSFJFU0hPTERfU1RFUCA9IDAuMDU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbWluaW11bSBoYWNrIHRocmVzaG9sZCB2YWx1ZS5cclxuICAgICAqIFRoaXMgdmFsdWUgcmVwcmVzZW50cyB0aGUgbWluaW11bSB0aHJlc2hvbGQgcmVxdWlyZWQgZm9yIGEgc3VjY2Vzc2Z1bCBoYWNrLlxyXG4gICAgICogRGVmYXVsdDogMC4xNVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE1JTl9IQUNLX1RIUkVTSE9MRCA9IDAuMTU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbWF4aW11bSBhbW91bnQgb2YgUkFNIHRoZSBkYWVtb24gc2hvdWxkIGxlYXZlIGZyZWUgb24gdGhlIEhvbWUgc2VydmVyLlxyXG4gICAgICogRGVmYXVsdDogNTBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBIT01FX0ZSRUVfUkFNID0gNTA7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZGVsYXkgdGltZSBpbiBtaWxsaXNlY29uZHMuXHJcbiAgICAgKiBUaGlzIGNvbnN0YW50IHJlcHJlc2VudHMgdGhlIGFtb3VudCBvZiB0aW1lIHRvIGFkZCBhcyBhIG1hcmdpbiB3aGVuIGNhbGxpbmcgd2Vhay9ncm93L2hhY2sgaW4gcGFyYWxsZWwgbW9kZS5cclxuICAgICAqIERlZmF1bHQ6IDEwMDBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBERUxBWV9NQVJHSU5fTVMgPSA1MDA7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbnVtYmVyIG9mIGJhdGNoZXMgdG8gdXNlIGluIHBhcmFsbGVsIG1vZGUuXHJcbiAgICAgKiBEZWZhdWx0OiAyXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgTE9PUF9CQVRDSF9DT1VOVCA9IDEwMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBhbW91bnQgb2YgUkFNIChpbiBnaWdhYnl0ZXMpIHJlcXVpcmVkIGJ5IHRoZSB3ZWFrZW4sIGdyb3cgYW5kIGhhY2sgc2NyaXB0LlxyXG4gICAgICogRGVmYXVsdDogMS43NSwgMS43NSwgMS43XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgV0VBS0VOX1NDUklQVF9SQU0gPSAxLjc1O1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBHUk9XX1NDUklQVF9SQU0gPSAxLjc1O1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBIQUNLX1NDUklQVF9SQU0gPSAxLjc7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFLTyxhQUFNLE9BQU87QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS2hCLE9BQXVCLFNBQVM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTWhDLE9BQXVCLG1CQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNMUMsT0FBdUIsaUJBQWlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU14QyxPQUF1QixpQkFBaUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFPeEMsT0FBdUIscUJBQXFCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU01QyxPQUF1QixnQkFBZ0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFPdkMsT0FBdUIsa0JBQWtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU16QyxPQUF1QixtQkFBbUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTTFDLE9BQXVCLG9CQUFvQjtBQUFBLEVBQzNDLE9BQXVCLGtCQUFrQjtBQUFBLEVBQ3pDLE9BQXVCLGtCQUFrQjtBQUM3QzsiLCJuYW1lcyI6W119\",\"filename\":\"Config/Config.js\",\"server\":\"home\"}}],[\"parallel/ServerManager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Colors, nukeAll, nukeServer } from \\\"/lib.js\\\";\\nexport class ServerManager {\\n  /**\\n   * Buys or upgrades a server based on the desired RAM and server type.\\n   * If the server exists and can be upgraded successfully, it returns the upgraded server name.\\n   * If the server cannot be upgraded, it attempts to buy a new server with the desired RAM and name.\\n   *\\n   * @param ns - The Bitburner namespace object.\\n   * @param desiredRam - How much RAM needs the server at least.\\n   * @param serverType - The type of server to buy or upgrade (`weak`, `grow`, `hack`).\\n   * @param batchId - The batch ID of the server.\\n   * @returns The name of the upgraded server or an empty string if a new server cannot be bought/upgraded.\\n   */\\n  static buyOrUpgradeServer(ns, desiredRam, serverType, batchId) {\\n    const serverName = serverType + \\\"-\\\" + batchId;\\n    const upgradeSuccessful = this.upgradeServer(ns, desiredRam, serverName);\\n    if (upgradeSuccessful) {\\n      ns.print(Colors.GREEN + \\\"[server Manager] Upgraded Server '\\\" + serverName + \\\"'!\\\");\\n      return serverName;\\n    }\\n    const name = this.buyServer(ns, desiredRam, serverName);\\n    if (name === \\\"\\\") {\\n      ns.print(Colors.RED + \\\"[server Manager] Failed to buy a new server!\\\");\\n      return name;\\n    }\\n    ns.print(Colors.GREEN + \\\"[server Manager] Bought Server '\\\" + name + \\\"'!\\\");\\n    nukeAll(ns);\\n    return name;\\n  }\\n  static buyServer(ns, desiredRam, serverName) {\\n    const purchasedServerLimit = ns.getPurchasedServerLimit();\\n    const purchasedServers = ns.getPurchasedServers();\\n    if (purchasedServers.length >= purchasedServerLimit) {\\n      ns.print(Colors.RED + \\\"[server Manager] attempted to buy a new server, but the limit has been reached\\\");\\n      return \\\"\\\";\\n    }\\n    const exponent = Math.ceil(Math.log2(desiredRam));\\n    desiredRam = Math.pow(2, exponent);\\n    const cost = ns.getPurchasedServerCost(desiredRam);\\n    if (cost > ns.getServerMoneyAvailable(\\\"home\\\")) {\\n      ns.print(\\n        Colors.RED + \\\"[server Manager] attempted to buy a new server, but the player does not have enough money\\\"\\n      );\\n      return \\\"\\\";\\n    }\\n    const name = ns.purchaseServer(serverName, desiredRam);\\n    nukeServer(ns, name);\\n    return name;\\n  }\\n  static upgradeServer(ns, desiredRam, serverName) {\\n    const purchasedServers = ns.getPurchasedServers();\\n    if (!purchasedServers.includes(serverName)) {\\n      ns.print(Colors.YELLOW + \\\"[server Manager] attempted to upgrade Server, but the server does not exist\\\");\\n      return false;\\n    }\\n    const serverMaxRam = ns.getServerMaxRam(serverName);\\n    let totalRequiredRam = desiredRam + serverMaxRam;\\n    const exponent = Math.ceil(Math.log2(totalRequiredRam));\\n    totalRequiredRam = Math.pow(2, exponent);\\n    const cost = ns.getPurchasedServerUpgradeCost(serverName, totalRequiredRam);\\n    if (cost > ns.getServerMoneyAvailable(\\\"home\\\")) {\\n      ns.print(\\n        Colors.RED + \\\"[server Manager] attempted to upgrade Server, but the player does not have enough money\\\"\\n      );\\n      return false;\\n    }\\n    if (!ns.upgradePurchasedServer(serverName, totalRequiredRam)) {\\n      ns.print(Colors.RED + \\\"[server Manager] attempted to upgrade Server, but the upgrade failed\\\");\\n      return false;\\n    }\\n    return true;\\n  }\\n  /**\\n   * Upgrades an existing server to meet the desired RAM requirement, that is cheapest to upgrade.\\n   *\\n   * @param ns - The NetScriptJS object.\\n   * @param desiredRam - How much RAM needs the server at least.\\n   * @param name - The name of the server to upgrade.\\n   * @returns The name of the upgraded server, or an empty string if the upgrade failed.\\n   */\\n  static getBestServerToUpgrade(ns, desiredRam, name) {\\n    const purchasedServers = ns.getPurchasedServers().filter((server) => server.includes(name));\\n    let minUpgradeCost = Number.MAX_VALUE;\\n    let serverToUpgrade = \\\"\\\";\\n    let totalRequiredRam = 0;\\n    for (let i = 0; i < purchasedServers.length; i++) {\\n      const server = purchasedServers[i];\\n      const serverMaxRam = ns.getServerMaxRam(server);\\n      totalRequiredRam = desiredRam + serverMaxRam;\\n      const exponent = Math.ceil(Math.log2(totalRequiredRam));\\n      totalRequiredRam = Math.pow(2, exponent);\\n      const cost = ns.getPurchasedServerUpgradeCost(server, totalRequiredRam);\\n      if (cost < minUpgradeCost) {\\n        minUpgradeCost = cost;\\n        serverToUpgrade = server;\\n      }\\n    }\\n    return {\\n      minUpgradeCost,\\n      serverToUpgrade,\\n      totalRequiredRam\\n    };\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcnZlck1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3JzLCBudWtlQWxsLCBudWtlU2VydmVyIH0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNlcnZlck1hbmFnZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKiBCdXlzIG9yIHVwZ3JhZGVzIGEgc2VydmVyIGJhc2VkIG9uIHRoZSBkZXNpcmVkIFJBTSBhbmQgc2VydmVyIHR5cGUuXHJcbiAgICAgKiBJZiB0aGUgc2VydmVyIGV4aXN0cyBhbmQgY2FuIGJlIHVwZ3JhZGVkIHN1Y2Nlc3NmdWxseSwgaXQgcmV0dXJucyB0aGUgdXBncmFkZWQgc2VydmVyIG5hbWUuXHJcbiAgICAgKiBJZiB0aGUgc2VydmVyIGNhbm5vdCBiZSB1cGdyYWRlZCwgaXQgYXR0ZW1wdHMgdG8gYnV5IGEgbmV3IHNlcnZlciB3aXRoIHRoZSBkZXNpcmVkIFJBTSBhbmQgbmFtZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbnMgLSBUaGUgQml0YnVybmVyIG5hbWVzcGFjZSBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0gZGVzaXJlZFJhbSAtIEhvdyBtdWNoIFJBTSBuZWVkcyB0aGUgc2VydmVyIGF0IGxlYXN0LlxyXG4gICAgICogQHBhcmFtIHNlcnZlclR5cGUgLSBUaGUgdHlwZSBvZiBzZXJ2ZXIgdG8gYnV5IG9yIHVwZ3JhZGUgKGB3ZWFrYCwgYGdyb3dgLCBgaGFja2ApLlxyXG4gICAgICogQHBhcmFtIGJhdGNoSWQgLSBUaGUgYmF0Y2ggSUQgb2YgdGhlIHNlcnZlci5cclxuICAgICAqIEByZXR1cm5zIFRoZSBuYW1lIG9mIHRoZSB1cGdyYWRlZCBzZXJ2ZXIgb3IgYW4gZW1wdHkgc3RyaW5nIGlmIGEgbmV3IHNlcnZlciBjYW5ub3QgYmUgYm91Z2h0L3VwZ3JhZGVkLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYnV5T3JVcGdyYWRlU2VydmVyKG5zOiBOUywgZGVzaXJlZFJhbTogbnVtYmVyLCBzZXJ2ZXJUeXBlOiBzdHJpbmcsIGJhdGNoSWQ6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyTmFtZSA9IHNlcnZlclR5cGUgKyBcIi1cIiArIGJhdGNoSWQ7XHJcbiAgICAgICAgY29uc3QgdXBncmFkZVN1Y2Nlc3NmdWwgPSB0aGlzLnVwZ3JhZGVTZXJ2ZXIobnMsIGRlc2lyZWRSYW0sIHNlcnZlck5hbWUpO1xyXG5cclxuICAgICAgICBpZiAodXBncmFkZVN1Y2Nlc3NmdWwpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJbc2VydmVyIE1hbmFnZXJdIFVwZ3JhZGVkIFNlcnZlciAnXCIgKyBzZXJ2ZXJOYW1lICsgXCInIVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIHNlcnZlck5hbWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5idXlTZXJ2ZXIobnMsIGRlc2lyZWRSYW0sIHNlcnZlck5hbWUpO1xyXG4gICAgICAgIGlmIChuYW1lID09PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5SRUQgKyBcIltzZXJ2ZXIgTWFuYWdlcl0gRmFpbGVkIHRvIGJ1eSBhIG5ldyBzZXJ2ZXIhXCIpO1xyXG4gICAgICAgICAgICByZXR1cm4gbmFtZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJbc2VydmVyIE1hbmFnZXJdIEJvdWdodCBTZXJ2ZXIgJ1wiICsgbmFtZSArIFwiJyFcIik7XHJcbiAgICAgICAgbnVrZUFsbChucyk7XHJcbiAgICAgICAgcmV0dXJuIG5hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGJ1eVNlcnZlcihuczogTlMsIGRlc2lyZWRSYW06IG51bWJlciwgc2VydmVyTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBwdXJjaGFzZWRTZXJ2ZXJMaW1pdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckxpbWl0KCk7XHJcbiAgICAgICAgY29uc3QgcHVyY2hhc2VkU2VydmVycyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKTtcclxuICAgICAgICBpZiAocHVyY2hhc2VkU2VydmVycy5sZW5ndGggPj0gcHVyY2hhc2VkU2VydmVyTGltaXQpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLlJFRCArIFwiW3NlcnZlciBNYW5hZ2VyXSBhdHRlbXB0ZWQgdG8gYnV5IGEgbmV3IHNlcnZlciwgYnV0IHRoZSBsaW1pdCBoYXMgYmVlbiByZWFjaGVkXCIpO1xyXG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGV4cG9uZW50ID0gTWF0aC5jZWlsKE1hdGgubG9nMihkZXNpcmVkUmFtKSk7XHJcbiAgICAgICAgZGVzaXJlZFJhbSA9IE1hdGgucG93KDIsIGV4cG9uZW50KTtcclxuXHJcbiAgICAgICAgY29uc3QgY29zdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QoZGVzaXJlZFJhbSk7XHJcbiAgICAgICAgaWYgKGNvc3QgPiBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcImhvbWVcIikpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgICAgICBDb2xvcnMuUkVEICtcclxuICAgICAgICAgICAgICAgICAgICBcIltzZXJ2ZXIgTWFuYWdlcl0gYXR0ZW1wdGVkIHRvIGJ1eSBhIG5ldyBzZXJ2ZXIsIGJ1dCB0aGUgcGxheWVyIGRvZXMgbm90IGhhdmUgZW5vdWdoIG1vbmV5XCIsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbmFtZSA9IG5zLnB1cmNoYXNlU2VydmVyKHNlcnZlck5hbWUsIGRlc2lyZWRSYW0pO1xyXG4gICAgICAgIG51a2VTZXJ2ZXIobnMsIG5hbWUpO1xyXG4gICAgICAgIHJldHVybiBuYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyB1cGdyYWRlU2VydmVyKG5zOiBOUywgZGVzaXJlZFJhbTogbnVtYmVyLCBzZXJ2ZXJOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBwdXJjaGFzZWRTZXJ2ZXJzID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpO1xyXG4gICAgICAgIGlmICghcHVyY2hhc2VkU2VydmVycy5pbmNsdWRlcyhzZXJ2ZXJOYW1lKSkge1xyXG4gICAgICAgICAgICBucy5wcmludChDb2xvcnMuWUVMTE9XICsgXCJbc2VydmVyIE1hbmFnZXJdIGF0dGVtcHRlZCB0byB1cGdyYWRlIFNlcnZlciwgYnV0IHRoZSBzZXJ2ZXIgZG9lcyBub3QgZXhpc3RcIik7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHNlcnZlck1heFJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzZXJ2ZXJOYW1lKTtcclxuICAgICAgICBsZXQgdG90YWxSZXF1aXJlZFJhbSA9IGRlc2lyZWRSYW0gKyBzZXJ2ZXJNYXhSYW07XHJcblxyXG4gICAgICAgIGNvbnN0IGV4cG9uZW50ID0gTWF0aC5jZWlsKE1hdGgubG9nMih0b3RhbFJlcXVpcmVkUmFtKSk7XHJcbiAgICAgICAgdG90YWxSZXF1aXJlZFJhbSA9IE1hdGgucG93KDIsIGV4cG9uZW50KTtcclxuXHJcbiAgICAgICAgY29uc3QgY29zdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlclVwZ3JhZGVDb3N0KHNlcnZlck5hbWUsIHRvdGFsUmVxdWlyZWRSYW0pO1xyXG5cclxuICAgICAgICBpZiAoY29zdCA+IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFwiaG9tZVwiKSkge1xyXG4gICAgICAgICAgICBucy5wcmludChcclxuICAgICAgICAgICAgICAgIENvbG9ycy5SRUQgKyBcIltzZXJ2ZXIgTWFuYWdlcl0gYXR0ZW1wdGVkIHRvIHVwZ3JhZGUgU2VydmVyLCBidXQgdGhlIHBsYXllciBkb2VzIG5vdCBoYXZlIGVub3VnaCBtb25leVwiLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIW5zLnVwZ3JhZGVQdXJjaGFzZWRTZXJ2ZXIoc2VydmVyTmFtZSwgdG90YWxSZXF1aXJlZFJhbSkpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLlJFRCArIFwiW3NlcnZlciBNYW5hZ2VyXSBhdHRlbXB0ZWQgdG8gdXBncmFkZSBTZXJ2ZXIsIGJ1dCB0aGUgdXBncmFkZSBmYWlsZWRcIik7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBVcGdyYWRlcyBhbiBleGlzdGluZyBzZXJ2ZXIgdG8gbWVldCB0aGUgZGVzaXJlZCBSQU0gcmVxdWlyZW1lbnQsIHRoYXQgaXMgY2hlYXBlc3QgdG8gdXBncmFkZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbnMgLSBUaGUgTmV0U2NyaXB0SlMgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIGRlc2lyZWRSYW0gLSBIb3cgbXVjaCBSQU0gbmVlZHMgdGhlIHNlcnZlciBhdCBsZWFzdC5cclxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHNlcnZlciB0byB1cGdyYWRlLlxyXG4gICAgICogQHJldHVybnMgVGhlIG5hbWUgb2YgdGhlIHVwZ3JhZGVkIHNlcnZlciwgb3IgYW4gZW1wdHkgc3RyaW5nIGlmIHRoZSB1cGdyYWRlIGZhaWxlZC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdldEJlc3RTZXJ2ZXJUb1VwZ3JhZGUobnM6IE5TLCBkZXNpcmVkUmFtOiBudW1iZXIsIG5hbWU6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHB1cmNoYXNlZFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCkuZmlsdGVyKChzZXJ2ZXIpID0+IHNlcnZlci5pbmNsdWRlcyhuYW1lKSk7XHJcblxyXG4gICAgICAgIGxldCBtaW5VcGdyYWRlQ29zdCA9IE51bWJlci5NQVhfVkFMVUU7XHJcbiAgICAgICAgbGV0IHNlcnZlclRvVXBncmFkZSA9IFwiXCI7XHJcblxyXG4gICAgICAgIGxldCB0b3RhbFJlcXVpcmVkUmFtID0gMDtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwdXJjaGFzZWRTZXJ2ZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlcnZlciA9IHB1cmNoYXNlZFNlcnZlcnNbaV07XHJcblxyXG4gICAgICAgICAgICBjb25zdCBzZXJ2ZXJNYXhSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyKTtcclxuICAgICAgICAgICAgdG90YWxSZXF1aXJlZFJhbSA9IGRlc2lyZWRSYW0gKyBzZXJ2ZXJNYXhSYW07XHJcblxyXG4gICAgICAgICAgICBjb25zdCBleHBvbmVudCA9IE1hdGguY2VpbChNYXRoLmxvZzIodG90YWxSZXF1aXJlZFJhbSkpO1xyXG4gICAgICAgICAgICB0b3RhbFJlcXVpcmVkUmFtID0gTWF0aC5wb3coMiwgZXhwb25lbnQpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgY29zdCA9IG5zLmdldFB1cmNoYXNlZFNlcnZlclVwZ3JhZGVDb3N0KHNlcnZlciwgdG90YWxSZXF1aXJlZFJhbSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY29zdCA8IG1pblVwZ3JhZGVDb3N0KSB7XHJcbiAgICAgICAgICAgICAgICBtaW5VcGdyYWRlQ29zdCA9IGNvc3Q7XHJcbiAgICAgICAgICAgICAgICBzZXJ2ZXJUb1VwZ3JhZGUgPSBzZXJ2ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbWluVXBncmFkZUNvc3QsXHJcbiAgICAgICAgICAgIHNlcnZlclRvVXBncmFkZSxcclxuICAgICAgICAgICAgdG90YWxSZXF1aXJlZFJhbSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxRQUFRLFNBQVMsa0JBQWtCO0FBR3JDLGFBQU0sY0FBYztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQVl2QixPQUFPLG1CQUFtQixJQUFRLFlBQW9CLFlBQW9CLFNBQXlCO0FBQy9GLFVBQU0sYUFBYSxhQUFhLE1BQU07QUFDdEMsVUFBTSxvQkFBb0IsS0FBSyxjQUFjLElBQUksWUFBWSxVQUFVO0FBRXZFLFFBQUksbUJBQW1CO0FBQ25CLFNBQUcsTUFBTSxPQUFPLFFBQVEsdUNBQXVDLGFBQWEsSUFBSTtBQUNoRixhQUFPO0FBQUEsSUFDWDtBQUVBLFVBQU0sT0FBTyxLQUFLLFVBQVUsSUFBSSxZQUFZLFVBQVU7QUFDdEQsUUFBSSxTQUFTLElBQUk7QUFDYixTQUFHLE1BQU0sT0FBTyxNQUFNLDhDQUE4QztBQUNwRSxhQUFPO0FBQUEsSUFDWDtBQUNBLE9BQUcsTUFBTSxPQUFPLFFBQVEscUNBQXFDLE9BQU8sSUFBSTtBQUN4RSxZQUFRLEVBQUU7QUFDVixXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRUEsT0FBTyxVQUFVLElBQVEsWUFBb0IsWUFBNEI7QUFDckUsVUFBTSx1QkFBdUIsR0FBRyx3QkFBd0I7QUFDeEQsVUFBTSxtQkFBbUIsR0FBRyxvQkFBb0I7QUFDaEQsUUFBSSxpQkFBaUIsVUFBVSxzQkFBc0I7QUFDakQsU0FBRyxNQUFNLE9BQU8sTUFBTSxnRkFBZ0Y7QUFDdEcsYUFBTztBQUFBLElBQ1g7QUFFQSxVQUFNLFdBQVcsS0FBSyxLQUFLLEtBQUssS0FBSyxVQUFVLENBQUM7QUFDaEQsaUJBQWEsS0FBSyxJQUFJLEdBQUcsUUFBUTtBQUVqQyxVQUFNLE9BQU8sR0FBRyx1QkFBdUIsVUFBVTtBQUNqRCxRQUFJLE9BQU8sR0FBRyx3QkFBd0IsTUFBTSxHQUFHO0FBQzNDLFNBQUc7QUFBQSxRQUNDLE9BQU8sTUFDSDtBQUFBLE1BQ1I7QUFDQSxhQUFPO0FBQUEsSUFDWDtBQUVBLFVBQU0sT0FBTyxHQUFHLGVBQWUsWUFBWSxVQUFVO0FBQ3JELGVBQVcsSUFBSSxJQUFJO0FBQ25CLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFQSxPQUFPLGNBQWMsSUFBUSxZQUFvQixZQUE2QjtBQUMxRSxVQUFNLG1CQUFtQixHQUFHLG9CQUFvQjtBQUNoRCxRQUFJLENBQUMsaUJBQWlCLFNBQVMsVUFBVSxHQUFHO0FBQ3hDLFNBQUcsTUFBTSxPQUFPLFNBQVMsNkVBQTZFO0FBQ3RHLGFBQU87QUFBQSxJQUNYO0FBRUEsVUFBTSxlQUFlLEdBQUcsZ0JBQWdCLFVBQVU7QUFDbEQsUUFBSSxtQkFBbUIsYUFBYTtBQUVwQyxVQUFNLFdBQVcsS0FBSyxLQUFLLEtBQUssS0FBSyxnQkFBZ0IsQ0FBQztBQUN0RCx1QkFBbUIsS0FBSyxJQUFJLEdBQUcsUUFBUTtBQUV2QyxVQUFNLE9BQU8sR0FBRyw4QkFBOEIsWUFBWSxnQkFBZ0I7QUFFMUUsUUFBSSxPQUFPLEdBQUcsd0JBQXdCLE1BQU0sR0FBRztBQUMzQyxTQUFHO0FBQUEsUUFDQyxPQUFPLE1BQU07QUFBQSxNQUNqQjtBQUNBLGFBQU87QUFBQSxJQUNYO0FBRUEsUUFBSSxDQUFDLEdBQUcsdUJBQXVCLFlBQVksZ0JBQWdCLEdBQUc7QUFDMUQsU0FBRyxNQUFNLE9BQU8sTUFBTSxzRUFBc0U7QUFDNUYsYUFBTztBQUFBLElBQ1g7QUFDQSxXQUFPO0FBQUEsRUFDWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQVVBLE9BQU8sdUJBQXVCLElBQVEsWUFBb0IsTUFBYztBQUNwRSxVQUFNLG1CQUFtQixHQUFHLG9CQUFvQixFQUFFLE9BQU8sQ0FBQyxXQUFXLE9BQU8sU0FBUyxJQUFJLENBQUM7QUFFMUYsUUFBSSxpQkFBaUIsT0FBTztBQUM1QixRQUFJLGtCQUFrQjtBQUV0QixRQUFJLG1CQUFtQjtBQUV2QixhQUFTLElBQUksR0FBRyxJQUFJLGlCQUFpQixRQUFRLEtBQUs7QUFDOUMsWUFBTSxTQUFTLGlCQUFpQixDQUFDO0FBRWpDLFlBQU0sZUFBZSxHQUFHLGdCQUFnQixNQUFNO0FBQzlDLHlCQUFtQixhQUFhO0FBRWhDLFlBQU0sV0FBVyxLQUFLLEtBQUssS0FBSyxLQUFLLGdCQUFnQixDQUFDO0FBQ3RELHlCQUFtQixLQUFLLElBQUksR0FBRyxRQUFRO0FBRXZDLFlBQU0sT0FBTyxHQUFHLDhCQUE4QixRQUFRLGdCQUFnQjtBQUV0RSxVQUFJLE9BQU8sZ0JBQWdCO0FBQ3ZCLHlCQUFpQjtBQUNqQiwwQkFBa0I7QUFBQSxNQUN0QjtBQUFBLElBQ0o7QUFDQSxXQUFPO0FBQUEsTUFDSDtBQUFBLE1BQ0E7QUFBQSxNQUNBO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFDSjsiLCJuYW1lcyI6W119\",\"filename\":\"parallel/ServerManager.js\",\"server\":\"home\"}}],[\"Time.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export class Time {\\n  static instance;\\n  startTimeMillis = 0;\\n  endTimeMillis = 0;\\n  sleepTimeMillis = 0;\\n  startTime() {\\n    this.sleepTimeMillis = 0;\\n    this.startTimeMillis = Date.now();\\n  }\\n  endTime() {\\n    this.endTimeMillis = Date.now();\\n  }\\n  accumulateSleepTime(time) {\\n    this.sleepTimeMillis += time;\\n  }\\n  getTime(ns) {\\n    const runningTime = this.endTimeMillis - this.startTimeMillis - this.sleepTimeMillis;\\n    ns.write(\\\"timelog.txt\\\", \\\"Time: \\\" + runningTime + \\\"ms\\\\n\\\", \\\"a\\\");\\n    return runningTime;\\n  }\\n  constructor() {\\n  }\\n  static getInstance() {\\n    if (!Time.instance) {\\n      Time.instance = new Time();\\n    }\\n    return Time.instance;\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpbWUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGltZSB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogVGltZTtcclxuXHJcbiAgICBwcml2YXRlIHN0YXJ0VGltZU1pbGxpcyA9IDA7XHJcbiAgICBwcml2YXRlIGVuZFRpbWVNaWxsaXMgPSAwO1xyXG4gICAgcHJpdmF0ZSBzbGVlcFRpbWVNaWxsaXMgPSAwO1xyXG5cclxuICAgIHB1YmxpYyBzdGFydFRpbWUoKSB7XHJcbiAgICAgICAgdGhpcy5zbGVlcFRpbWVNaWxsaXMgPSAwO1xyXG4gICAgICAgIHRoaXMuc3RhcnRUaW1lTWlsbGlzID0gRGF0ZS5ub3coKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZW5kVGltZSgpIHtcclxuICAgICAgICB0aGlzLmVuZFRpbWVNaWxsaXMgPSBEYXRlLm5vdygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhY2N1bXVsYXRlU2xlZXBUaW1lKHRpbWU6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuc2xlZXBUaW1lTWlsbGlzICs9IHRpbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFRpbWUobnM6IE5TKSB7XHJcbiAgICAgICAgY29uc3QgcnVubmluZ1RpbWUgPSB0aGlzLmVuZFRpbWVNaWxsaXMgLSB0aGlzLnN0YXJ0VGltZU1pbGxpcyAtIHRoaXMuc2xlZXBUaW1lTWlsbGlzO1xyXG4gICAgICAgIG5zLndyaXRlKFwidGltZWxvZy50eHRcIiwgXCJUaW1lOiBcIiArIHJ1bm5pbmdUaW1lICsgXCJtc1xcblwiLCBcImFcIik7XHJcbiAgICAgICAgcmV0dXJuIHJ1bm5pbmdUaW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgLy9cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCkge1xyXG4gICAgICAgIGlmICghVGltZS5pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICBUaW1lLmluc3RhbmNlID0gbmV3IFRpbWUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFRpbWUuaW5zdGFuY2U7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFFTyxhQUFNLEtBQUs7QUFBQSxFQUNkLE9BQWU7QUFBQSxFQUVQLGtCQUFrQjtBQUFBLEVBQ2xCLGdCQUFnQjtBQUFBLEVBQ2hCLGtCQUFrQjtBQUFBLEVBRW5CLFlBQVk7QUFDZixTQUFLLGtCQUFrQjtBQUN2QixTQUFLLGtCQUFrQixLQUFLLElBQUk7QUFBQSxFQUNwQztBQUFBLEVBRU8sVUFBVTtBQUNiLFNBQUssZ0JBQWdCLEtBQUssSUFBSTtBQUFBLEVBQ2xDO0FBQUEsRUFFTyxvQkFBb0IsTUFBYztBQUNyQyxTQUFLLG1CQUFtQjtBQUFBLEVBQzVCO0FBQUEsRUFFTyxRQUFRLElBQVE7QUFDbkIsVUFBTSxjQUFjLEtBQUssZ0JBQWdCLEtBQUssa0JBQWtCLEtBQUs7QUFDckUsT0FBRyxNQUFNLGVBQWUsV0FBVyxjQUFjLFFBQVEsR0FBRztBQUM1RCxXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRVEsY0FBYztBQUFBLEVBRXRCO0FBQUEsRUFFQSxPQUFjLGNBQWM7QUFDeEIsUUFBSSxDQUFDLEtBQUssVUFBVTtBQUNoQixXQUFLLFdBQVcsSUFBSSxLQUFLO0FBQUEsSUFDN0I7QUFDQSxXQUFPLEtBQUs7QUFBQSxFQUNoQjtBQUNKOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"Time.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"grow-2\",\"grow-3\",\"hack-3\",\"grow-5\",\"grow-6\",\"grow-7\",\"weak-7\",\"hack-8\",\"grow-8\",\"weak-8\",\"hack-9\",\"grow-9\",\"weak-9\",\"hack-10\",\"grow-10\",\"weak-10\",\"hack-11\",\"grow-11\",\"weak-11\",\"hack-12\",\"grow-12\",\"weak-12\",\"hack-13\",\"aws-1\",\"aws-0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"notes.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"notes.txt\",\"text\":\"grow being 3.2x hacktime and weaken 4x hacktime\\r\\ngrow can not safely be distributed, cause:\\r\\n    multiple instances cant finish at the same time, effect is calculated at the end, \\r\\n    thus if its spread across multiple instances they'll increase security for one another\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nfirstWeakenThreads: 2 // um den hack wieder gut zu machen\\r\\nserverGrowThreads: 589\\r\\nsecondWeakenThreads: 48\\r\\nserverHackThreads: 4492\\r\\n\\r\\nneeds 8754.65GB of RAM and got 9581.7. Running parallel mode on the-hub\\r\\nhackThreshold: 0.55\\r\\n\\r\\nfix:\\r\\ngrow threads conservative calculation by adding the THRESHOLD_STEP on top -> will help when we overshoot the threshold target\\r\\nfirst weak threads now take the security increase if the hack into account\\r\\n\\r\\n\\r\\n\\r\\npredicted threads needed:\\r\\nfirstWeakenThreads: 121\\r\\nserverGrowThreads: 2196\\r\\nsecondWeakenThreads: 176\\r\\nserverHackThreads: 3016\\r\\nneeds 9489.95GB of RAM and got 9581.7. Running parallel mode on the-hub\\r\\nhackThreshold: 0.9\"}}],[\"timelog.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"timelog.txt\",\"text\":\"\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"hackingDeamon.js\",\"offlineExpGained\":19721541.1748362,\"offlineMoneyMade\":11448565100579.676,\"offlineRunningTime\":30299.691,\"onlineExpGained\":9372712.304054994,\"onlineMoneyMade\":325051989317.20874,\"onlineRunningTime\":1123.8100000001186,\"ramUsage\":19.6,\"server\":\"home\",\"scriptKey\":\"hackingDeamon.js*[]\",\"title\":\"hackingDeamon.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"serverStats.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1066.4100000001056,\"ramUsage\":5.1,\"server\":\"home\",\"scriptKey\":\"serverStats.js*[\\\"rho-construction\\\"]\",\"title\":\"serverStats.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":995.4100000000894,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":991.4100000000885,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":983.4100000000867,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":981.4100000000863,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":979.4100000000858,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":977.4100000000853,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":975.4100000000849,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":973.4100000000844,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":971.410000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":478.60999999998137,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":14,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":995.4100000000894,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":253,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":993.410000000089,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":105,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":991.4100000000885,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":983.4100000000867,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":981.4100000000863,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":979.4100000000858,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":977.4100000000853,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":975.4100000000849,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":58,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":973.4100000000844,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.691,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":971.410000000084,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.692,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":981.4100000000863,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.692,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":979.4100000000858,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.692,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":977.4100000000853,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.692,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":975.4100000000849,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.692,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":975.4100000000849,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"38.4.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":44988534032,\"moneyMax\":1124713350800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1119,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"65.9.0.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":51316711592,\"moneyMax\":1282917789800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1215,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"44.0.0.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\".\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":15609322704,\"moneyMax\":390233067600,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1130,\"serverGrowth\":67,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"92.1.4.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":10011959600,\"moneyMax\":250298990000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1117,\"serverGrowth\":75,\"runningScripts\":[]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-1083.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[19,21],[25,26],[19,20],[18,28]],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"71.8.5.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":38779448117,\"moneyMax\":969486202925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1215,\"serverGrowth\":91,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"57.0.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":17324012725,\"moneyMax\":433100318125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1176,\"serverGrowth\":48,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"86.9.4.0\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"helios\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":98,\"hackDifficulty\":98,\"minDifficulty\":33,\"moneyAvailable\":14265360687,\"moneyMax\":356634017175,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":902,\"serverGrowth\":97,\"runningScripts\":[]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"4.0.5.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"fulcrumtech\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":21552421333,\"moneyMax\":538810533325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1166,\"serverGrowth\":79,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"94.5.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"stormtech\",\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":22878581011,\"moneyMax\":571964525275,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":972,\"serverGrowth\":99,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"31.8.9.3\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"microdyne\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":1508377433,\"moneyMax\":37709435825,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1239,\"serverGrowth\":84,\"runningScripts\":[]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"65.4.8.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1535,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-917779.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[9,[[1,6],[0,7],[3,8],[0,8],[2,7],[3,8],[3,4],[1,7],[5,7]]],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"42.2.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"microdyne\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":1160194643,\"moneyMax\":29004866075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":951,\"serverGrowth\":73,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"31.0.6.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":906157755,\"moneyMax\":22653943875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":975,\"serverGrowth\":49,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"96.2.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":617409036,\"moneyMax\":15435225900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":928,\"serverGrowth\":54,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-828859.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a())(\",\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"56.3.9.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":684168293,\"moneyMax\":17104207325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":855,\"serverGrowth\":78,\"runningScripts\":[]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"84.9.1.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":704109955,\"moneyMax\":17602748875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":776,\"serverGrowth\":77,\"runningScripts\":[]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"31.5.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":981174347,\"moneyMax\":24529358675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":886,\"serverGrowth\":88,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-556089.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,1,4,8,1,0,0,0,7,5,2,0,4,0],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"51.0.8.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"infocomm\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":1156656602,\"moneyMax\":28916415050,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":869,\"serverGrowth\":88,\"runningScripts\":[]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"79.0.6.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":858129400,\"moneyMax\":21453235000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":867,\"serverGrowth\":71,\"runningScripts\":[]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"78.0.2.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\",\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":519032838,\"moneyMax\":12975820950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":861,\"serverGrowth\":82,\"runningScripts\":[]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"83.3.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":811978440,\"moneyMax\":20299461000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":866,\"serverGrowth\":73,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"57.0.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aevum-police\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":839554917,\"moneyMax\":20988872925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":837,\"serverGrowth\":72,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-325625.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((a)))(()())a()(a(\",\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-316086-BitRunners.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"CT3T3TVKNbKCExNAHEAHEAHEAHE1mUjRIWNzpDn67NzpTDnMRJgpTDnMReLums\",\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"24.8.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aevum-police\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":1175109583,\"moneyMax\":29377739575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":922,\"serverGrowth\":56,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"22.0.0.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":938907089,\"moneyMax\":23472677225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":863,\"serverGrowth\":61,\"runningScripts\":[]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-92005.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0],[0,0,0,0,0],[1,0,0,0,0],[0,1,0,0,0],[1,0,0,0,0],[0,0,1,0,0]],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-411550.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"6vVr46a651j964kLep159P5jefHKiO09cnNoATUsk09WRr2kxo22771Y629VlQi6t1m7676uDJZzv52\",\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"28.0.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"defcomm\",\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":903109492,\"moneyMax\":22577737300,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":803,\"serverGrowth\":65,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-316356.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-2,2,-2,3,10,-9,9,1,-2,-10,3,-5,10,5,-10,-2,3,-5,-1,7,8,-9,-1,-2,1,1,5,0,6,-7,9,9,-5,-3,-6],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"96.4.7.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nova-med\",\"helios\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":912585092,\"moneyMax\":22814627300,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":841,\"serverGrowth\":70,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"18.7.8.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":863270836,\"moneyMax\":21581770900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":782,\"serverGrowth\":70,\"runningScripts\":[]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-226801.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,7,0,5,0,5,0,7,1,0,0,4,2],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"65.1.9.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":1441573303,\"moneyMax\":36039332575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":837,\"serverGrowth\":58,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"47.7.4.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aevum-police\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1624079977,\"moneyMax\":40601999425,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":781,\"serverGrowth\":83,\"runningScripts\":[]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"95.4.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":1145155225,\"moneyMax\":28628880625,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":837,\"serverGrowth\":68,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"39.0.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1490950821,\"moneyMax\":37273770525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":830,\"serverGrowth\":74,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"20.7.1.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"galactic-cyber\",\"icarus\",\"solaris\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":1016954160,\"moneyMax\":25423854000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":820,\"serverGrowth\":70,\"runningScripts\":[]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"27.2.2.7\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":769855372,\"moneyMax\":19246384300,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":741,\"serverGrowth\":64,\"runningScripts\":[]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-259195-NiteSec.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[14,4],\"reward\":{\"type\":0,\"name\":\"NiteSec\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"45.8.9.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"rho-construction\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"rho-construction\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"rho-construction\"}}]]},\"serversOnNetwork\":[\"zb-institute\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":19.684,\"minDifficulty\":18,\"moneyAvailable\":532388294.40880203,\"moneyMax\":14775199675,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":509,\"serverGrowth\":40,\"runningScripts\":[]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"17.1.0.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"alpha-ent\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"alpha-ent\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":607494753,\"moneyMax\":15187368825,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":591,\"serverGrowth\":58,\"runningScripts\":[]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-144335-TheBlackHand.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(((()(a)()((\",\"reward\":{\"type\":0,\"name\":\"The Black Hand\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"25.4.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"aevum-police\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"aevum-police\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"aevum-police\"}}]]},\"serversOnNetwork\":[\"zb-institute\",\"galactic-cyber\",\"aerocorp\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":219748890,\"moneyMax\":5493722250,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":434,\"serverGrowth\":32,\"runningScripts\":[]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-230233.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[79,173,138,40,57,10,199,194,184,80,49,154,128,126,26,136,73,52,138,141,160,23,73,111],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"56.3.0.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"rothman-uni\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"rothman-uni\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"rothman-uni\"}}]]},\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":194837585,\"moneyMax\":4870939625,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":382,\"serverGrowth\":40,\"runningScripts\":[]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-668281.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[94,82,51,173,33,186,197,195,137,148,58,118,198,117,94,164,7,122,160,74,115,195,158,138,89,140,94,143,127,128,4,81,79,124,142,183,32,30],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"97.9.8.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"johnson-ortho\",\"rho-construction\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":850711015,\"moneyMax\":21267775375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":767,\"serverGrowth\":82,\"runningScripts\":[]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"8.2.0.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"summit-uni\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"summit-uni\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"summit-uni\"}}]]},\"serversOnNetwork\":[\"computek\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":49,\"minDifficulty\":16,\"moneyAvailable\":208798187,\"moneyMax\":5219954675,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":453,\"serverGrowth\":59,\"runningScripts\":[]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"68.1.2.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"syscore\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"syscore\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"syscore\"}}]]},\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":558016022,\"moneyMax\":13950400550,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":570,\"serverGrowth\":60,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-649220.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[5,[112,150,76,143,39,119,187,64,74,51]],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"73.5.8.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"catalyst\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"catalyst\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"catalyst\"}}]]},\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":442344812,\"moneyMax\":11058620300,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":437,\"serverGrowth\":27,\"runningScripts\":[]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"50.3.8.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"the-hub\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"the-hub\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"the-hub\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\",\"syscore\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":41,\"hackDifficulty\":100,\"minDifficulty\":14,\"moneyAvailable\":4638294350,\"moneyMax\":4638294350,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":313,\"serverGrowth\":49,\"runningScripts\":[]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":true,\"ip\":\"66.8.3.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"computek\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"computek\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"computek\"}}]]},\"serversOnNetwork\":[\"neo-net\",\"summit-uni\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":239286699,\"moneyMax\":5982167475,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":305,\"serverGrowth\":55,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"43.4.6.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"netlink\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"netlink\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"netlink\"}}]]},\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":417,\"serverGrowth\":71,\"runningScripts\":[]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-857774.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[145,174,154,175,26,147,4,98,48,167,33,86,173,134,115,110,32,139,30,42,37,95,135,149,179,129],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"68.6.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"johnson-ortho\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"johnson-ortho\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"johnson-ortho\"}}]]},\"serversOnNetwork\":[\"phantasy\",\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":73115937,\"moneyMax\":1827898425,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":259,\"serverGrowth\":48,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-482223.cct\",\"type\":\"Encryption I: Caesar Cipher\",\"data\":[\"CLOUD MEDIA VIRUS TRASH EMAIL\",10],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"16.3.1.0\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"n00dles\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"n00dles\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"n00dles\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":70000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"24.9.2.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"foodnstuff\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"foodnstuff\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"foodnstuff\"}}]]},\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":19858715.569963507,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"70.8.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"sigma-cosmetics\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"sigma-cosmetics\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"sigma-cosmetics\"}}]]},\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":2300000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"7.4.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"joesguns\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"joesguns\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"joesguns\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-513319.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"0110100000000001110100010011011010000111101111100100000000001000\",\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"72.7.4.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"zer0\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"zer0\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"zer0\"}}]]},\"serversOnNetwork\":[\"iron-gym\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"85.4.8.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"nectar-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"nectar-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"nectar-net\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\",\"neo-net\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"82.5.3.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"neo-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"neo-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"neo-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"computek\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"14.6.2.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"silver-helix\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"silver-helix\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"CSEC\",\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-944922.cct\",\"type\":\"Total Ways to Sum\",\"data\":32,\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"88.2.8.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hong-fang-tea\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hong-fang-tea\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hong-fang-tea\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":3000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"60.1.3.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"harakiri-sushi\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"harakiri-sushi\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"harakiri-sushi\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":4000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"13.5.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"phantasy\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"phantasy\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"phantasy\"}}]]},\"serversOnNetwork\":[\"zer0\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7,\"minDifficulty\":7,\"moneyAvailable\":600000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"2.5.7.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"max-hardware\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"max-hardware\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"max-hardware\"}}]]},\"serversOnNetwork\":[\"foodnstuff\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":10000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"87.0.5.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"omega-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"omega-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"omega-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":34,\"hackDifficulty\":34,\"minDifficulty\":11,\"moneyAvailable\":68171260,\"moneyMax\":1704281500,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":199,\"serverGrowth\":35,\"runningScripts\":[]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"26.3.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"crush-fitness\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"crush-fitness\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"crush-fitness\"}}]]},\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":35,\"hackDifficulty\":35,\"minDifficulty\":12,\"moneyAvailable\":59842514,\"moneyMax\":1496062850,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":229,\"serverGrowth\":31,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-382127.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":2320283,\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"0.2.1.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"iron-gym\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"iron-gym\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\",\"zer0\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10.000000000000007,\"minDifficulty\":10,\"moneyAvailable\":20000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"38.2.7.2\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"millenium-fitness\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"millenium-fitness\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":500,\"serverGrowth\":34,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.694,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":993.410000000089,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":99,\"temporary\":false}}]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"26.3.8.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":996,\"serverGrowth\":57,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"2.8.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"rho-construction\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":782,\"serverGrowth\":53,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"0.1.2.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"run4theh111z\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"run4theh111z\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"run4theh111z\"}}]]},\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":537,\"serverGrowth\":1,\"runningScripts\":[]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-152776-CyberSec.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((a)a(aaaa)(()()()\",\"reward\":{\"type\":0,\"name\":\"CyberSec\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"49.3.6.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"I.I.I.I\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"I.I.I.I\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"I.I.I.I\"}}]]},\"serversOnNetwork\":[\"computek\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":363,\"serverGrowth\":1,\"runningScripts\":[]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"37.9.6.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"avmnite-02h\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"avmnite-02h\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":204,\"serverGrowth\":1,\"runningScripts\":[]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-140235-AlphaEnterprises.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":895268548,\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"83.9.0.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\".\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\".\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\".\"}}]]},\"serversOnNetwork\":[\"vitalife\",\"b-and-a\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":550,\"serverGrowth\":1,\"runningScripts\":[]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-760801.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"122118173200\",\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"91.9.2.9\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"CSEC\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"CSEC\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"CSEC\"}}]]},\"serversOnNetwork\":[\"iron-gym\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":52,\"serverGrowth\":1,\"runningScripts\":[]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"49.3.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"29.2.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"41.8.5.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-2\",\"httpPortOpen\":true,\"ip\":\"33.8.7.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-2\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-2\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-2\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-3\",\"httpPortOpen\":true,\"ip\":\"62.9.7.8\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-3\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-3\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-3\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"hack-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hack-3\",\"httpPortOpen\":true,\"ip\":\"53.7.4.9\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hack-3\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hack-3\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hack-3\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":478.60999999998137,\"ramUsage\":1.75,\"server\":\"hack-3\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":30,\"temporary\":false}}]}},\"grow-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-5\",\"httpPortOpen\":true,\"ip\":\"14.5.4.3\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-5\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-5\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-5\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-6\",\"httpPortOpen\":true,\"ip\":\"51.2.7.5\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-6\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-6\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-6\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-7\",\"httpPortOpen\":true,\"ip\":\"13.2.3.0\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-7\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-7\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-7\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"weak-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"weak-7\",\"httpPortOpen\":true,\"ip\":\"80.1.7.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"weak-7\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"weak-7\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"weak-7\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"hack-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hack-8\",\"httpPortOpen\":true,\"ip\":\"33.1.2.5\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hack-8\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hack-8\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hack-8\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-8\",\"httpPortOpen\":true,\"ip\":\"46.6.2.9\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-8\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-8\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-8\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"weak-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"weak-8\",\"httpPortOpen\":true,\"ip\":\"38.9.2.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"weak-8\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"weak-8\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"weak-8\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.695,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":989.4100000000881,\"ramUsage\":1.75,\"server\":\"weak-8\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.695,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":989.4100000000881,\"ramUsage\":1.75,\"server\":\"weak-8\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":38,\"temporary\":false}}]}},\"hack-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hack-9\",\"httpPortOpen\":true,\"ip\":\"64.9.0.3\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hack-9\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hack-9\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hack-9\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-9\",\"httpPortOpen\":true,\"ip\":\"55.5.3.5\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-9\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-9\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-9\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"weak-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"weak-9\",\"httpPortOpen\":true,\"ip\":\"58.3.5.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"weak-9\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"weak-9\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"weak-9\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"hack-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hack-10\",\"httpPortOpen\":true,\"ip\":\"47.1.2.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hack-10\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hack-10\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hack-10\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-10\",\"httpPortOpen\":true,\"ip\":\"62.4.0.1\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-10\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-10\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-10\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":478.60999999998137,\"ramUsage\":1.75,\"server\":\"grow-10\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":478.60999999998137,\"ramUsage\":1.75,\"server\":\"grow-10\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":171,\"temporary\":false}}]}},\"weak-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"weak-10\",\"httpPortOpen\":true,\"ip\":\"32.8.8.8\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"weak-10\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"weak-10\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"weak-10\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.695,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":983.4100000000867,\"ramUsage\":1.75,\"server\":\"weak-10\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":7,\"temporary\":false}}]}},\"hack-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hack-11\",\"httpPortOpen\":true,\"ip\":\"24.0.7.2\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hack-11\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hack-11\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hack-11\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-11\",\"httpPortOpen\":true,\"ip\":\"82.4.3.4\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-11\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-11\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-11\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"weak-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"weak-11\",\"httpPortOpen\":true,\"ip\":\"64.7.9.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"weak-11\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"weak-11\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"weak-11\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.695,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":985.4100000000872,\"ramUsage\":1.75,\"server\":\"weak-11\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":1,\"temporary\":false}}]}},\"hack-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hack-12\",\"httpPortOpen\":true,\"ip\":\"38.1.1.3\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hack-12\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hack-12\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hack-12\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"grow-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"grow-12\",\"httpPortOpen\":true,\"ip\":\"6.6.7.5\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"grow-12\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"grow-12\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"grow-12\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":478.60999999998137,\"ramUsage\":1.75,\"server\":\"grow-12\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":191,\"temporary\":false}}]}},\"weak-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"weak-12\",\"httpPortOpen\":true,\"ip\":\"78.6.6.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"weak-12\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"weak-12\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"weak-12\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":993.410000000089,\"ramUsage\":1.75,\"server\":\"weak-12\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":993.410000000089,\"ramUsage\":1.75,\"server\":\"weak-12\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":56,\"temporary\":false}}]}},\"hack-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hack-13\",\"httpPortOpen\":true,\"ip\":\"18.6.3.9\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hack-13\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hack-13\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hack-13\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"aws-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aws-0\",\"httpPortOpen\":true,\"ip\":\"11.7.7.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"aws-0\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"aws-0\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"aws-0\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1025.4100000000963,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1023.4100000000958,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1021.4100000000954,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1019.4100000000949,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1017.4100000000944,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1015.410000000094,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1013.4100000000935,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1011.4100000000931,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1009.4100000000926,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1007.4100000000922,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1005.4100000000917,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1003.4100000000913,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1001.4100000000908,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":999.4100000000903,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":997.4100000000899,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":987.4100000000876,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":985.4100000000872,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":574.8099999999938,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":572.8099999999934,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":570.8099999999929,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":568.8099999999924,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":566.809999999992,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":564.8099999999915,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":562.8099999999911,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":560.8099999999906,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":558.8099999999902,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":556.6099999999897,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":502.60999999998,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":500.6099999999801,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":490.6099999999807,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":488.6099999999808,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":486.4099999999809,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":484.40999999998104,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":482.40999999998115,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":480.40999999998127,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1025.4100000000963,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1023.4100000000958,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1021.4100000000954,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1019.4100000000949,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1017.4100000000944,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1015.410000000094,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1013.4100000000935,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1011.4100000000931,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1009.4100000000926,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1007.4100000000922,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1005.4100000000917,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1003.4100000000913,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1001.4100000000908,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":999.4100000000903,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":997.4100000000899,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":995.4100000000894,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":989.4100000000881,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":84,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":987.4100000000876,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":985.4100000000872,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":975.4100000000849,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":202,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":959.2100000000812,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":147,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":955.2100000000803,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":154,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":951.2100000000794,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":154,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":947.2100000000785,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":155,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":943.2100000000776,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":154,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":939.2100000000767,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":154,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":935.2100000000758,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":154,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":931.2100000000748,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":154,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":574.8099999999938,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":572.8099999999934,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":570.8099999999929,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":568.8099999999924,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":566.809999999992,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":564.8099999999915,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":562.8099999999911,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":560.8099999999906,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":558.8099999999902,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":556.6099999999897,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":534.6099999999847,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":177,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":526.6099999999828,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":219,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":504.6099999999799,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":71,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":502.60999999998,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":500.6099999999801,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":492.6099999999806,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":121,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":490.6099999999807,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":488.6099999999808,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":486.4099999999809,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":484.40999999998104,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":482.40999999998115,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":480.40999999998127,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1023.4100000000958,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1021.4100000000954,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1019.4100000000949,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1017.4100000000944,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1015.410000000094,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1013.4100000000935,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1011.4100000000931,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1009.4100000000926,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1007.4100000000922,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1005.4100000000917,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1003.4100000000913,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1001.4100000000908,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":999.4100000000903,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":997.4100000000899,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":995.4100000000894,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":993.410000000089,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":987.4100000000876,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":985.4100000000872,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":983.4100000000867,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":973.4100000000844,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1025.4100000000963,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1023.4100000000958,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1021.4100000000954,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1019.4100000000949,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1017.4100000000944,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1015.410000000094,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1013.4100000000935,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1011.4100000000931,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1009.4100000000926,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1007.4100000000922,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1005.4100000000917,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1003.4100000000913,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1001.4100000000908,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":999.4100000000903,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":997.4100000000899,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":995.4100000000894,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":993.410000000089,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":991.4100000000885,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":989.4100000000881,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":987.4100000000876,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":985.4100000000872,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":983.4100000000867,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":981.4100000000863,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":979.4100000000858,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":977.4100000000853,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109926.31716097472],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":973.4100000000844,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109926.31716097472]\",\"title\":\"grow.js rho-construction 109926.31716097472\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":971.410000000084,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":969.4100000000835,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":967.4100000000831,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":965.4100000000826,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":963.2100000000821,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":961.2100000000817,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":959.2100000000812,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":957.2100000000808,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":955.2100000000803,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":953.2100000000798,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":951.2100000000794,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":949.2100000000789,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":947.2100000000785,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":945.210000000078,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":943.2100000000776,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":941.2100000000771,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":939.2100000000767,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":937.2100000000762,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":935.2100000000758,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":933.2100000000753,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":931.2100000000748,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":929.2100000000744,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":927.2100000000739,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109765.86801557738],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":925.2100000000735,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109765.86801557738]\",\"title\":\"grow.js rho-construction 109765.86801557738\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":963.2100000000821,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":927.2100000000739,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":925.2100000000735,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":574.8099999999938,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":572.8099999999934,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":570.8099999999929,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":568.8099999999924,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":566.809999999992,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":564.8099999999915,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":562.8099999999911,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":560.8099999999906,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":558.8099999999902,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":574.8099999999938,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":572.8099999999934,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":570.8099999999929,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":568.8099999999924,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":566.809999999992,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":564.8099999999915,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":562.8099999999911,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":560.8099999999906,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":558.8099999999902,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",109128.74925163813],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.696,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":556.6099999999897,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",109128.74925163813]\",\"title\":\"grow.js rho-construction 109128.74925163813\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",119074.4642904693],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":554.6099999999892,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",119074.4642904693]\",\"title\":\"grow.js rho-construction 119074.4642904693\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":552.6099999999888,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":542.6099999999865,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":524.6099999999824,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108970.62880149012],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":548.6099999999878,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108970.62880149012]\",\"title\":\"grow.js rho-construction 108970.62880149012\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":506.6099999999798,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":504.6099999999799,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":502.60999999998,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":494.60999999998046,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":490.6099999999807,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":484.40999999998104,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":482.40999999998115,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":504.6099999999799,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":502.60999999998,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":490.6099999999807,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":484.40999999998104,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":482.40999999998115,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":500.6099999999801,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":492.6099999999806,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":488.6099999999808,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":486.4099999999809,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":480.40999999998127,\"ramUsage\":1.7,\"server\":\"aws-0\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":500.6099999999801,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":498.60999999998023,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":496.60999999998035,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":492.6099999999806,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":488.6099999999808,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":486.4099999999809,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":480.40999999998127,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",117876.74242894945],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":478.60999999998137,\"ramUsage\":1.75,\"server\":\"aws-0\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",117876.74242894945]\",\"title\":\"grow.js rho-construction 117876.74242894945\",\"threads\":4890,\"temporary\":false}}]}},\"aws-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aws-1\",\"httpPortOpen\":true,\"ip\":\"48.4.2.8\",\"isConnectedTo\":false,\"maxRam\":524288,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMuaGFjayhucy5hcmdzWzBdLCB7IGFkZGl0aW9uYWxNc2VjOiBucy5hcmdzWzFdIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"aws-1\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"aws-1\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xuICAgIGlmICh0eXBlb2YgbnMuYXJnc1swXSAhPT0gXCJzdHJpbmdcIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIltXRUFLRU5dIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgYXdhaXQgbnMud2Vha2VuKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"aws-1\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":991.4100000000885,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409848.6893536553],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":989.4100000000881,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409848.6893536553]\",\"title\":\"hack.js rho-construction 409848.6893536553\",\"threads\":842,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":969.4100000000835,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":967.4100000000831,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":965.4100000000826,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":963.2100000000821,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":961.2100000000817,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":959.2100000000812,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":957.2100000000808,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":955.2100000000803,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":953.2100000000798,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":951.2100000000794,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":949.2100000000789,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":947.2100000000785,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":945.210000000078,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":943.2100000000776,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":941.2100000000771,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":939.2100000000767,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":937.2100000000762,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":935.2100000000758,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":933.2100000000753,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":931.2100000000748,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":929.2100000000744,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":927.2100000000739,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":925.2100000000735,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":556.6099999999897,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":25,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":554.6099999999892,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":552.6099999999888,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":550.6099999999883,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":548.6099999999878,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":546.6099999999874,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":544.6099999999869,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":542.6099999999865,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":540.609999999986,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":538.6099999999856,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":536.6099999999851,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":534.6099999999847,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":532.6099999999842,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":530.6099999999838,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":528.6099999999833,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":526.6099999999828,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":524.6099999999824,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":522.6099999999819,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":520.6099999999815,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":518.609999999981,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":516.6099999999806,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":514.6099999999801,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":512.6099999999797,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":510.60999999997955,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":508.60999999997966,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":506.6099999999798,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":504.6099999999799,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":498.60999999998023,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":496.60999999998035,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":494.60999999998046,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":492.6099999999806,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",0]\",\"title\":\"weaken.js rho-construction 0\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":989.4100000000881,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":138,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":969.4100000000835,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":967.4100000000831,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":965.4100000000826,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":963.2100000000821,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":961.2100000000817,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":959.2100000000812,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":113,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":957.2100000000808,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":955.2100000000803,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":953.2100000000798,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":951.2100000000794,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":949.2100000000789,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":947.2100000000785,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":105,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":945.210000000078,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":943.2100000000776,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":941.2100000000771,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":939.2100000000767,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":937.2100000000762,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":935.2100000000758,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":933.2100000000753,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":931.2100000000748,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":929.2100000000744,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":927.2100000000739,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":925.2100000000735,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":554.6099999999892,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":552.6099999999888,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":550.6099999999883,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":548.6099999999878,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":546.6099999999874,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":544.6099999999869,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":542.6099999999865,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":540.609999999986,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":538.6099999999856,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":536.6099999999851,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":534.6099999999847,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":107,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":532.6099999999842,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":530.6099999999838,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":528.6099999999833,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":526.6099999999828,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":65,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":524.6099999999824,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":522.6099999999819,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":520.6099999999815,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":518.609999999981,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":516.6099999999806,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":514.6099999999801,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":512.6099999999797,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":510.60999999997955,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":508.60999999997966,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":506.6099999999798,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":504.6099999999799,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":189,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":498.60999999998023,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":496.60999999998035,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":284,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":494.60999999998046,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1000],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":492.6099999999806,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"weaken.js*[\\\"rho-construction\\\",1000]\",\"title\":\"weaken.js rho-construction 1000\",\"threads\":163,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":971.410000000084,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":969.4100000000835,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":967.4100000000831,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":965.4100000000826,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":961.2100000000817,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":959.2100000000812,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":957.2100000000808,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":955.2100000000803,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":953.2100000000798,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":951.2100000000794,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":949.2100000000789,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":947.2100000000785,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":945.210000000078,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":943.2100000000776,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":941.2100000000771,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":939.2100000000767,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":937.2100000000762,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":935.2100000000758,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":933.2100000000753,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":931.2100000000748,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",409247.0050584153],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":929.2100000000744,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",409247.0050584153]\",\"title\":\"hack.js rho-construction 409247.0050584153\",\"threads\":837,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",550818.9988843444],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":676.4100000000169,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"the-hub\\\",550818.9988843444]\",\"title\":\"hack.js the-hub 550818.9988843444\",\"threads\":439,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406857.80969364324],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":556.6099999999897,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406857.80969364324]\",\"title\":\"hack.js rho-construction 406857.80969364324\",\"threads\":816,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",444154.24108926],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":554.6099999999892,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",444154.24108926]\",\"title\":\"hack.js rho-construction 444154.24108926\",\"threads\":833,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":552.6099999999888,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":546.6099999999874,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":542.6099999999865,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":538.6099999999856,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":536.6099999999851,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":534.6099999999847,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":526.6099999999828,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":524.6099999999824,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",443507.0005636571],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":522.6099999999819,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",443507.0005636571]\",\"title\":\"hack.js rho-construction 443507.0005636571\",\"threads\":828,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406264.85800558835],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":550.6099999999883,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406264.85800558835]\",\"title\":\"hack.js rho-construction 406264.85800558835\",\"threads\":811,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406264.85800558835],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":548.6099999999878,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406264.85800558835]\",\"title\":\"hack.js rho-construction 406264.85800558835\",\"threads\":811,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406264.85800558835],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":544.6099999999869,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406264.85800558835]\",\"title\":\"hack.js rho-construction 406264.85800558835\",\"threads\":811,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406264.85800558835],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":540.609999999986,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406264.85800558835]\",\"title\":\"hack.js rho-construction 406264.85800558835\",\"threads\":811,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406264.85800558835],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":532.6099999999842,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406264.85800558835]\",\"title\":\"hack.js rho-construction 406264.85800558835\",\"threads\":811,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406264.85800558835],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":530.6099999999838,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406264.85800558835]\",\"title\":\"hack.js rho-construction 406264.85800558835\",\"threads\":811,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",406264.85800558835],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":528.6099999999833,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",406264.85800558835]\",\"title\":\"hack.js rho-construction 406264.85800558835\",\"threads\":811,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108970.62880149012],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":550.6099999999883,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108970.62880149012]\",\"title\":\"grow.js rho-construction 108970.62880149012\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108970.62880149012],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":544.6099999999869,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108970.62880149012]\",\"title\":\"grow.js rho-construction 108970.62880149012\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108970.62880149012],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":540.609999999986,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108970.62880149012]\",\"title\":\"grow.js rho-construction 108970.62880149012\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108970.62880149012],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":532.6099999999842,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108970.62880149012]\",\"title\":\"grow.js rho-construction 108970.62880149012\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108970.62880149012],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":530.6099999999838,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108970.62880149012]\",\"title\":\"grow.js rho-construction 108970.62880149012\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108970.62880149012],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":528.6099999999833,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108970.62880149012]\",\"title\":\"grow.js rho-construction 108970.62880149012\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":546.6099999999874,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":538.6099999999856,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":536.6099999999851,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":534.6099999999847,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":526.6099999999828,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118901.86681697523],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":522.6099999999819,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118901.86681697523]\",\"title\":\"grow.js rho-construction 118901.86681697523\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":520.6099999999815,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":514.6099999999801,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":508.60999999997966,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":506.6099999999798,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",405673.6300143013],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":494.60999999998046,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",405673.6300143013]\",\"title\":\"hack.js rho-construction 405673.6300143013\",\"threads\":806,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":520.6099999999815,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":514.6099999999801,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",108812.96800381358],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":508.60999999997966,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",108812.96800381358]\",\"title\":\"grow.js rho-construction 108812.96800381358\",\"threads\":3241,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":518.609999999981,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":516.6099999999806,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":512.6099999999797,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":510.60999999997955,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":498.60999999998023,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",442861.6415512098],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":496.60999999998035,\"ramUsage\":1.7,\"server\":\"aws-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\",442861.6415512098]\",\"title\":\"hack.js rho-construction 442861.6415512098\",\"threads\":822,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":518.609999999981,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":516.6099999999806,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":512.6099999999797,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",118729.77108032256],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":30299.697999999997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":510.60999999997955,\"ramUsage\":1.75,\"server\":\"aws-1\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\",118729.77108032256]\",\"title\":\"grow.js rho-construction 118729.77108032256\",\"threads\":3543,\"temporary\":false}}]}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":45.202952153852245}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"known\",\"playerReputation\":2098.6734244767417}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"known\",\"playerReputation\":3050.137816177907}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"favor\":136.4369,\"discovery\":\"known\",\"playerReputation\":41805.843285335184}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"favor\":81.9073,\"discovery\":\"known\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"known\",\"playerReputation\":2943.367710798808}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"favor\":8.1073,\"discovery\":\"known\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"known\",\"playerReputation\":173466.75220873553}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"favor\":58.6986,\"discovery\":\"known\",\"playerReputation\":19234.266585660178}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":11429.368029293779,\"lastPrice\":11465.603645874562,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.47,\"b\":false,\"otlkMag\":16.778497017459966,\"otlkMagForecast\":34.22996339803365,\"cap\":303402443,\"spreadPerc\":0.5,\"shareTxForMovement\":70830,\"shareTxUntilMovement\":70830,\"totalShares\":137500000,\"maxShares\":27500000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":19078.597774956434,\"lastPrice\":19019.581151188948,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":true,\"otlkMag\":21.86125425843113,\"otlkMagForecast\":68.74035553364085,\"cap\":479880268,\"spreadPerc\":0.1,\"shareTxForMovement\":57537,\"shareTxUntilMovement\":57537,\"totalShares\":92300000,\"maxShares\":18500000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":19805.352153669683,\"lastPrice\":19906.88621109847,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":14.802500300557906,\"otlkMagForecast\":35.59233962609102,\"cap\":86181618,\"spreadPerc\":0.3,\"shareTxForMovement\":51330,\"shareTxUntilMovement\":51330,\"totalShares\":85600000,\"maxShares\":17100000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":19049.040343631365,\"lastPrice\":19132.562565420096,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":11.524321600530584,\"otlkMagForecast\":39.01957920827823,\"cap\":228723382,\"spreadPerc\":0.4,\"shareTxForMovement\":57017,\"shareTxUntilMovement\":57017,\"totalShares\":84600000,\"maxShares\":16900000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":51954.64112004045,\"lastPrice\":51745.21203201473,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":9.71237646634142,\"otlkMagForecast\":60.99795291089568,\"cap\":245309216,\"spreadPerc\":0.5,\"shareTxForMovement\":65755,\"shareTxUntilMovement\":65755,\"totalShares\":46200000,\"maxShares\":9200000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":88337.3873731221,\"lastPrice\":88969.0220955953,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.06,\"b\":true,\"otlkMag\":21.71065859089709,\"otlkMagForecast\":72.14577317803703,\"cap\":925731604,\"spreadPerc\":0.6,\"shareTxForMovement\":64255,\"shareTxUntilMovement\":64255,\"totalShares\":36000000,\"maxShares\":7200000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":15353.794916976049,\"lastPrice\":15274.458582586469,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":13.269398477933876,\"otlkMagForecast\":35.96654899518369,\"cap\":367780694,\"spreadPerc\":0.1,\"shareTxForMovement\":37318,\"shareTxUntilMovement\":37318,\"totalShares\":94800000,\"maxShares\":19000000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":162635.82102562382,\"lastPrice\":164051.03300816953,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.29,\"b\":false,\"otlkMag\":16.699104087670104,\"otlkMagForecast\":31.067306146360856,\"cap\":174013399,\"spreadPerc\":0.3,\"shareTxForMovement\":58129,\"shareTxUntilMovement\":58129,\"totalShares\":57200000,\"maxShares\":11400000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":14309.583932486556,\"lastPrice\":14226.096599763754,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.87,\"b\":true,\"otlkMag\":6.976670943324387,\"otlkMagForecast\":57.60450197476759,\"cap\":56882739,\"spreadPerc\":0.6,\"shareTxForMovement\":71118,\"shareTxUntilMovement\":71118,\"totalShares\":50300000,\"maxShares\":10100000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":7123.772199485013,\"lastPrice\":7091.7211662429345,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":11.801702731603761,\"otlkMagForecast\":60.34835888254509,\"cap\":210419053,\"spreadPerc\":0.2,\"shareTxForMovement\":48918,\"shareTxUntilMovement\":48918,\"totalShares\":66400000,\"maxShares\":13300000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":13503.727906768276,\"lastPrice\":13453.813756609024,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":true,\"otlkMag\":8.676259515297632,\"otlkMagForecast\":58.688132773885464,\"cap\":268280685,\"spreadPerc\":0.4,\"shareTxForMovement\":95068,\"shareTxUntilMovement\":95068,\"totalShares\":70500000,\"maxShares\":14100000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":17972.320288486273,\"lastPrice\":18064.457130393508,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":7.151632511681448,\"otlkMagForecast\":44.71767386753707,\"cap\":168358487,\"spreadPerc\":0.8,\"shareTxForMovement\":48718,\"shareTxUntilMovement\":48718,\"totalShares\":86700000,\"maxShares\":17300000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":22504.66983394118,\"lastPrice\":22610.93385999601,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":7.13392554073825,\"otlkMagForecast\":43.57254384405223,\"cap\":150112750,\"spreadPerc\":0.8,\"shareTxForMovement\":73644,\"shareTxUntilMovement\":73644,\"totalShares\":49200000,\"maxShares\":9800000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":33610.28506263912,\"lastPrice\":33744.0492291773,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":12.276701488808254,\"otlkMagForecast\":62.163501613858145,\"cap\":134751708,\"spreadPerc\":0.7,\"shareTxForMovement\":40089,\"shareTxUntilMovement\":40089,\"totalShares\":49000000,\"maxShares\":9800000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":8474.146168326744,\"lastPrice\":8505.585566252817,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":true,\"otlkMag\":5.884114480493894,\"otlkMagForecast\":55.250273884944235,\"cap\":197340742,\"spreadPerc\":0.6,\"shareTxForMovement\":118181,\"shareTxUntilMovement\":118181,\"totalShares\":64400000,\"maxShares\":12900000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":6288.603783647421,\"lastPrice\":6318.721924617646,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":1.5857112702983693,\"otlkMagForecast\":49.95132566023585,\"cap\":105342239,\"spreadPerc\":0.6,\"shareTxForMovement\":76871,\"shareTxUntilMovement\":76871,\"totalShares\":97700000,\"maxShares\":19500000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":38776.040273293096,\"lastPrice\":38591.21456626709,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":7.541726507807152,\"otlkMagForecast\":58.09076419344342,\"cap\":78610447,\"spreadPerc\":0.9,\"shareTxForMovement\":117208,\"shareTxUntilMovement\":117208,\"totalShares\":25400000,\"maxShares\":5100000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":12134.40299166521,\"lastPrice\":12083.053890937823,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":false,\"otlkMag\":12.474243110257264,\"otlkMagForecast\":38.73344341463983,\"cap\":232095075,\"spreadPerc\":1,\"shareTxForMovement\":69908,\"shareTxUntilMovement\":69908,\"totalShares\":47700000,\"maxShares\":9500000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":14989.302467662801,\"lastPrice\":14916.854645529402,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":false,\"otlkMag\":5.8044180156221685,\"otlkMagForecast\":44.47230933543164,\"cap\":279279092,\"spreadPerc\":0.8,\"shareTxForMovement\":48154,\"shareTxUntilMovement\":48154,\"totalShares\":35700000,\"maxShares\":7100000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":8390.86823438585,\"lastPrice\":8529.540166274324,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.45,\"b\":true,\"otlkMag\":5.436153800935831,\"otlkMagForecast\":55.59987282916915,\"cap\":12544344,\"spreadPerc\":0.6,\"shareTxForMovement\":28189,\"shareTxUntilMovement\":28189,\"totalShares\":79700000,\"maxShares\":15900000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":4231.810718396377,\"lastPrice\":4268.634766129357,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.29,\"b\":false,\"otlkMag\":5.706822068381506,\"otlkMagForecast\":45.135187363199755,\"cap\":102912070,\"spreadPerc\":0.5,\"shareTxForMovement\":103475,\"shareTxUntilMovement\":103475,\"totalShares\":41900000,\"maxShares\":8400000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":3906.6182171868036,\"lastPrice\":3890.6092604305377,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":1.81965500709282,\"otlkMagForecast\":47.00446366522402,\"cap\":93069174,\"spreadPerc\":0.8,\"shareTxForMovement\":115578,\"shareTxUntilMovement\":115578,\"totalShares\":35400000,\"maxShares\":7100000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":7775.054415615292,\"lastPrice\":7866.836320337192,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.75,\"b\":false,\"otlkMag\":8.55519196188929,\"otlkMagForecast\":41.94038735514067,\"cap\":6474316,\"spreadPerc\":1.6,\"shareTxForMovement\":49889,\"shareTxUntilMovement\":49889,\"totalShares\":48600000,\"maxShares\":9700000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":7243.0081596810605,\"lastPrice\":7164.713984559655,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.62,\"b\":true,\"otlkMag\":8.142530339195886,\"otlkMagForecast\":56.67946792096985,\"cap\":17906631,\"spreadPerc\":0.7,\"shareTxForMovement\":89608,\"shareTxUntilMovement\":89608,\"totalShares\":62900000,\"maxShares\":12600000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":4067.1908169116364,\"lastPrice\":4041.2932152043177,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.95,\"b\":true,\"otlkMag\":5.83305120164772,\"otlkMagForecast\":54.57410836856311,\"cap\":34669080,\"spreadPerc\":0.4,\"shareTxForMovement\":61027,\"shareTxUntilMovement\":61027,\"totalShares\":42800000,\"maxShares\":8600000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":13411.058186693117,\"lastPrice\":13605.55705872037,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.15,\"b\":true,\"otlkMag\":6.856946934282001,\"otlkMagForecast\":58.09633460218429,\"cap\":41900788,\"spreadPerc\":1.6,\"shareTxForMovement\":36984,\"shareTxUntilMovement\":36984,\"totalShares\":24500000,\"maxShares\":4900000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":450.22118955715905,\"lastPrice\":453.53149455238946,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.09,\"b\":false,\"otlkMag\":4.298739565459558,\"otlkMagForecast\":49.093433504300414,\"cap\":8858638,\"spreadPerc\":1.2,\"shareTxForMovement\":30099,\"shareTxUntilMovement\":30099,\"totalShares\":41200000,\"maxShares\":8200000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":5977.822220016651,\"lastPrice\":5946.534485001903,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":true,\"otlkMag\":5.857830674098593,\"otlkMagForecast\":55.41833479287468,\"cap\":71532314,\"spreadPerc\":1,\"shareTxForMovement\":119107,\"shareTxUntilMovement\":119107,\"totalShares\":15700000,\"maxShares\":3100000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":4448.6624337218045,\"lastPrice\":4418.262873310442,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.02,\"b\":false,\"otlkMag\":5.399094219470568,\"otlkMagForecast\":48.02250598634586,\"cap\":11176621,\"spreadPerc\":1.3,\"shareTxForMovement\":21154,\"shareTxUntilMovement\":21154,\"totalShares\":20000000,\"maxShares\":4000000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":13.241821654447474,\"lastPrice\":12.980026060491095,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.99,\"b\":false,\"otlkMag\":5.024488922356865,\"otlkMagForecast\":41.14114507411877,\"cap\":22486337,\"spreadPerc\":0.6,\"shareTxForMovement\":51647,\"shareTxUntilMovement\":51647,\"totalShares\":35400000,\"maxShares\":7100000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":145.865312532283,\"lastPrice\":144.452422336479,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.45,\"b\":false,\"otlkMag\":10.329946414667837,\"otlkMagForecast\":35.546367416764504,\"cap\":12094896,\"spreadPerc\":0.8,\"shareTxForMovement\":26322,\"shareTxUntilMovement\":26322,\"totalShares\":184800000,\"maxShares\":37000000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":16405.484449758897,\"lastPrice\":16486.268849054602,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":8.137244629050082,\"otlkMagForecast\":40.773013361510884,\"cap\":336230062,\"spreadPerc\":0.8,\"shareTxForMovement\":167140,\"shareTxUntilMovement\":167140,\"totalShares\":17800000,\"maxShares\":3600000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":34449.49304369557,\"lastPrice\":34319.85006848073,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":true,\"otlkMag\":10.936824411653724,\"otlkMagForecast\":61.782095120852794,\"cap\":425038956,\"spreadPerc\":0.9,\"shareTxForMovement\":126817,\"shareTxUntilMovement\":126817,\"totalShares\":17900000,\"maxShares\":3600000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":150356,\"lastUpdate\":1709195562341,\"ticksUntilCycle\":61}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"EnableHistorySearch\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":500,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":12525,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#DDDFC5\",\"primary\":\"#CDCFB6\",\"primarydark\":\"#9D9F8C\",\"successlight\":\"#00EF00\",\"success\":\"#00A500\",\"successdark\":\"#007A00\",\"errorlight\":\"#F92672\",\"error\":\"#CA1C5C\",\"errordark\":\"#90274A\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#D3D300\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#00010A\",\"white\":\"#fff\",\"black\":\"#020509\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#8CCF27\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#080C11\",\"backgroundsecondary\":\"#03080F\",\"button\":\"#00010A\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"MonacoCursorStyle\":\"line\",\"MonacoCursorBlinking\":\"blink\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"37","AllGangsSave":"","LastExportBonus":"1709125041235","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}