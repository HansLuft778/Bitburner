{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":3745,\"strength\":3,\"defense\":2,\"dexterity\":3,\"agility\":2,\"charisma\":3,\"intelligence\":0},\"exp\":{\"hacking\":8849443598.9638,\"strength\":5.157847605421642,\"defense\":5.157847605421642,\"dexterity\":5.157847605421642,\"agility\":5.157847605421642,\"charisma\":5.157847605421642,\"intelligence\":0},\"mults\":{\"hacking_chance\":2.673903884457833,\"hacking_speed\":2.6158040101725977,\"hacking_money\":8.674854941368524,\"hacking_grow\":4.0541831249945535,\"hacking\":7.02857945929287,\"hacking_exp\":10.364358479167688,\"strength\":2.5576103828537065,\"strength_exp\":2.3444761842825645,\"defense\":2.2240090285684406,\"defense_exp\":2.3444761842825645,\"dexterity\":2.9540399921960314,\"dexterity_exp\":2.3444761842825645,\"agility\":1.9460078999973855,\"agility_exp\":2.3444761842825645,\"charisma\":2.446409931425285,\"charisma_exp\":2.3444761842825645,\"hacknet_node_money\":1.8533408571403671,\"hacknet_node_purchase_cost\":0.5395661548966008,\"hacknet_node_ram_cost\":0.5395661548966008,\"hacknet_node_core_cost\":0.5395661548966008,\"hacknet_node_level_cost\":0.5395661548966008,\"company_rep\":3.0947085632529854,\"faction_rep\":2.3444761842825645,\"work_money\":2.038674942854404,\"crime_success\":1.8533408571403671,\"crime_money\":1.8533408571403671,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":62,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Neuregen Gene Modification\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Augmented Targeting II\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"NEMEAN Subdermal Weave\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"Synthetic Heart\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"Daedalus\",\"BitRunners\",\"The Black Hand\",\"NiteSec\",\"Volhaven\",\"CyberSec\"],\"factionInvitations\":[],\"factionRumors\":{\"ctor\":\"JSONSet\",\"data\":[\"Tetrads\",\"Slum Snakes\",\"Tian Di Hui\"]},\"hacknetNodes\":[],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{},\"karma\":-527.3299999999902,\"numPeopleKilled\":0,\"location\":\"Travel Agency\",\"money\":1389131357564001.2,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":2055926330835833.5,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-871080302445.0293,\"total\":1389131356564001.2,\"work\":0,\"servers\":-664902131382325.8,\"other\":-5306600000,\"augmentations\":-1016455987049.9996}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-4320,\"codingcontract\":0,\"corporation\":0,\"crime\":165053000,\"gang\":0,\"hacking\":2288800093312988,\"hacknet\":13635055.799451966,\"hacknet_expenses\":-128154.50934570104,\"hospitalization\":-5595000,\"infiltration\":0,\"sleeves\":0,\"stock\":-902280302445.0293,\"total\":1469502743302516.5,\"work\":10095.360843708015,\"servers\":-667405572338385.8,\"other\":-31914000000,\"augmentations\":-150957756340335.03}},\"playtimeSinceLastAug\":25991800,\"playtimeSinceLastBitnode\":526298200,\"lastAugReset\":1709293702208,\"lastNodeReset\":-1,\"purchasedServers\":[\"daemon-grow\",\"daemon-hack\",\"daemon-weak\",\"daemon-grow-0\",\"daemon-grow-1\",\"daemon-grow-2\",\"daemon-grow-3\",\"daemon-grow-4\"],\"scriptProdSinceLastAug\":2107720077198307.8,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1708793459067},{\"ID\":\"FROZE\",\"unlockedOn\":1708804573260},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1708819127725},{\"ID\":\"TOR\",\"unlockedOn\":1708819187737},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1708819727725},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1708823028666},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1708823028668},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1708823328667},{\"ID\":\"NITESEC\",\"unlockedOn\":1708889793992},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1708898400757},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1708942188632},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1708946531579},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1708946951570},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1708947071581},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1708979204993},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1709031428692},{\"ID\":\"TRAVEL\",\"unlockedOn\":1709139381830},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1709150990586},{\"ID\":\"4S\",\"unlockedOn\":1709151830586},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1709154050587},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1709215419160},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1709218179165},{\"ID\":\"DONATION\",\"unlockedOn\":1709244468432},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1709295506626}],\"terminalCommandHistory\":[\"free\",\"run serverStats.js n00dles \",\"run bestServer.js \",\"run serverStats.js applied-energetics \",\"run gorg.js \",\"cat gorg.js \",\"run gorg.js \",\"scan-analyze 10\",\"backdoor \",\"home\",\"scan-analyze 10\",\"backdoor \",\"home\",\"run gorg.js \",\"scan\",\"connect daemon-grow\",\"free\",\"home\",\"connect daemon-grow-0\",\"free\",\"home\",\"connect daemon-hack \",\"free\",\"home\",\"mem hackingDeamon.js \",\"connect daemon-grow\",\"free\",\"home\",\"connect daemon-grow\",\"free\",\"home\",\"run lib.js \",\"run serverStats.js \",\"run bestServer.js \",\"run Stock/manager.js \",\"cd Stock/ \",\"ls\",\"cat market.txt \",\"ls\",\"cat market.txt \",\"run manager.js \",\"lss\",\"ls\",\"cd ..\",\"cd Stock/ \",\"cat ma\",\"ls\",\"cat market.txt \",\"nano ma\",\"nano market.txt \"],\"lastUpdate\":1709319694085,\"lastSave\":1709319682293,\"totalPlaytime\":526298200,\"currentWork\":{\"ctor\":\"FactionWork\",\"data\":{\"type\":\"FACTION\",\"singularity\":false,\"cyclesWorked\":120868,\"factionWorkType\":\"hacking\",\"factionName\":\"Daedalus\"}},\"focus\":false,\"entropy\":0,\"identifier\":\"1a1ebb4b422ad0\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":7,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"87.8.7.3\",\"isConnectedTo\":true,\"maxRam\":2097152,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"HTTPWorm.exe\",\"AutoLink.exe\",\"SQLInject.exe\",\"ServerProfiler.exe\",\"DeepscanV1.exe\",\"DeepscanV2.exe\",\"Formulas.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"parallel/growingAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRamOptimized } from \\\"/bestServer.js\\\";\\nimport { Colors } from \\\"/lib.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  growServer(ns, \\\"foodnstuff\\\", 0);\\n}\\nexport function growServer(ns, target, batchId, delay = 0) {\\n  const serverMaxMoney = ns.getServerMaxMoney(target);\\n  const serverCurrentMoney = ns.getServerMoneyAvailable(target);\\n  let moneyMultiplier = serverMaxMoney / serverCurrentMoney;\\n  if (isNaN(moneyMultiplier) || moneyMultiplier == Infinity)\\n    moneyMultiplier = 1;\\n  const totalGrowThreadsNeeded = Math.ceil(ns.growthAnalyze(target, moneyMultiplier));\\n  ns.print(\\\"Actual grow threads needed: \\\" + totalGrowThreadsNeeded);\\n  if (totalGrowThreadsNeeded < 1) {\\n    ns.print(\\\"No grow threads needed, skipping growth process\\\");\\n    return false;\\n  }\\n  const allHosts = getBestHostByRamOptimized(ns);\\n  const growingScriptRam = 1.75;\\n  for (let i = 0; i < allHosts.length; i++) {\\n    const host = allHosts[i];\\n    const maxThreadsOnHost = Math.floor(host.availableRam / growingScriptRam);\\n    if (maxThreadsOnHost >= totalGrowThreadsNeeded) {\\n      ns.exec(\\\"grow.js\\\", host.name, totalGrowThreadsNeeded, target, delay);\\n      return true;\\n    }\\n  }\\n  ns.print(Colors.YELLOW + \\\"No available host to grow \\\" + target + \\\". Attempting to upgrade/buy server...\\\");\\n  const neededGrowRam = totalGrowThreadsNeeded * growingScriptRam;\\n  const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, Config.GROW_SERVER_NAME);\\n  if (server === \\\"\\\") {\\n    ns.tprint(\\\"Error! Could not buy server to grow \\\" + target);\\n    throw new Error(\\\"Error! Could not buy server to grow \\\" + target);\\n  }\\n  ns.exec(\\\"grow.js\\\", server, totalGrowThreadsNeeded, target, delay);\\n  return true;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3dpbmdBbGdvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbmZpZyB9IGZyb20gXCJAL0NvbmZpZy9Db25maWdcIjtcclxuaW1wb3J0IHsgZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZCB9IGZyb20gXCJAL2Jlc3RTZXJ2ZXJcIjtcclxuaW1wb3J0IHsgQ29sb3JzIH0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJNYW5hZ2VyIH0gZnJvbSBcIi4vU2VydmVyTWFuYWdlclwiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBucy50YWlsKCk7XHJcbiAgICBncm93U2VydmVyKG5zLCBcImZvb2Ruc3R1ZmZcIiwgMCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBncm93U2VydmVyKG5zOiBOUywgdGFyZ2V0OiBzdHJpbmcsIGJhdGNoSWQ6IG51bWJlciwgZGVsYXkgPSAwKTogYm9vbGVhbiB7XHJcbiAgICBjb25zdCBzZXJ2ZXJNYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCk7XHJcbiAgICBjb25zdCBzZXJ2ZXJDdXJyZW50TW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpO1xyXG4gICAgbGV0IG1vbmV5TXVsdGlwbGllciA9IHNlcnZlck1heE1vbmV5IC8gc2VydmVyQ3VycmVudE1vbmV5O1xyXG4gICAgaWYgKGlzTmFOKG1vbmV5TXVsdGlwbGllcikgfHwgbW9uZXlNdWx0aXBsaWVyID09IEluZmluaXR5KSBtb25leU11bHRpcGxpZXIgPSAxO1xyXG4gICAgY29uc3QgdG90YWxHcm93VGhyZWFkc05lZWRlZCA9IE1hdGguY2VpbChucy5ncm93dGhBbmFseXplKHRhcmdldCwgbW9uZXlNdWx0aXBsaWVyKSk7XHJcblxyXG4gICAgbnMucHJpbnQoXCJBY3R1YWwgZ3JvdyB0aHJlYWRzIG5lZWRlZDogXCIgKyB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkKTtcclxuXHJcbiAgICBpZiAodG90YWxHcm93VGhyZWFkc05lZWRlZCA8IDEpIHtcclxuICAgICAgICBucy5wcmludChcIk5vIGdyb3cgdGhyZWFkcyBuZWVkZWQsIHNraXBwaW5nIGdyb3d0aCBwcm9jZXNzXCIpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBleGVjIGdyb3cuanMgd2l0aCBudW0gb2YgdGhyZWFkc1xyXG4gICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtT3B0aW1pemVkKG5zKTtcclxuICAgIGNvbnN0IGdyb3dpbmdTY3JpcHRSYW0gPSAxLjc1O1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCBob3N0ID0gYWxsSG9zdHNbaV07XHJcblxyXG4gICAgICAgIGNvbnN0IG1heFRocmVhZHNPbkhvc3QgPSBNYXRoLmZsb29yKGhvc3QuYXZhaWxhYmxlUmFtIC8gZ3Jvd2luZ1NjcmlwdFJhbSk7XHJcblxyXG4gICAgICAgIGlmIChtYXhUaHJlYWRzT25Ib3N0ID49IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQpIHtcclxuICAgICAgICAgICAgbnMuZXhlYyhcImdyb3cuanNcIiwgaG9zdC5uYW1lLCB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkLCB0YXJnZXQsIGRlbGF5KTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5zLnByaW50KENvbG9ycy5ZRUxMT1cgKyBcIk5vIGF2YWlsYWJsZSBob3N0IHRvIGdyb3cgXCIgKyB0YXJnZXQgKyBcIi4gQXR0ZW1wdGluZyB0byB1cGdyYWRlL2J1eSBzZXJ2ZXIuLi5cIik7XHJcblxyXG4gICAgY29uc3QgbmVlZGVkR3Jvd1JhbSA9IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgKiBncm93aW5nU2NyaXB0UmFtO1xyXG4gICAgY29uc3Qgc2VydmVyID0gU2VydmVyTWFuYWdlci5idXlPclVwZ3JhZGVTZXJ2ZXIobnMsIG5lZWRlZEdyb3dSYW0sIENvbmZpZy5HUk9XX1NFUlZFUl9OQU1FKTtcclxuXHJcbiAgICBpZiAoc2VydmVyID09PSBcIlwiKSB7XHJcbiAgICAgICAgbnMudHByaW50KFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIGdyb3cgXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yISBDb3VsZCBub3QgYnV5IHNlcnZlciB0byBncm93IFwiICsgdGFyZ2V0KTtcclxuICAgIH1cclxuXHJcbiAgICBucy5leGVjKFwiZ3Jvdy5qc1wiLCBzZXJ2ZXIsIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQsIHRhcmdldCwgZGVsYXkpO1xyXG5cclxuICAgIHJldHVybiB0cnVlO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxjQUFjO0FBQ3ZCLFNBQVMsaUNBQWlDO0FBQzFDLFNBQVMsY0FBYztBQUV2QixTQUFTLHFCQUFxQjtBQUU5QixzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLEtBQUcsS0FBSztBQUNSLGFBQVcsSUFBSSxjQUFjLENBQUM7QUFDbEM7QUFFTyxnQkFBUyxXQUFXLElBQVEsUUFBZ0IsU0FBaUIsUUFBUSxHQUFZO0FBQ3BGLFFBQU0saUJBQWlCLEdBQUcsa0JBQWtCLE1BQU07QUFDbEQsUUFBTSxxQkFBcUIsR0FBRyx3QkFBd0IsTUFBTTtBQUM1RCxNQUFJLGtCQUFrQixpQkFBaUI7QUFDdkMsTUFBSSxNQUFNLGVBQWUsS0FBSyxtQkFBbUI7QUFBVSxzQkFBa0I7QUFDN0UsUUFBTSx5QkFBeUIsS0FBSyxLQUFLLEdBQUcsY0FBYyxRQUFRLGVBQWUsQ0FBQztBQUVsRixLQUFHLE1BQU0saUNBQWlDLHNCQUFzQjtBQUVoRSxNQUFJLHlCQUF5QixHQUFHO0FBQzVCLE9BQUcsTUFBTSxpREFBaUQ7QUFDMUQsV0FBTztBQUFBLEVBQ1g7QUFHQSxRQUFNLFdBQVcsMEJBQTBCLEVBQUU7QUFDN0MsUUFBTSxtQkFBbUI7QUFFekIsV0FBUyxJQUFJLEdBQUcsSUFBSSxTQUFTLFFBQVEsS0FBSztBQUN0QyxVQUFNLE9BQU8sU0FBUyxDQUFDO0FBRXZCLFVBQU0sbUJBQW1CLEtBQUssTUFBTSxLQUFLLGVBQWUsZ0JBQWdCO0FBRXhFLFFBQUksb0JBQW9CLHdCQUF3QjtBQUM1QyxTQUFHLEtBQUssV0FBVyxLQUFLLE1BQU0sd0JBQXdCLFFBQVEsS0FBSztBQUNuRSxhQUFPO0FBQUEsSUFDWDtBQUFBLEVBQ0o7QUFFQSxLQUFHLE1BQU0sT0FBTyxTQUFTLCtCQUErQixTQUFTLHVDQUF1QztBQUV4RyxRQUFNLGdCQUFnQix5QkFBeUI7QUFDL0MsUUFBTSxTQUFTLGNBQWMsbUJBQW1CLElBQUksZUFBZSxPQUFPLGdCQUFnQjtBQUUxRixNQUFJLFdBQVcsSUFBSTtBQUNmLE9BQUcsT0FBTyx5Q0FBeUMsTUFBTTtBQUN6RCxVQUFNLElBQUksTUFBTSx5Q0FBeUMsTUFBTTtBQUFBLEVBQ25FO0FBRUEsS0FBRyxLQUFLLFdBQVcsUUFBUSx3QkFBd0IsUUFBUSxLQUFLO0FBRWhFLFNBQU87QUFDWDsiLCJuYW1lcyI6W119\",\"filename\":\"parallel/growingAlgo.js\",\"server\":\"home\"}}],[\"parallel/hackingAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRamOptimized } from \\\"/bestServer.js\\\";\\nimport { Colors } from \\\"/lib.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  hackServer(ns, \\\"silver-helix\\\", 0.8, 0);\\n}\\nexport function hackServer(ns, target, threshold, batchId, delay = 0) {\\n  const totalHackThreadsNeeded = Math.ceil(threshold / ns.hackAnalyze(target));\\n  ns.print(\\\"actual hack threads needed: \\\" + totalHackThreadsNeeded);\\n  const allHosts = getBestHostByRamOptimized(ns);\\n  const hackingScriptRam = 1.7;\\n  for (let i = 0; i < allHosts.length; i++) {\\n    const host = allHosts[i];\\n    const maxThreadsOnHost = Math.floor(host.availableRam / hackingScriptRam);\\n    if (maxThreadsOnHost >= totalHackThreadsNeeded) {\\n      ns.exec(\\\"hack.js\\\", host.name, totalHackThreadsNeeded, target, delay);\\n      return true;\\n    }\\n  }\\n  ns.print(Colors.YELLOW + \\\"No available host to grow \\\" + target + \\\". Buying server...\\\");\\n  const neededGrowRam = totalHackThreadsNeeded * hackingScriptRam;\\n  const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, Config.HACK_SERVER_NAME);\\n  if (server === \\\"\\\") {\\n    ns.tprint(\\\"Error! Could not buy server to hack \\\" + target);\\n    throw new Error(\\\"Error! Could not buy server to hack \\\" + target);\\n  }\\n  ns.exec(\\\"hack.js\\\", server, totalHackThreadsNeeded, target, delay);\\n  return true;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2tpbmdBbGdvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbmZpZyB9IGZyb20gXCJAL0NvbmZpZy9Db25maWdcIjtcclxuaW1wb3J0IHsgZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZCB9IGZyb20gXCJAL2Jlc3RTZXJ2ZXJcIjtcclxuaW1wb3J0IHsgQ29sb3JzIH0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJNYW5hZ2VyIH0gZnJvbSBcIi4vU2VydmVyTWFuYWdlclwiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBucy50YWlsKCk7XHJcbiAgICBoYWNrU2VydmVyKG5zLCBcInNpbHZlci1oZWxpeFwiLCAwLjgsIDApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaGFja1NlcnZlcihuczogTlMsIHRhcmdldDogc3RyaW5nLCB0aHJlc2hvbGQ6IG51bWJlciwgYmF0Y2hJZDogbnVtYmVyLCBkZWxheSA9IDApIHtcclxuICAgIGNvbnN0IHRvdGFsSGFja1RocmVhZHNOZWVkZWQgPSBNYXRoLmNlaWwodGhyZXNob2xkIC8gbnMuaGFja0FuYWx5emUodGFyZ2V0KSk7XHJcbiAgICBucy5wcmludChcImFjdHVhbCBoYWNrIHRocmVhZHMgbmVlZGVkOiBcIiArIHRvdGFsSGFja1RocmVhZHNOZWVkZWQpO1xyXG5cclxuICAgIGNvbnN0IGFsbEhvc3RzID0gZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZChucyk7XHJcbiAgICBjb25zdCBoYWNraW5nU2NyaXB0UmFtID0gMS43O1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSG9zdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCBob3N0ID0gYWxsSG9zdHNbaV07XHJcblxyXG4gICAgICAgIGNvbnN0IG1heFRocmVhZHNPbkhvc3QgPSBNYXRoLmZsb29yKGhvc3QuYXZhaWxhYmxlUmFtIC8gaGFja2luZ1NjcmlwdFJhbSk7XHJcblxyXG4gICAgICAgIGlmIChtYXhUaHJlYWRzT25Ib3N0ID49IHRvdGFsSGFja1RocmVhZHNOZWVkZWQpIHtcclxuICAgICAgICAgICAgbnMuZXhlYyhcImhhY2suanNcIiwgaG9zdC5uYW1lLCB0b3RhbEhhY2tUaHJlYWRzTmVlZGVkLCB0YXJnZXQsIGRlbGF5KTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5zLnByaW50KENvbG9ycy5ZRUxMT1cgKyBcIk5vIGF2YWlsYWJsZSBob3N0IHRvIGdyb3cgXCIgKyB0YXJnZXQgKyBcIi4gQnV5aW5nIHNlcnZlci4uLlwiKTtcclxuXHJcbiAgICBjb25zdCBuZWVkZWRHcm93UmFtID0gdG90YWxIYWNrVGhyZWFkc05lZWRlZCAqIGhhY2tpbmdTY3JpcHRSYW07XHJcbiAgICBjb25zdCBzZXJ2ZXIgPSBTZXJ2ZXJNYW5hZ2VyLmJ1eU9yVXBncmFkZVNlcnZlcihucywgbmVlZGVkR3Jvd1JhbSwgQ29uZmlnLkhBQ0tfU0VSVkVSX05BTUUpO1xyXG5cclxuICAgIGlmIChzZXJ2ZXIgPT09IFwiXCIpIHtcclxuICAgICAgICBucy50cHJpbnQoXCJFcnJvciEgQ291bGQgbm90IGJ1eSBzZXJ2ZXIgdG8gaGFjayBcIiArIHRhcmdldCk7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IhIENvdWxkIG5vdCBidXkgc2VydmVyIHRvIGhhY2sgXCIgKyB0YXJnZXQpO1xyXG4gICAgfVxyXG5cclxuICAgIG5zLmV4ZWMoXCJoYWNrLmpzXCIsIHNlcnZlciwgdG90YWxIYWNrVGhyZWFkc05lZWRlZCwgdGFyZ2V0LCBkZWxheSk7XHJcblxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLGNBQWM7QUFDdkIsU0FBUyxpQ0FBaUM7QUFDMUMsU0FBUyxjQUFjO0FBRXZCLFNBQVMscUJBQXFCO0FBRTlCLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsYUFBVyxJQUFJLGdCQUFnQixLQUFLLENBQUM7QUFDekM7QUFFTyxnQkFBUyxXQUFXLElBQVEsUUFBZ0IsV0FBbUIsU0FBaUIsUUFBUSxHQUFHO0FBQzlGLFFBQU0seUJBQXlCLEtBQUssS0FBSyxZQUFZLEdBQUcsWUFBWSxNQUFNLENBQUM7QUFDM0UsS0FBRyxNQUFNLGlDQUFpQyxzQkFBc0I7QUFFaEUsUUFBTSxXQUFXLDBCQUEwQixFQUFFO0FBQzdDLFFBQU0sbUJBQW1CO0FBRXpCLFdBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsVUFBTSxPQUFPLFNBQVMsQ0FBQztBQUV2QixVQUFNLG1CQUFtQixLQUFLLE1BQU0sS0FBSyxlQUFlLGdCQUFnQjtBQUV4RSxRQUFJLG9CQUFvQix3QkFBd0I7QUFDNUMsU0FBRyxLQUFLLFdBQVcsS0FBSyxNQUFNLHdCQUF3QixRQUFRLEtBQUs7QUFDbkUsYUFBTztBQUFBLElBQ1g7QUFBQSxFQUNKO0FBRUEsS0FBRyxNQUFNLE9BQU8sU0FBUywrQkFBK0IsU0FBUyxvQkFBb0I7QUFFckYsUUFBTSxnQkFBZ0IseUJBQXlCO0FBQy9DLFFBQU0sU0FBUyxjQUFjLG1CQUFtQixJQUFJLGVBQWUsT0FBTyxnQkFBZ0I7QUFFMUYsTUFBSSxXQUFXLElBQUk7QUFDZixPQUFHLE9BQU8seUNBQXlDLE1BQU07QUFDekQsVUFBTSxJQUFJLE1BQU0seUNBQXlDLE1BQU07QUFBQSxFQUNuRTtBQUVBLEtBQUcsS0FBSyxXQUFXLFFBQVEsd0JBQXdCLFFBQVEsS0FBSztBQUVoRSxTQUFPO0FBQ1g7IiwibmFtZXMiOltdfQ==\",\"filename\":\"parallel/hackingAlgo.js\",\"server\":\"home\"}}],[\"parallel/manager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestServer } from \\\"/bestServer.js\\\";\\nimport { Colors, getTimeH } from \\\"/lib.js\\\";\\nimport { printServerStats } from \\\"/serverStats.js\\\";\\nimport { WGHAlgorithms } from \\\"/parallel/WGHAlgorithms.js\\\";\\nimport { growServer } from \\\"/parallel/growingAlgo.js\\\";\\nimport { hackServer } from \\\"/parallel/hackingAlgo.js\\\";\\nimport { weakenServer } from \\\"/parallel/weakenAlgo.js\\\";\\nconst DELAY_MARGIN_MS = Config.DELAY_MARGIN_MS;\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const target = getBestServer(ns);\\n    await parallelCycle(ns, target, 0.8);\\n  }\\n}\\nexport async function parallelCycle(ns, target, hackThreshold = 0.8, num_batches = 1) {\\n  const weakTime = ns.getWeakenTime(target);\\n  const growTime = ns.getGrowTime(target);\\n  const hackTime = ns.getHackTime(target);\\n  if (num_batches > 1) {\\n    ns.print(Colors.CYAN + \\\"------------ MULTI BATCH MODE ------------\\\");\\n    num_batches = Math.floor((weakTime - Config.LOOP_SAFETY_MARGIN_MS) / (4 * DELAY_MARGIN_MS));\\n    ns.tprint(Colors.E_ORANGE + \\\"num_batches: \\\" + num_batches);\\n    for (let batchId = 0; batchId < num_batches; batchId++) {\\n      ns.print(Colors.CYAN + \\\"------------ BATCH \\\" + batchId + \\\" ------------\\\");\\n      const start = window.performance.now();\\n      const pids = [];\\n      const hackDelay = weakTime - hackTime - DELAY_MARGIN_MS;\\n      const hackPid = WGHAlgorithms.hackServer(ns, target, hackThreshold, true, hackDelay);\\n      pids.push(hackPid);\\n      const weak1Pid = WGHAlgorithms.weakenServer(ns, target, 1, true);\\n      pids.push(weak1Pid);\\n      const growDelay = weakTime - growTime + DELAY_MARGIN_MS;\\n      const growPid = WGHAlgorithms.growServer(ns, target, true, growDelay);\\n      pids.push(growPid);\\n      const weak2delay = 2 * DELAY_MARGIN_MS;\\n      const weak2Pid = WGHAlgorithms.weakenServer(ns, target, 2, true, weak2delay);\\n      pids.push(weak2Pid);\\n      if (weak1Pid == 0 || weak2Pid == 0 || growPid == 0 || hackPid == 0) {\\n        ns.print(Colors.RED + \\\"could not start all processes, killing batch\\\" + batchId);\\n        for (const pid of pids) {\\n          const success = ns.kill(pid);\\n          if (!success)\\n            throw new Error(\\\"could not kill all processes\\\");\\n        }\\n        break;\\n      }\\n      ns.print(Colors.GREEN + \\\"Cycle done. Beginning new cycle..\\\" + Colors.RESET);\\n      const end = window.performance.now();\\n      ns.print(Colors.GREEN + \\\"Cycle took: \\\" + (end - start) + \\\"ms\\\" + Colors.RESET);\\n      await ns.sleep(4 * DELAY_MARGIN_MS);\\n    }\\n    const sleepTime = weakTime;\\n    await ns.sleep(sleepTime);\\n  } else {\\n    ns.print(Colors.CYAN + \\\"------------ SINGLE BATCH MODE ------------\\\");\\n    const weakTime2 = ns.getWeakenTime(target);\\n    const growTime2 = ns.getGrowTime(target);\\n    const hackTime2 = ns.getHackTime(target);\\n    ns.print(\\\"Attempting to start Weak I at \\\" + getTimeH());\\n    const weak1Dispatched = weakenServer(ns, target, 1, 0);\\n    let weak2StartTime = 0;\\n    if (weak1Dispatched == true) {\\n      weak2StartTime = 2 * DELAY_MARGIN_MS;\\n      await ns.sleep(weak2StartTime);\\n    }\\n    ns.print(\\\"Attempting to start Weak II at \\\" + getTimeH());\\n    const weak2Dispatched = weakenServer(ns, target, 2, 0);\\n    let growStartTime = 0;\\n    if (weak2Dispatched == true) {\\n      growStartTime = weakTime2 + DELAY_MARGIN_MS - growTime2;\\n      const growDelay = growStartTime - weak2StartTime;\\n      await ns.sleep(growDelay);\\n    }\\n    ns.print(\\\"Attempting to start Grow at \\\" + getTimeH());\\n    const growDispatched = growServer(ns, target, 0);\\n    if (weak1Dispatched == true && weak2Dispatched == false && growDispatched == false) {\\n      ns.print(\\n        Colors.YELLOW + \\\"Weak 2 was skipped. Did the last hack attempt fail?\\\\nHacking is about to start earlier than planned.\\\" + Colors.RESET\\n      );\\n      const hackStartTime = weakTime2 + DELAY_MARGIN_MS - hackTime2;\\n      await ns.sleep(hackStartTime);\\n      ns.print(\\\"Attempting to start Hack at \\\" + getTimeH());\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime2 + DELAY_MARGIN_MS);\\n    } else if (weak1Dispatched == false && weak2Dispatched == false && growDispatched == false) {\\n      ns.print(Colors.YELLOW + \\\"Weak 1 and Weak 2 were skipped? Hacking now. \\\" + getTimeH() + Colors.RESET);\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime2 + DELAY_MARGIN_MS);\\n    } else if (weak1Dispatched == true && growDispatched == true && weak2Dispatched == true) {\\n      ns.print(Colors.GREEN + \\\"Hack is about to start as expected\\\" + Colors.RESET);\\n      const hackStartTime = weakTime2 + 3 * DELAY_MARGIN_MS - hackTime2;\\n      const hackDelayDiff = hackStartTime - growStartTime;\\n      await ns.sleep(hackDelayDiff);\\n      ns.print(\\\"Attempting to start Hack at \\\" + getTimeH());\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime2 + DELAY_MARGIN_MS);\\n    } else if (weak1Dispatched == false && weak2Dispatched == true && growDispatched == true) {\\n      ns.print(\\n        Colors.YELLOW + \\\"Weak 1 was skipped. Perhaps the server is already at the min sec lvl.\\\" + Colors.RESET\\n      );\\n      const hackStartTime = weakTime2 + 2 * DELAY_MARGIN_MS - hackTime2;\\n      await ns.sleep(hackStartTime - growStartTime);\\n      ns.print(\\\"Attempting to start Hack at \\\" + getTimeH());\\n      hackServer(ns, target, hackThreshold, 0);\\n      await ns.sleep(hackTime2 + DELAY_MARGIN_MS);\\n    } else {\\n      ns.print(Colors.RED + \\\"could not start hack!\\\" + Colors.RESET);\\n      ns.print(\\n        \\\"weak1Dispatched: \\\" + weak1Dispatched + \\\" | weak2Dispatched: \\\" + weak2Dispatched + \\\" | growDispatched: \\\" + growDispatched\\n      );\\n      printServerStats(ns, target, hackThreshold);\\n      return;\\n    }\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiQC9Db25maWcvQ29uZmlnLmpzXCI7XHJcbmltcG9ydCB7IGdldEJlc3RTZXJ2ZXIgfSBmcm9tIFwiLi4vYmVzdFNlcnZlci5qc1wiO1xyXG5pbXBvcnQgeyBDb2xvcnMsIGdldFRpbWVIIH0gZnJvbSBcIi4uL2xpYi5qc1wiO1xyXG5pbXBvcnQgeyBwcmludFNlcnZlclN0YXRzIH0gZnJvbSBcIi4uL3NlcnZlclN0YXRzLmpzXCI7XHJcbmltcG9ydCB7IFdHSEFsZ29yaXRobXMgfSBmcm9tIFwiLi9XR0hBbGdvcml0aG1zLmpzXCI7XHJcbmltcG9ydCB7IGdyb3dTZXJ2ZXIgfSBmcm9tIFwiLi9ncm93aW5nQWxnby5qc1wiO1xyXG5pbXBvcnQgeyBoYWNrU2VydmVyIH0gZnJvbSBcIi4vaGFja2luZ0FsZ28uanNcIjtcclxuaW1wb3J0IHsgd2Vha2VuU2VydmVyIH0gZnJvbSBcIi4vd2Vha2VuQWxnby5qc1wiO1xyXG5cclxuY29uc3QgREVMQVlfTUFSR0lOX01TID0gQ29uZmlnLkRFTEFZX01BUkdJTl9NUztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgbnMudGFpbCgpO1xyXG4gICAgbnMuZGlzYWJsZUxvZyhcIkFMTFwiKTtcclxuXHJcbiAgICAvLyB0aW1pbmcgb3JkZXIgKGFsd2F5cyBzYW1lKTogd2Vha2VuID4gZ3JvdyA+IGhhY2tcclxuICAgIC8vIGZvciBub3csIGVhY2ggaGFzIG93biBzZXJ2ZXI6ICAgIGF3cy0wICAgYXdzLSAgICBhd3MtMiAgIGF3cy0zXHJcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWFrICAgIHdlYWsgICAgZ3JvdyAgICBoYWNrXHJcblxyXG4gICAgLy8gc3RlcHM6IFdHV0gtV0dXSC0uLlxyXG4gICAgd2hpbGUgKHRydWUpIHtcclxuICAgICAgICBjb25zdCB0YXJnZXQgPSBnZXRCZXN0U2VydmVyKG5zKTtcclxuICAgICAgICBhd2FpdCBwYXJhbGxlbEN5Y2xlKG5zLCB0YXJnZXQsIDAuOCk7XHJcbiAgICB9XHJcbn1cclxuLy8gbGV0IGN5Y2xlQ291bnRlciA9IDA7XHJcbi8vIGxldCBvZmZzZXQgPSAxO1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGFyYWxsZWxDeWNsZShuczogTlMsIHRhcmdldDogc3RyaW5nLCBoYWNrVGhyZXNob2xkID0gMC44LCBudW1fYmF0Y2hlcyA9IDEpIHtcclxuICAgIC8vIGNvbnN0IHRpbWUgPSBUaW1lLmdldEluc3RhbmNlKCk7XHJcblxyXG4gICAgY29uc3Qgd2Vha1RpbWUgPSBucy5nZXRXZWFrZW5UaW1lKHRhcmdldCk7XHJcbiAgICBjb25zdCBncm93VGltZSA9IG5zLmdldEdyb3dUaW1lKHRhcmdldCk7XHJcbiAgICBjb25zdCBoYWNrVGltZSA9IG5zLmdldEhhY2tUaW1lKHRhcmdldCk7XHJcblxyXG4gICAgaWYgKG51bV9iYXRjaGVzID4gMSkge1xyXG4gICAgICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCItLS0tLS0tLS0tLS0gTVVMVEkgQkFUQ0ggTU9ERSAtLS0tLS0tLS0tLS1cIik7XHJcblxyXG4gICAgICAgIG51bV9iYXRjaGVzID0gTWF0aC5mbG9vcigod2Vha1RpbWUgLSBDb25maWcuTE9PUF9TQUZFVFlfTUFSR0lOX01TKSAvICg0ICogREVMQVlfTUFSR0lOX01TKSk7XHJcblxyXG4gICAgICAgIG5zLnRwcmludChDb2xvcnMuRV9PUkFOR0UgKyBcIm51bV9iYXRjaGVzOiBcIiArIG51bV9iYXRjaGVzKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgYmF0Y2hJZCA9IDA7IGJhdGNoSWQgPCBudW1fYmF0Y2hlczsgYmF0Y2hJZCsrKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCItLS0tLS0tLS0tLS0gQkFUQ0ggXCIgKyBiYXRjaElkICsgXCIgLS0tLS0tLS0tLS0tXCIpO1xyXG5cclxuICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHBpZHMgPSBbXTtcclxuICAgICAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICAgICAgICAgLy8gaGFja2luZ1xyXG4gICAgICAgICAgICBjb25zdCBoYWNrRGVsYXkgPSB3ZWFrVGltZSAtIGhhY2tUaW1lIC0gREVMQVlfTUFSR0lOX01TO1xyXG4gICAgICAgICAgICBjb25zdCBoYWNrUGlkID0gV0dIQWxnb3JpdGhtcy5oYWNrU2VydmVyKG5zLCB0YXJnZXQsIGhhY2tUaHJlc2hvbGQsIHRydWUsIGhhY2tEZWxheSk7XHJcbiAgICAgICAgICAgIHBpZHMucHVzaChoYWNrUGlkKTtcclxuXHJcbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgICAgICAgIC8vIHdlYWsgSVxyXG4gICAgICAgICAgICBjb25zdCB3ZWFrMVBpZCA9IFdHSEFsZ29yaXRobXMud2Vha2VuU2VydmVyKG5zLCB0YXJnZXQsIDEsIHRydWUpO1xyXG4gICAgICAgICAgICBwaWRzLnB1c2god2VhazFQaWQpO1xyXG5cclxuICAgICAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICAgICAgICAgLy8gZ3Jvd1xyXG4gICAgICAgICAgICBjb25zdCBncm93RGVsYXkgPSB3ZWFrVGltZSAtIGdyb3dUaW1lICsgREVMQVlfTUFSR0lOX01TO1xyXG4gICAgICAgICAgICBjb25zdCBncm93UGlkID0gV0dIQWxnb3JpdGhtcy5ncm93U2VydmVyKG5zLCB0YXJnZXQsIHRydWUsIGdyb3dEZWxheSk7XHJcbiAgICAgICAgICAgIHBpZHMucHVzaChncm93UGlkKTtcclxuXHJcbiAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgICAgICAgIC8vIHdlYWsgSUlcclxuICAgICAgICAgICAgY29uc3Qgd2VhazJkZWxheSA9IDIgKiBERUxBWV9NQVJHSU5fTVM7XHJcbiAgICAgICAgICAgIGNvbnN0IHdlYWsyUGlkID0gV0dIQWxnb3JpdGhtcy53ZWFrZW5TZXJ2ZXIobnMsIHRhcmdldCwgMiwgdHJ1ZSwgd2VhazJkZWxheSk7XHJcbiAgICAgICAgICAgIHBpZHMucHVzaCh3ZWFrMlBpZCk7XHJcblxyXG4gICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICAgICAgICAvLyBjaGVjayBpZiBhbGwgcHJvY2Vzc2VzIHdlcmUgZGlzcGF0Y2hlZCwga2lsbCB0aGVtIGlmIG5vdFxyXG4gICAgICAgICAgICBpZiAod2VhazFQaWQgPT0gMCB8fCB3ZWFrMlBpZCA9PSAwIHx8IGdyb3dQaWQgPT0gMCB8fCBoYWNrUGlkID09IDApIHtcclxuICAgICAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5SRUQgKyBcImNvdWxkIG5vdCBzdGFydCBhbGwgcHJvY2Vzc2VzLCBraWxsaW5nIGJhdGNoXCIgKyBiYXRjaElkKTtcclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHBpZCBvZiBwaWRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3VjY2VzcyA9IG5zLmtpbGwocGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXN1Y2Nlc3MpIHRocm93IG5ldyBFcnJvcihcImNvdWxkIG5vdCBraWxsIGFsbCBwcm9jZXNzZXNcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJDeWNsZSBkb25lLiBCZWdpbm5pbmcgbmV3IGN5Y2xlLi5cIiArIENvbG9ycy5SRVNFVCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGVuZCA9IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKTtcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJDeWNsZSB0b29rOiBcIiArIChlbmQgLSBzdGFydCkgKyBcIm1zXCIgKyBDb2xvcnMuUkVTRVQpO1xyXG5cclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoNCAqIERFTEFZX01BUkdJTl9NUyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHdoYXRzIGhhcHBlbmluZyBoZXJlIGlzIGEgbGl0dGxlIGhhcmQgdG8gZXhwbGFpbiBidXQgaWxsIHRyeSBteSBiZXN0OlxyXG4gICAgICAgIC8vIGJhdGNoRGVwbG95VGltZSBzaG91bGQgYmUgb2J2aW91cywgaXQgaXMgdGhlIHRpbWUgaXQgdG9vayB0byBkZXBsb3kgYWxsIGJhdGNoZXNcclxuICAgICAgICAvLyBzbGVlcFRpbWUgaXMgdGhlIHRpbWUgd2Ugd2FpdCwgdW50aWwgdGhlIG5leHQgYmF0Y2hlcyBjYW4gYmUgZGVwbG95ZWRcclxuICAgICAgICAvLyBvZmZzZXQ6XHJcbiAgICAgICAgLy8gaW1hZ2luZSB0aGUgc2NlbmFyaW86IGZpcnN0IGJhdGNoIGlzIGRlcGxveWVkLCB0aGVuIHdlIHdhaXQgZm9yIHRoZSBuZXh0IGJhdGNoIHRvIGJlIGRlcGxveWVkLlxyXG4gICAgICAgIC8vIFdoZW4gdGhlIGZpcnN0IGJhdGNoIGZpbmlzaGVzLCB3ZSBjYW4gUkFNIGZyZWVkIHVwLCBzbyBzbyB0aGlzIGlzIHRoZSB0aW1lIHdlIGNhbiBzYXZlbHlcclxuICAgICAgICAvLyBkZXBsb3kgdGhlIG5leHQgYmF0Y2guXHJcbiAgICAgICAgLy8gcHJvYmxlbSBpcywgd2hlbiB3ZSBqdXN0IHdhaXQgREVMQVlfTUFSR0lOX01TIGxvbmcsIHdlIHN0YXJ0IHRvIGRlcGxveSB0aGUgbmV4dCBiYXRjaCBpbiBhbG1vc3RcclxuICAgICAgICAvLyB0aGUgZXhhY3QgbW9tZW50IHdoZW4gdGhlIGZpcnN0IGJhdGNoIGZpbmlzaGVzLiBUaGlzIGlzIGJhZCwgZHVlIHRvIGpzIGFuZCB0aW1pbmdzLlxyXG4gICAgICAgIC8vIEl0IGNhbiBoYXBwZW4sIHRoYXQgdGhlIHNlY29uZCBiYXRjaCBpcyBkZXBsb3llZCwgcmlnaHQgYWZ0ZXIgZ3JvdyBmcm9tIHRoZSBmaXJzdCBiYXRjaCBmaW5pc2hlLFxyXG4gICAgICAgIC8vIG1lYW5pbmcgdGhlcmUgaXMgbm8gbW9uZXkgYW5kIGEgaGlnaCBzZWNsdmwgb24gdGhlIHNlcnZlciwgd2hpY2ggaW5jcmVhc2VkIHRoZSB3ZWFrZW4gdGltZSBvZlxyXG4gICAgICAgIC8vIHRoZSBzZWNvbmQgYmF0Y2gsIHdoaWNoIG1lc3NlcyB1cCBldmVyeXRoaW5nIGluIHRoZSBsb25nIHJ1bi4gVGhhdHMgd2h5IHdlIGFkZCB0aGUgb2Zmc2V0XHJcbiAgICAgICAgLy8gZm9yIGV2ZXJ5IHNlY29uZCBiYXRjaCwgc28gc3RhcnQgdGhlIHNlY29uZCBiYXRjaCBpbiB0aGUgbWlkZGxlIG9mIGZpcnN0IGJhdGNoIGNvbXBsZXRpb25zLlxyXG5cclxuICAgICAgICAvLyBpZiAoY3ljbGVDb3VudGVyICUgMiA9PSAwKSBvZmZzZXQgPSBERUxBWV9NQVJHSU5fTVMgLyAyO1xyXG4gICAgICAgIC8vIGVsc2Ugb2Zmc2V0ID0gMDtcclxuXHJcbiAgICAgICAgLy8gY29uc3QgYmF0Y2hEZXBsb3lUaW1lID0gNCAqIERFTEFZX01BUkdJTl9NUyAqIG51bV9iYXRjaGVzO1xyXG4gICAgICAgIGNvbnN0IHNsZWVwVGltZSA9IHdlYWtUaW1lOyAvLyAtIGJhdGNoRGVwbG95VGltZSArIG9mZnNldDtcclxuXHJcbiAgICAgICAgYXdhaXQgbnMuc2xlZXAoc2xlZXBUaW1lKTtcclxuICAgICAgICAvLyBjeWNsZUNvdW50ZXIrKztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIi0tLS0tLS0tLS0tLSBTSU5HTEUgQkFUQ0ggTU9ERSAtLS0tLS0tLS0tLS1cIik7XHJcbiAgICAgICAgY29uc3Qgd2Vha1RpbWUgPSBucy5nZXRXZWFrZW5UaW1lKHRhcmdldCk7XHJcbiAgICAgICAgY29uc3QgZ3Jvd1RpbWUgPSBucy5nZXRHcm93VGltZSh0YXJnZXQpO1xyXG4gICAgICAgIGNvbnN0IGhhY2tUaW1lID0gbnMuZ2V0SGFja1RpbWUodGFyZ2V0KTtcclxuICAgICAgICAvLyB3ZWFrIElcclxuICAgICAgICBucy5wcmludChcIkF0dGVtcHRpbmcgdG8gc3RhcnQgV2VhayBJIGF0IFwiICsgZ2V0VGltZUgoKSk7XHJcbiAgICAgICAgY29uc3Qgd2VhazFEaXNwYXRjaGVkID0gd2Vha2VuU2VydmVyKG5zLCB0YXJnZXQsIDEsIDApO1xyXG5cclxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICAgIC8vIHdlYWsgSUkgZGVsYXlcclxuXHJcbiAgICAgICAgLy8gaWYgd2VhayBJIHNraXAsIHN0YXJ0IElJIGltbWVkaWF0ZWx5XHJcbiAgICAgICAgbGV0IHdlYWsyU3RhcnRUaW1lID0gMDtcclxuICAgICAgICBpZiAod2VhazFEaXNwYXRjaGVkID09IHRydWUpIHtcclxuICAgICAgICAgICAgLy8gd2VhazJTdGFydFRpbWUgPSB3ZWFrVGltZSArIDIgKiBERUxBWV9NQVJHSU5fTVMgLSB3ZWFrVGltZTtcclxuICAgICAgICAgICAgd2VhazJTdGFydFRpbWUgPSAyICogREVMQVlfTUFSR0lOX01TO1xyXG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcCh3ZWFrMlN0YXJ0VGltZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHdlYWsgSUlcclxuICAgICAgICBucy5wcmludChcIkF0dGVtcHRpbmcgdG8gc3RhcnQgV2VhayBJSSBhdCBcIiArIGdldFRpbWVIKCkpO1xyXG4gICAgICAgIGNvbnN0IHdlYWsyRGlzcGF0Y2hlZCA9IHdlYWtlblNlcnZlcihucywgdGFyZ2V0LCAyLCAwKTtcclxuXHJcbiAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICAgICAvLyBncm93IGRlbGF5XHJcblxyXG4gICAgICAgIGxldCBncm93U3RhcnRUaW1lID0gMDtcclxuICAgICAgICBpZiAod2VhazJEaXNwYXRjaGVkID09IHRydWUpIHtcclxuICAgICAgICAgICAgZ3Jvd1N0YXJ0VGltZSA9IHdlYWtUaW1lICsgREVMQVlfTUFSR0lOX01TIC0gZ3Jvd1RpbWU7XHJcbiAgICAgICAgICAgIGNvbnN0IGdyb3dEZWxheSA9IGdyb3dTdGFydFRpbWUgLSB3ZWFrMlN0YXJ0VGltZTtcclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoZ3Jvd0RlbGF5KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIGdyb3dcclxuICAgICAgICBucy5wcmludChcIkF0dGVtcHRpbmcgdG8gc3RhcnQgR3JvdyBhdCBcIiArIGdldFRpbWVIKCkpO1xyXG4gICAgICAgIGNvbnN0IGdyb3dEaXNwYXRjaGVkID0gZ3Jvd1NlcnZlcihucywgdGFyZ2V0LCAwKTtcclxuXHJcbiAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICAgICAvLyBoYWNraW5nXHJcblxyXG4gICAgICAgIC8vIGhhY2tpbmcgc3RhcnQgbG9naWMsIGZvciBmdXJ0aGVyIHRpbWUgb3B0aW1pemF0aW9uc1xyXG4gICAgICAgIC8vIG5vdGU6IHdoZW4gd2VhazIgZmFpbHMsIHRoZSBncm93IG11c3QgYWxzbyBmYWlsIChhbmQgdmljZSB2ZXJzYTogd2hlbiBncm93IGZhaWxzLCB3ZWFrMiBzaG91bGQgbm90IGhhdmUgc3RhcnRlZClcclxuICAgICAgICBpZiAod2VhazFEaXNwYXRjaGVkID09IHRydWUgJiYgd2VhazJEaXNwYXRjaGVkID09IGZhbHNlICYmIGdyb3dEaXNwYXRjaGVkID09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIC8vIHNjZW5hcmlvOiB3ZWFrMSB3b3JrcywgcmVzdCBza2lwXHJcbiAgICAgICAgICAgIC8vIGhhY2sgZmluaXNoZXMgMSBtYXJnaW4gdW5pdCBhZnRlciB3ZWFrMSBlbmRzXHJcbiAgICAgICAgICAgIG5zLnByaW50KFxyXG4gICAgICAgICAgICAgICAgQ29sb3JzLllFTExPVyArXHJcbiAgICAgICAgICAgICAgICAgICAgXCJXZWFrIDIgd2FzIHNraXBwZWQuIERpZCB0aGUgbGFzdCBoYWNrIGF0dGVtcHQgZmFpbD9cXG5IYWNraW5nIGlzIGFib3V0IHRvIHN0YXJ0IGVhcmxpZXIgdGhhbiBwbGFubmVkLlwiICtcclxuICAgICAgICAgICAgICAgICAgICBDb2xvcnMuUkVTRVQsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIGNvbnN0IGhhY2tTdGFydFRpbWUgPSB3ZWFrVGltZSArIERFTEFZX01BUkdJTl9NUyAtIGhhY2tUaW1lO1xyXG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcChoYWNrU3RhcnRUaW1lKTtcclxuICAgICAgICAgICAgbnMucHJpbnQoXCJBdHRlbXB0aW5nIHRvIHN0YXJ0IEhhY2sgYXQgXCIgKyBnZXRUaW1lSCgpKTtcclxuICAgICAgICAgICAgaGFja1NlcnZlcihucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkLCAwKTtcclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoaGFja1RpbWUgKyBERUxBWV9NQVJHSU5fTVMpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAod2VhazFEaXNwYXRjaGVkID09IGZhbHNlICYmIHdlYWsyRGlzcGF0Y2hlZCA9PSBmYWxzZSAmJiBncm93RGlzcGF0Y2hlZCA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAvLyBzY2VuYXJpbzogd2VhazEgYW5kIHdlYWsyIHNraXBwZWRcclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLllFTExPVyArIFwiV2VhayAxIGFuZCBXZWFrIDIgd2VyZSBza2lwcGVkPyBIYWNraW5nIG5vdy4gXCIgKyBnZXRUaW1lSCgpICsgQ29sb3JzLlJFU0VUKTtcclxuICAgICAgICAgICAgaGFja1NlcnZlcihucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkLCAwKTtcclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoaGFja1RpbWUgKyBERUxBWV9NQVJHSU5fTVMpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAod2VhazFEaXNwYXRjaGVkID09IHRydWUgJiYgZ3Jvd0Rpc3BhdGNoZWQgPT0gdHJ1ZSAmJiB3ZWFrMkRpc3BhdGNoZWQgPT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICAvLyBoYWNrIG5vcm1hbFxyXG4gICAgICAgICAgICBucy5wcmludChDb2xvcnMuR1JFRU4gKyBcIkhhY2sgaXMgYWJvdXQgdG8gc3RhcnQgYXMgZXhwZWN0ZWRcIiArIENvbG9ycy5SRVNFVCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGhhY2tTdGFydFRpbWUgPSB3ZWFrVGltZSArIDMgKiBERUxBWV9NQVJHSU5fTVMgLSBoYWNrVGltZTtcclxuICAgICAgICAgICAgY29uc3QgaGFja0RlbGF5RGlmZiA9IGhhY2tTdGFydFRpbWUgLSBncm93U3RhcnRUaW1lO1xyXG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcChoYWNrRGVsYXlEaWZmKTtcclxuICAgICAgICAgICAgbnMucHJpbnQoXCJBdHRlbXB0aW5nIHRvIHN0YXJ0IEhhY2sgYXQgXCIgKyBnZXRUaW1lSCgpKTtcclxuICAgICAgICAgICAgaGFja1NlcnZlcihucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkLCAwKTtcclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoaGFja1RpbWUgKyBERUxBWV9NQVJHSU5fTVMpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAod2VhazFEaXNwYXRjaGVkID09IGZhbHNlICYmIHdlYWsyRGlzcGF0Y2hlZCA9PSB0cnVlICYmIGdyb3dEaXNwYXRjaGVkID09IHRydWUpIHtcclxuICAgICAgICAgICAgLy8gY2FzZSB3ZWFrMSB3YXMgc2tpcHBlZCwgYnV0IHdlYWsyIGFuZCBncm93IHdlcmUgZGlzcGF0Y2hlZFxyXG5cclxuICAgICAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgICAgICBDb2xvcnMuWUVMTE9XICsgXCJXZWFrIDEgd2FzIHNraXBwZWQuIFBlcmhhcHMgdGhlIHNlcnZlciBpcyBhbHJlYWR5IGF0IHRoZSBtaW4gc2VjIGx2bC5cIiArIENvbG9ycy5SRVNFVCxcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgY29uc3QgaGFja1N0YXJ0VGltZSA9IHdlYWtUaW1lICsgMiAqIERFTEFZX01BUkdJTl9NUyAtIGhhY2tUaW1lO1xyXG4gICAgICAgICAgICBhd2FpdCBucy5zbGVlcChoYWNrU3RhcnRUaW1lIC0gZ3Jvd1N0YXJ0VGltZSk7XHJcbiAgICAgICAgICAgIG5zLnByaW50KFwiQXR0ZW1wdGluZyB0byBzdGFydCBIYWNrIGF0IFwiICsgZ2V0VGltZUgoKSk7XHJcbiAgICAgICAgICAgIGhhY2tTZXJ2ZXIobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCwgMCk7XHJcbiAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKGhhY2tUaW1lICsgREVMQVlfTUFSR0lOX01TKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBucy5wcmludChDb2xvcnMuUkVEICsgXCJjb3VsZCBub3Qgc3RhcnQgaGFjayFcIiArIENvbG9ycy5SRVNFVCk7XHJcbiAgICAgICAgICAgIG5zLnByaW50KFxyXG4gICAgICAgICAgICAgICAgXCJ3ZWFrMURpc3BhdGNoZWQ6IFwiICtcclxuICAgICAgICAgICAgICAgICAgICB3ZWFrMURpc3BhdGNoZWQgK1xyXG4gICAgICAgICAgICAgICAgICAgIFwiIHwgd2VhazJEaXNwYXRjaGVkOiBcIiArXHJcbiAgICAgICAgICAgICAgICAgICAgd2VhazJEaXNwYXRjaGVkICtcclxuICAgICAgICAgICAgICAgICAgICBcIiB8IGdyb3dEaXNwYXRjaGVkOiBcIiArXHJcbiAgICAgICAgICAgICAgICAgICAgZ3Jvd0Rpc3BhdGNoZWQsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHByaW50U2VydmVyU3RhdHMobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gbm90ZXM6XHJcbiB3ZWFrZW4gcmVtb3ZlcyAwLjA1IHNlYyBsdmxcclxuIGdyb3cgYWRkcyAwLjAwNCBzZWMgbHZsXHJcblxyXG4gZ3JvdyBhZGRzIG1vbmV5OlxyXG5cclxuICovXHJcbiJdLCJtYXBwaW5ncyI6IkFBRUEsU0FBUyxjQUFjO0FBQ3ZCLFNBQVMscUJBQXFCO0FBQzlCLFNBQVMsUUFBUSxnQkFBZ0I7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyxxQkFBcUI7QUFDOUIsU0FBUyxrQkFBa0I7QUFDM0IsU0FBUyxrQkFBa0I7QUFDM0IsU0FBUyxvQkFBb0I7QUFFN0IsTUFBTSxrQkFBa0IsT0FBTztBQUUvQixzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLEtBQUcsS0FBSztBQUNSLEtBQUcsV0FBVyxLQUFLO0FBT25CLFNBQU8sTUFBTTtBQUNULFVBQU0sU0FBUyxjQUFjLEVBQUU7QUFDL0IsVUFBTSxjQUFjLElBQUksUUFBUSxHQUFHO0FBQUEsRUFDdkM7QUFDSjtBQUdBLHNCQUFzQixjQUFjLElBQVEsUUFBZ0IsZ0JBQWdCLEtBQUssY0FBYyxHQUFHO0FBRzlGLFFBQU0sV0FBVyxHQUFHLGNBQWMsTUFBTTtBQUN4QyxRQUFNLFdBQVcsR0FBRyxZQUFZLE1BQU07QUFDdEMsUUFBTSxXQUFXLEdBQUcsWUFBWSxNQUFNO0FBRXRDLE1BQUksY0FBYyxHQUFHO0FBQ2pCLE9BQUcsTUFBTSxPQUFPLE9BQU8sNENBQTRDO0FBRW5FLGtCQUFjLEtBQUssT0FBTyxXQUFXLE9BQU8sMEJBQTBCLElBQUksZ0JBQWdCO0FBRTFGLE9BQUcsT0FBTyxPQUFPLFdBQVcsa0JBQWtCLFdBQVc7QUFFekQsYUFBUyxVQUFVLEdBQUcsVUFBVSxhQUFhLFdBQVc7QUFDcEQsU0FBRyxNQUFNLE9BQU8sT0FBTyx3QkFBd0IsVUFBVSxlQUFlO0FBRXhFLFlBQU0sUUFBUSxPQUFPLFlBQVksSUFBSTtBQUNyQyxZQUFNLE9BQU8sQ0FBQztBQUdkLFlBQU0sWUFBWSxXQUFXLFdBQVc7QUFDeEMsWUFBTSxVQUFVLGNBQWMsV0FBVyxJQUFJLFFBQVEsZUFBZSxNQUFNLFNBQVM7QUFDbkYsV0FBSyxLQUFLLE9BQU87QUFJakIsWUFBTSxXQUFXLGNBQWMsYUFBYSxJQUFJLFFBQVEsR0FBRyxJQUFJO0FBQy9ELFdBQUssS0FBSyxRQUFRO0FBSWxCLFlBQU0sWUFBWSxXQUFXLFdBQVc7QUFDeEMsWUFBTSxVQUFVLGNBQWMsV0FBVyxJQUFJLFFBQVEsTUFBTSxTQUFTO0FBQ3BFLFdBQUssS0FBSyxPQUFPO0FBSWpCLFlBQU0sYUFBYSxJQUFJO0FBQ3ZCLFlBQU0sV0FBVyxjQUFjLGFBQWEsSUFBSSxRQUFRLEdBQUcsTUFBTSxVQUFVO0FBQzNFLFdBQUssS0FBSyxRQUFRO0FBSWxCLFVBQUksWUFBWSxLQUFLLFlBQVksS0FBSyxXQUFXLEtBQUssV0FBVyxHQUFHO0FBQ2hFLFdBQUcsTUFBTSxPQUFPLE1BQU0saURBQWlELE9BQU87QUFFOUUsbUJBQVcsT0FBTyxNQUFNO0FBQ3BCLGdCQUFNLFVBQVUsR0FBRyxLQUFLLEdBQUc7QUFDM0IsY0FBSSxDQUFDO0FBQVMsa0JBQU0sSUFBSSxNQUFNLDhCQUE4QjtBQUFBLFFBQ2hFO0FBQ0E7QUFBQSxNQUNKO0FBRUEsU0FBRyxNQUFNLE9BQU8sUUFBUSxzQ0FBc0MsT0FBTyxLQUFLO0FBQzFFLFlBQU0sTUFBTSxPQUFPLFlBQVksSUFBSTtBQUNuQyxTQUFHLE1BQU0sT0FBTyxRQUFRLGtCQUFrQixNQUFNLFNBQVMsT0FBTyxPQUFPLEtBQUs7QUFFNUUsWUFBTSxHQUFHLE1BQU0sSUFBSSxlQUFlO0FBQUEsSUFDdEM7QUFtQkEsVUFBTSxZQUFZO0FBRWxCLFVBQU0sR0FBRyxNQUFNLFNBQVM7QUFBQSxFQUU1QixPQUFPO0FBQ0gsT0FBRyxNQUFNLE9BQU8sT0FBTyw2Q0FBNkM7QUFDcEUsVUFBTUEsWUFBVyxHQUFHLGNBQWMsTUFBTTtBQUN4QyxVQUFNQyxZQUFXLEdBQUcsWUFBWSxNQUFNO0FBQ3RDLFVBQU1DLFlBQVcsR0FBRyxZQUFZLE1BQU07QUFFdEMsT0FBRyxNQUFNLG1DQUFtQyxTQUFTLENBQUM7QUFDdEQsVUFBTSxrQkFBa0IsYUFBYSxJQUFJLFFBQVEsR0FBRyxDQUFDO0FBTXJELFFBQUksaUJBQWlCO0FBQ3JCLFFBQUksbUJBQW1CLE1BQU07QUFFekIsdUJBQWlCLElBQUk7QUFDckIsWUFBTSxHQUFHLE1BQU0sY0FBYztBQUFBLElBQ2pDO0FBRUEsT0FBRyxNQUFNLG9DQUFvQyxTQUFTLENBQUM7QUFDdkQsVUFBTSxrQkFBa0IsYUFBYSxJQUFJLFFBQVEsR0FBRyxDQUFDO0FBS3JELFFBQUksZ0JBQWdCO0FBQ3BCLFFBQUksbUJBQW1CLE1BQU07QUFDekIsc0JBQWdCRixZQUFXLGtCQUFrQkM7QUFDN0MsWUFBTSxZQUFZLGdCQUFnQjtBQUNsQyxZQUFNLEdBQUcsTUFBTSxTQUFTO0FBQUEsSUFDNUI7QUFHQSxPQUFHLE1BQU0saUNBQWlDLFNBQVMsQ0FBQztBQUNwRCxVQUFNLGlCQUFpQixXQUFXLElBQUksUUFBUSxDQUFDO0FBTy9DLFFBQUksbUJBQW1CLFFBQVEsbUJBQW1CLFNBQVMsa0JBQWtCLE9BQU87QUFHaEYsU0FBRztBQUFBLFFBQ0MsT0FBTyxTQUNILHlHQUNBLE9BQU87QUFBQSxNQUNmO0FBQ0EsWUFBTSxnQkFBZ0JELFlBQVcsa0JBQWtCRTtBQUNuRCxZQUFNLEdBQUcsTUFBTSxhQUFhO0FBQzVCLFNBQUcsTUFBTSxpQ0FBaUMsU0FBUyxDQUFDO0FBQ3BELGlCQUFXLElBQUksUUFBUSxlQUFlLENBQUM7QUFDdkMsWUFBTSxHQUFHLE1BQU1BLFlBQVcsZUFBZTtBQUFBLElBQzdDLFdBQVcsbUJBQW1CLFNBQVMsbUJBQW1CLFNBQVMsa0JBQWtCLE9BQU87QUFFeEYsU0FBRyxNQUFNLE9BQU8sU0FBUyxrREFBa0QsU0FBUyxJQUFJLE9BQU8sS0FBSztBQUNwRyxpQkFBVyxJQUFJLFFBQVEsZUFBZSxDQUFDO0FBQ3ZDLFlBQU0sR0FBRyxNQUFNQSxZQUFXLGVBQWU7QUFBQSxJQUM3QyxXQUFXLG1CQUFtQixRQUFRLGtCQUFrQixRQUFRLG1CQUFtQixNQUFNO0FBRXJGLFNBQUcsTUFBTSxPQUFPLFFBQVEsdUNBQXVDLE9BQU8sS0FBSztBQUMzRSxZQUFNLGdCQUFnQkYsWUFBVyxJQUFJLGtCQUFrQkU7QUFDdkQsWUFBTSxnQkFBZ0IsZ0JBQWdCO0FBQ3RDLFlBQU0sR0FBRyxNQUFNLGFBQWE7QUFDNUIsU0FBRyxNQUFNLGlDQUFpQyxTQUFTLENBQUM7QUFDcEQsaUJBQVcsSUFBSSxRQUFRLGVBQWUsQ0FBQztBQUN2QyxZQUFNLEdBQUcsTUFBTUEsWUFBVyxlQUFlO0FBQUEsSUFDN0MsV0FBVyxtQkFBbUIsU0FBUyxtQkFBbUIsUUFBUSxrQkFBa0IsTUFBTTtBQUd0RixTQUFHO0FBQUEsUUFDQyxPQUFPLFNBQVMsMEVBQTBFLE9BQU87QUFBQSxNQUNyRztBQUNBLFlBQU0sZ0JBQWdCRixZQUFXLElBQUksa0JBQWtCRTtBQUN2RCxZQUFNLEdBQUcsTUFBTSxnQkFBZ0IsYUFBYTtBQUM1QyxTQUFHLE1BQU0saUNBQWlDLFNBQVMsQ0FBQztBQUNwRCxpQkFBVyxJQUFJLFFBQVEsZUFBZSxDQUFDO0FBQ3ZDLFlBQU0sR0FBRyxNQUFNQSxZQUFXLGVBQWU7QUFBQSxJQUM3QyxPQUFPO0FBQ0gsU0FBRyxNQUFNLE9BQU8sTUFBTSwwQkFBMEIsT0FBTyxLQUFLO0FBQzVELFNBQUc7QUFBQSxRQUNDLHNCQUNJLGtCQUNBLHlCQUNBLGtCQUNBLHdCQUNBO0FBQUEsTUFDUjtBQUNBLHVCQUFpQixJQUFJLFFBQVEsYUFBYTtBQUMxQztBQUFBLElBQ0o7QUFBQSxFQUNKO0FBQ0o7IiwibmFtZXMiOlsid2Vha1RpbWUiLCJncm93VGltZSIsImhhY2tUaW1lIl19\",\"filename\":\"parallel/manager.js\",\"server\":\"home\"}}],[\"parallel/weakenAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRamOptimized } from \\\"/bestServer.js\\\";\\nimport { Colors, getGrowThreads, getWeakenThreads } from \\\"/lib.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  weakenServer(ns, \\\"foodnstuff\\\", 1, 0);\\n}\\nexport function weakenServer(ns, target, order, batchId, delay = 0) {\\n  let totalWeakenThreadsNeeded = 0;\\n  if (order == 1) {\\n    totalWeakenThreadsNeeded = getWeakenThreads(ns, target);\\n    ns.print(\\\"Actual weaken1 threads needed: \\\" + totalWeakenThreadsNeeded);\\n  } else if (order == 2) {\\n    const growThreads = getGrowThreads(ns, target);\\n    const secIncrease = ns.growthAnalyzeSecurity(growThreads, target);\\n    totalWeakenThreadsNeeded = Math.ceil(secIncrease / ns.weakenAnalyze(1));\\n    ns.print(\\\"Actual weaken2 threads needed: \\\" + totalWeakenThreadsNeeded);\\n  } else {\\n    throw new Error(\\\"weaken order can only be either 1 or 2!\\\");\\n  }\\n  if (totalWeakenThreadsNeeded < 1) {\\n    ns.print(\\\"Weakenthreads are 0, skipping weak \\\" + order);\\n    return false;\\n  }\\n  const allHosts = getBestHostByRamOptimized(ns);\\n  const weakenScriptRam = 1.75;\\n  let threadsDispatched = 0;\\n  let threadsRemaining = totalWeakenThreadsNeeded;\\n  for (let i = 0; i < allHosts.length; i++) {\\n    if (threadsDispatched >= totalWeakenThreadsNeeded)\\n      break;\\n    const host = allHosts[i];\\n    const freeRam = host.availableRam;\\n    if (freeRam < weakenScriptRam)\\n      continue;\\n    const threadSpace = Math.floor(freeRam / weakenScriptRam);\\n    const threadsToDispatch = Math.min(threadsRemaining, threadSpace);\\n    ns.exec(\\\"weaken.js\\\", host.name, threadsToDispatch, target, delay);\\n    threadsRemaining -= threadsToDispatch;\\n    threadsDispatched += threadsToDispatch;\\n  }\\n  if (threadsRemaining <= 0) {\\n    ns.print(\\\"Done deploying weaken\\\" + order + \\\"!\\\");\\n    return true;\\n  }\\n  ns.print(\\n    Colors.YELLOW + \\\"There are \\\" + threadsRemaining + \\\" threads remaining after dispatching all threads, attempting to dispatch remaining threads on purchased server\\\"\\n  );\\n  const neededWeakenRam = threadsRemaining * weakenScriptRam;\\n  const server = ServerManager.buyOrUpgradeServer(ns, neededWeakenRam, Config.WEAK_SERVER_NAME);\\n  if (server === \\\"\\\") {\\n    ns.tprint(\\\"Error! Could not buy server to weak \\\" + target);\\n    throw new Error(\\\"Error! Could not buy server to weak \\\" + target);\\n  }\\n  ns.exec(\\\"weaken.js\\\", server, threadsRemaining, target, delay);\\n  return true;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbkFsZ28udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSBcIkAvQ29uZmlnL0NvbmZpZ1wiO1xyXG5pbXBvcnQgeyBnZXRCZXN0SG9zdEJ5UmFtT3B0aW1pemVkIH0gZnJvbSBcIkAvYmVzdFNlcnZlclwiO1xyXG5pbXBvcnQgeyBDb2xvcnMsIGdldEdyb3dUaHJlYWRzLCBnZXRXZWFrZW5UaHJlYWRzIH0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJNYW5hZ2VyIH0gZnJvbSBcIi4vU2VydmVyTWFuYWdlclwiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBucy50YWlsKCk7XHJcbiAgICB3ZWFrZW5TZXJ2ZXIobnMsIFwiZm9vZG5zdHVmZlwiLCAxLCAwKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFdlYWtlbnMgYSBzZXJ2ZXIgYnkgZXhlY3V0aW5nIHRoZSB3ZWFrZW4uanMgc2NyaXB0IHdpdGggdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgdGhyZWFkcy5cclxuICogVGhlIG51bWJlciBvZiB0aHJlYWRzIGlzIGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlIG9yZGVyIG9mIHdlYWtlbmluZyBhbmQgdGhlIHRhcmdldCBzZXJ2ZXIncyBwcm9wZXJ0aWVzLlxyXG4gKlxyXG4gKiBAcGFyYW0gbnMgLSBUaGUgTmV0U2NyaXB0QVBJIG9iamVjdC5cclxuICogQHBhcmFtIHRhcmdldCAtIFRoZSBuYW1lIG9mIHRoZSB0YXJnZXQgc2VydmVyIHRvIHdlYWtlbi5cclxuICogQHBhcmFtIGhvc3QgLSBUaGUgbmFtZSBvZiB0aGUgY3VycmVudCBzZXJ2ZXIgaG9zdGluZyB0aGUgd2Vha2VuIHNjcmlwdC5cclxuICogQHBhcmFtIG9yZGVyIC0gVGhlIG9yZGVyIG9mIHdlYWtlbmluZy4gQ2FuIG9ubHkgYmUgZWl0aGVyIDEgb3IgMi5cclxuICogQHJldHVybnMgQSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciB0aGUgd2Vha2VuIG9wZXJhdGlvbiB3YXMgc3VjY2Vzc2Z1bC5cclxuICogQHRocm93cyBBbiBlcnJvciBpZiB0aGUgd2Vha2VuIG9yZGVyIGlzIG5vdCAxIG9yIDIsIG9yIGlmIHRoZXJlIGlzIG5vdCBlbm91Z2ggZnJlZSBSQU0gdG8gZXhlY3V0ZSB0aGUgd2Vha2VuIG9wZXJhdGlvbi5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB3ZWFrZW5TZXJ2ZXIobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgb3JkZXI6IG51bWJlciwgYmF0Y2hJZDogbnVtYmVyLCBkZWxheSA9IDApOiBib29sZWFuIHtcclxuICAgIGxldCB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQgPSAwO1xyXG4gICAgLy8gY2FsY3VsYXRlIHdlYWtlbmluZyB0aHJlYWRzIGJhc2VkIG9uIHRoZSBvcmRlclxyXG5cclxuICAgIGlmIChvcmRlciA9PSAxKSB7XHJcbiAgICAgICAgLy8gZmlyc3Qgd2VhayBoYXMgdG8gd2Vha2VuIHNlcnZlciB0byBtaW4gZnJvbSB1bmtub3duIHNlYyBsdmxcclxuICAgICAgICB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQgPSBnZXRXZWFrZW5UaHJlYWRzKG5zLCB0YXJnZXQpO1xyXG4gICAgICAgIG5zLnByaW50KFwiQWN0dWFsIHdlYWtlbjEgdGhyZWFkcyBuZWVkZWQ6IFwiICsgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkKTtcclxuICAgIH0gZWxzZSBpZiAob3JkZXIgPT0gMikge1xyXG4gICAgICAgIC8vIHNlY29uZCB3ZWFrIG9ubHkgaGFzIHRvIHJlbW92ZSB0aGUgc2VjIGluY3JlYXNlIGZyb20gdGhlIGdyb3cgYmVmb3JlIChtb3JlIHJhbSBlZmZpY2llbnQpXHJcbiAgICAgICAgY29uc3QgZ3Jvd1RocmVhZHMgPSBnZXRHcm93VGhyZWFkcyhucywgdGFyZ2V0KTtcclxuICAgICAgICBjb25zdCBzZWNJbmNyZWFzZSA9IG5zLmdyb3d0aEFuYWx5emVTZWN1cml0eShncm93VGhyZWFkcywgdGFyZ2V0KTtcclxuXHJcbiAgICAgICAgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gTWF0aC5jZWlsKHNlY0luY3JlYXNlIC8gbnMud2Vha2VuQW5hbHl6ZSgxKSk7XHJcblxyXG4gICAgICAgIG5zLnByaW50KFwiQWN0dWFsIHdlYWtlbjIgdGhyZWFkcyBuZWVkZWQ6IFwiICsgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwid2Vha2VuIG9yZGVyIGNhbiBvbmx5IGJlIGVpdGhlciAxIG9yIDIhXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQgPCAxKSB7XHJcbiAgICAgICAgbnMucHJpbnQoXCJXZWFrZW50aHJlYWRzIGFyZSAwLCBza2lwcGluZyB3ZWFrIFwiICsgb3JkZXIpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBleGVjIHdlYWtlbi5qcyB3aXRoIG51bSBvZiB0aHJlYWRzXHJcbiAgICBjb25zdCBhbGxIb3N0cyA9IGdldEJlc3RIb3N0QnlSYW1PcHRpbWl6ZWQobnMpO1xyXG4gICAgY29uc3Qgd2Vha2VuU2NyaXB0UmFtID0gMS43NTtcclxuXHJcbiAgICBsZXQgdGhyZWFkc0Rpc3BhdGNoZWQgPSAwO1xyXG4gICAgbGV0IHRocmVhZHNSZW1haW5pbmcgPSB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQ7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbEhvc3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKHRocmVhZHNEaXNwYXRjaGVkID49IHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCkgYnJlYWs7XHJcbiAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xyXG5cclxuICAgICAgICBjb25zdCBmcmVlUmFtID0gaG9zdC5hdmFpbGFibGVSYW07XHJcbiAgICAgICAgaWYgKGZyZWVSYW0gPCB3ZWFrZW5TY3JpcHRSYW0pIGNvbnRpbnVlO1xyXG4gICAgICAgIGNvbnN0IHRocmVhZFNwYWNlID0gTWF0aC5mbG9vcihmcmVlUmFtIC8gd2Vha2VuU2NyaXB0UmFtKTtcclxuXHJcbiAgICAgICAgLy8gaWYgdGhyZWFkc1JlbWFpbmluZyBpcyBsZXNzIHRoYW4gdGhlIHRocmVhZFNwYWNlLCB0aGVuIHdlIGNhbiBvbmx5IGRpc3BhdGNoIHRocmVhZHNSZW1haW5pbmcgdGhyZWFkc1xyXG4gICAgICAgIGNvbnN0IHRocmVhZHNUb0Rpc3BhdGNoID0gTWF0aC5taW4odGhyZWFkc1JlbWFpbmluZywgdGhyZWFkU3BhY2UpO1xyXG5cclxuICAgICAgICBucy5leGVjKFwid2Vha2VuLmpzXCIsIGhvc3QubmFtZSwgdGhyZWFkc1RvRGlzcGF0Y2gsIHRhcmdldCwgZGVsYXkpO1xyXG4gICAgICAgIHRocmVhZHNSZW1haW5pbmcgLT0gdGhyZWFkc1RvRGlzcGF0Y2g7XHJcbiAgICAgICAgdGhyZWFkc0Rpc3BhdGNoZWQgKz0gdGhyZWFkc1RvRGlzcGF0Y2g7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRocmVhZHNSZW1haW5pbmcgPD0gMCkge1xyXG4gICAgICAgIG5zLnByaW50KFwiRG9uZSBkZXBsb3lpbmcgd2Vha2VuXCIgKyBvcmRlciArIFwiIVwiKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIG5zLnByaW50KFxyXG4gICAgICAgIENvbG9ycy5ZRUxMT1cgK1xyXG4gICAgICAgICAgICBcIlRoZXJlIGFyZSBcIiArXHJcbiAgICAgICAgICAgIHRocmVhZHNSZW1haW5pbmcgK1xyXG4gICAgICAgICAgICBcIiB0aHJlYWRzIHJlbWFpbmluZyBhZnRlciBkaXNwYXRjaGluZyBhbGwgdGhyZWFkcywgYXR0ZW1wdGluZyB0byBkaXNwYXRjaCByZW1haW5pbmcgdGhyZWFkcyBvbiBwdXJjaGFzZWQgc2VydmVyXCIsXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IG5lZWRlZFdlYWtlblJhbSA9IHRocmVhZHNSZW1haW5pbmcgKiB3ZWFrZW5TY3JpcHRSYW07XHJcbiAgICBjb25zdCBzZXJ2ZXIgPSBTZXJ2ZXJNYW5hZ2VyLmJ1eU9yVXBncmFkZVNlcnZlcihucywgbmVlZGVkV2Vha2VuUmFtLCBDb25maWcuV0VBS19TRVJWRVJfTkFNRSk7XHJcblxyXG4gICAgaWYgKHNlcnZlciA9PT0gXCJcIikge1xyXG4gICAgICAgIG5zLnRwcmludChcIkVycm9yISBDb3VsZCBub3QgYnV5IHNlcnZlciB0byB3ZWFrIFwiICsgdGFyZ2V0KTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciEgQ291bGQgbm90IGJ1eSBzZXJ2ZXIgdG8gd2VhayBcIiArIHRhcmdldCk7XHJcbiAgICB9XHJcblxyXG4gICAgbnMuZXhlYyhcIndlYWtlbi5qc1wiLCBzZXJ2ZXIsIHRocmVhZHNSZW1haW5pbmcsIHRhcmdldCwgZGVsYXkpO1xyXG5cclxuICAgIHJldHVybiB0cnVlO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxjQUFjO0FBQ3ZCLFNBQVMsaUNBQWlDO0FBQzFDLFNBQVMsUUFBUSxnQkFBZ0Isd0JBQXdCO0FBRXpELFNBQVMscUJBQXFCO0FBRTlCLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsZUFBYSxJQUFJLGNBQWMsR0FBRyxDQUFDO0FBQ3ZDO0FBYU8sZ0JBQVMsYUFBYSxJQUFRLFFBQWdCLE9BQWUsU0FBaUIsUUFBUSxHQUFZO0FBQ3JHLE1BQUksMkJBQTJCO0FBRy9CLE1BQUksU0FBUyxHQUFHO0FBRVosK0JBQTJCLGlCQUFpQixJQUFJLE1BQU07QUFDdEQsT0FBRyxNQUFNLG9DQUFvQyx3QkFBd0I7QUFBQSxFQUN6RSxXQUFXLFNBQVMsR0FBRztBQUVuQixVQUFNLGNBQWMsZUFBZSxJQUFJLE1BQU07QUFDN0MsVUFBTSxjQUFjLEdBQUcsc0JBQXNCLGFBQWEsTUFBTTtBQUVoRSwrQkFBMkIsS0FBSyxLQUFLLGNBQWMsR0FBRyxjQUFjLENBQUMsQ0FBQztBQUV0RSxPQUFHLE1BQU0sb0NBQW9DLHdCQUF3QjtBQUFBLEVBQ3pFLE9BQU87QUFDSCxVQUFNLElBQUksTUFBTSx5Q0FBeUM7QUFBQSxFQUM3RDtBQUVBLE1BQUksMkJBQTJCLEdBQUc7QUFDOUIsT0FBRyxNQUFNLHdDQUF3QyxLQUFLO0FBQ3RELFdBQU87QUFBQSxFQUNYO0FBR0EsUUFBTSxXQUFXLDBCQUEwQixFQUFFO0FBQzdDLFFBQU0sa0JBQWtCO0FBRXhCLE1BQUksb0JBQW9CO0FBQ3hCLE1BQUksbUJBQW1CO0FBQ3ZCLFdBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsUUFBSSxxQkFBcUI7QUFBMEI7QUFDbkQsVUFBTSxPQUFPLFNBQVMsQ0FBQztBQUV2QixVQUFNLFVBQVUsS0FBSztBQUNyQixRQUFJLFVBQVU7QUFBaUI7QUFDL0IsVUFBTSxjQUFjLEtBQUssTUFBTSxVQUFVLGVBQWU7QUFHeEQsVUFBTSxvQkFBb0IsS0FBSyxJQUFJLGtCQUFrQixXQUFXO0FBRWhFLE9BQUcsS0FBSyxhQUFhLEtBQUssTUFBTSxtQkFBbUIsUUFBUSxLQUFLO0FBQ2hFLHdCQUFvQjtBQUNwQix5QkFBcUI7QUFBQSxFQUN6QjtBQUVBLE1BQUksb0JBQW9CLEdBQUc7QUFDdkIsT0FBRyxNQUFNLDBCQUEwQixRQUFRLEdBQUc7QUFDOUMsV0FBTztBQUFBLEVBQ1g7QUFDQSxLQUFHO0FBQUEsSUFDQyxPQUFPLFNBQ0gsZUFDQSxtQkFDQTtBQUFBLEVBQ1I7QUFFQSxRQUFNLGtCQUFrQixtQkFBbUI7QUFDM0MsUUFBTSxTQUFTLGNBQWMsbUJBQW1CLElBQUksaUJBQWlCLE9BQU8sZ0JBQWdCO0FBRTVGLE1BQUksV0FBVyxJQUFJO0FBQ2YsT0FBRyxPQUFPLHlDQUF5QyxNQUFNO0FBQ3pELFVBQU0sSUFBSSxNQUFNLHlDQUF5QyxNQUFNO0FBQUEsRUFDbkU7QUFFQSxLQUFHLEtBQUssYUFBYSxRQUFRLGtCQUFrQixRQUFRLEtBQUs7QUFFNUQsU0FBTztBQUNYOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"parallel/weakenAlgo.js\",\"server\":\"home\"}}],[\"serverStats.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Colors } from \\\"/lib.js\\\";\\nimport { getBestHostByRamOptimized } from \\\"/bestServer.js\\\";\\nconst BORDER_COLOR = Colors.CYAN;\\nlet maxMoney = 0;\\nlet curMoney = 0;\\nlet hackingChance = 0;\\nlet minSec = 0;\\nlet curSec = 0;\\nlet maxRam = 0;\\nlet useRam = 0;\\nlet freeRam = 0;\\nlet moneyMultiplier = 0;\\nlet growingThreads = 0;\\nlet serverWeakenThreadsCur = 0;\\nlet hackThreads = 0;\\nlet headerString = \\\"\\\";\\nlet footerString = \\\"\\\";\\nlet hackingPercent = 0;\\nexport function printServerStats(ns, server, hackThreshold) {\\n  setStats(ns, server, hackThreshold);\\n  ns.print(BORDER_COLOR + headerString + Colors.RESET);\\n  printStatLine(ns, \\\"Money:\\\", false);\\n  printStatLine(ns, \\\"Max Money: \\\" + ns.formatNumber(maxMoney) + \\\" | Current Money: \\\" + ns.formatNumber(curMoney));\\n  printStatLine(\\n    ns,\\n    \\\"Percent: \\\" + ns.formatNumber(curMoney / maxMoney) + \\\" | Hack Chance: \\\" + ns.formatNumber(hackingChance)\\n  );\\n  printStatLine(ns, \\\"Security:\\\", false);\\n  printStatLine(ns, \\\"Min Seclvl: \\\" + minSec + \\\" | Current Seclvl: \\\" + ns.formatNumber(curSec));\\n  printStatLine(ns, \\\"Ram:\\\", false);\\n  printStatLine(ns, \\\"Server Max Ram: \\\" + maxRam);\\n  printStatLine(ns, \\\"Used Ram: \\\" + useRam + \\\" | free Ram: \\\" + freeRam);\\n  printStatLine(ns, \\\"Threads:\\\", false);\\n  printStatLine(ns, \\\"Grow Threads: \\\" + growingThreads);\\n  printStatLine(ns, \\\"Weaken Threads \\\" + serverWeakenThreadsCur);\\n  printStatLine(ns, \\\"Hack Threads: \\\" + hackThreads + \\\" | Hack percent: \\\" + ns.formatNumber(hackingPercent, 5));\\n  ns.print(BORDER_COLOR + footerString + Colors.RESET);\\n  return footerString.length;\\n}\\nexport function printServerStatsConsole() {\\n}\\nfunction setStats(ns, server, hackThreshold) {\\n  maxMoney = ns.getServerMaxMoney(server);\\n  curMoney = ns.getServerMoneyAvailable(server);\\n  hackingChance = ns.hackAnalyzeChance(server);\\n  minSec = ns.getServerMinSecurityLevel(server);\\n  curSec = ns.getServerSecurityLevel(server);\\n  maxRam = ns.getServerMaxRam(server);\\n  useRam = ns.getServerUsedRam(server);\\n  freeRam = maxRam - useRam;\\n  moneyMultiplier = maxMoney / curMoney;\\n  if (isNaN(moneyMultiplier) || moneyMultiplier == Infinity)\\n    moneyMultiplier = 1;\\n  growingThreads = Math.ceil(ns.growthAnalyze(server, moneyMultiplier));\\n  serverWeakenThreadsCur = Math.ceil((curSec - ns.getServerMinSecurityLevel(server)) / 0.05);\\n  hackingPercent = ns.hackAnalyze(server);\\n  hackThreads = Math.ceil(hackThreshold / hackingPercent);\\n  if (isNaN(hackThreads) || hackThreads == Infinity)\\n    hackThreads = 0;\\n  if (isNaN(hackingPercent) || hackingPercent == Infinity)\\n    hackingPercent = 0;\\n  headerString = \\\"┌───────────────── stats for \\\" + server + \\\" ─────────────────┐\\\";\\n  footerString = \\\"└\\\" + \\\"─\\\".repeat(headerString.length - 2) + \\\"┘\\\";\\n}\\nfunction printStatLine(ns, value, indent = true) {\\n  if (indent)\\n    value = \\\"\\t\\\" + value;\\n  const offset = indent ? 8 : 3;\\n  ns.print(\\n    BORDER_COLOR + \\\"│ \\\" + Colors.RESET + value + \\\" \\\".repeat(headerString.length - value.length - offset) + BORDER_COLOR + \\\"│\\\" + Colors.RESET\\n  );\\n}\\nexport function getNumThreadsActive(ns) {\\n  const hosts = getBestHostByRamOptimized(ns);\\n  let totalThreads = 0;\\n  for (let i = 0; i < hosts.length; i++) {\\n    const host = hosts[i];\\n    const processes = ns.ps(host.name);\\n    processes.forEach((process) => {\\n      totalThreads += process.threads;\\n    });\\n  }\\n  return totalThreads;\\n}\\nexport function autocomplete(data) {\\n  return [...data.servers];\\n}\\nexport async function main(ns) {\\n  ns.clearLog();\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  if (ns.args.length == 1) {\\n    while (true) {\\n      ns.clearLog();\\n      const width = printServerStats(ns, ns.args[0].toString(), 0.9);\\n      ns.resizeTail((width - 1) * 10, 375);\\n      await ns.sleep(100);\\n    }\\n  } else {\\n    while (true) {\\n      ns.clearLog();\\n      const server = ns.peek(1);\\n      if (server === \\\"NULL PORT DATA\\\") {\\n        ns.print(\\\"No server found, waiting for data...\\\");\\n        await ns.getPortHandle(1).nextWrite();\\n        continue;\\n      }\\n      const width = printServerStats(ns, server.toString(), 0.9);\\n      ns.resizeTail((width - 1) * 10, 375);\\n      await ns.sleep(20);\\n    }\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlclN0YXRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tIFwiLi9saWJcIjtcclxuaW1wb3J0IHsgZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZCB9IGZyb20gXCIuL2Jlc3RTZXJ2ZXJcIjtcclxuXHJcbmNvbnN0IEJPUkRFUl9DT0xPUiA9IENvbG9ycy5DWUFOO1xyXG5cclxubGV0IG1heE1vbmV5ID0gMDtcclxubGV0IGN1ck1vbmV5ID0gMDtcclxubGV0IGhhY2tpbmdDaGFuY2UgPSAwO1xyXG5sZXQgbWluU2VjID0gMDtcclxubGV0IGN1clNlYyA9IDA7XHJcbmxldCBtYXhSYW0gPSAwO1xyXG5sZXQgdXNlUmFtID0gMDtcclxubGV0IGZyZWVSYW0gPSAwO1xyXG5sZXQgbW9uZXlNdWx0aXBsaWVyID0gMDtcclxubGV0IGdyb3dpbmdUaHJlYWRzID0gMDtcclxubGV0IHNlcnZlcldlYWtlblRocmVhZHNDdXIgPSAwO1xyXG5sZXQgaGFja1RocmVhZHMgPSAwO1xyXG5sZXQgaGVhZGVyU3RyaW5nID0gXCJcIjtcclxubGV0IGZvb3RlclN0cmluZyA9IFwiXCI7XHJcbmxldCBoYWNraW5nUGVyY2VudCA9IDA7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcHJpbnRTZXJ2ZXJTdGF0cyhuczogTlMsIHNlcnZlcjogc3RyaW5nLCBoYWNrVGhyZXNob2xkOiBudW1iZXIpIHtcclxuICAgIHNldFN0YXRzKG5zLCBzZXJ2ZXIsIGhhY2tUaHJlc2hvbGQpO1xyXG5cclxuICAgIG5zLnByaW50KEJPUkRFUl9DT0xPUiArIGhlYWRlclN0cmluZyArIENvbG9ycy5SRVNFVCk7XHJcblxyXG4gICAgcHJpbnRTdGF0TGluZShucywgXCJNb25leTpcIiwgZmFsc2UpO1xyXG4gICAgcHJpbnRTdGF0TGluZShucywgXCJNYXggTW9uZXk6IFwiICsgbnMuZm9ybWF0TnVtYmVyKG1heE1vbmV5KSArIFwiIHwgQ3VycmVudCBNb25leTogXCIgKyBucy5mb3JtYXROdW1iZXIoY3VyTW9uZXkpKTtcclxuICAgIHByaW50U3RhdExpbmUoXHJcbiAgICAgICAgbnMsXHJcbiAgICAgICAgXCJQZXJjZW50OiBcIiArIG5zLmZvcm1hdE51bWJlcihjdXJNb25leSAvIG1heE1vbmV5KSArIFwiIHwgSGFjayBDaGFuY2U6IFwiICsgbnMuZm9ybWF0TnVtYmVyKGhhY2tpbmdDaGFuY2UpLFxyXG4gICAgKTtcclxuXHJcbiAgICBwcmludFN0YXRMaW5lKG5zLCBcIlNlY3VyaXR5OlwiLCBmYWxzZSk7XHJcbiAgICBwcmludFN0YXRMaW5lKG5zLCBcIk1pbiBTZWNsdmw6IFwiICsgbWluU2VjICsgXCIgfCBDdXJyZW50IFNlY2x2bDogXCIgKyBucy5mb3JtYXROdW1iZXIoY3VyU2VjKSk7XHJcblxyXG4gICAgcHJpbnRTdGF0TGluZShucywgXCJSYW06XCIsIGZhbHNlKTtcclxuICAgIHByaW50U3RhdExpbmUobnMsIFwiU2VydmVyIE1heCBSYW06IFwiICsgbWF4UmFtKTtcclxuICAgIHByaW50U3RhdExpbmUobnMsIFwiVXNlZCBSYW06IFwiICsgdXNlUmFtICsgXCIgfCBmcmVlIFJhbTogXCIgKyBmcmVlUmFtKTtcclxuXHJcbiAgICBwcmludFN0YXRMaW5lKG5zLCBcIlRocmVhZHM6XCIsIGZhbHNlKTtcclxuICAgIHByaW50U3RhdExpbmUobnMsIFwiR3JvdyBUaHJlYWRzOiBcIiArIGdyb3dpbmdUaHJlYWRzKTtcclxuICAgIHByaW50U3RhdExpbmUobnMsIFwiV2Vha2VuIFRocmVhZHMgXCIgKyBzZXJ2ZXJXZWFrZW5UaHJlYWRzQ3VyKTtcclxuICAgIHByaW50U3RhdExpbmUobnMsIFwiSGFjayBUaHJlYWRzOiBcIiArIGhhY2tUaHJlYWRzICsgXCIgfCBIYWNrIHBlcmNlbnQ6IFwiICsgbnMuZm9ybWF0TnVtYmVyKGhhY2tpbmdQZXJjZW50LCA1KSk7XHJcblxyXG4gICAgbnMucHJpbnQoQk9SREVSX0NPTE9SICsgZm9vdGVyU3RyaW5nICsgQ29sb3JzLlJFU0VUKTtcclxuXHJcbiAgICByZXR1cm4gZm9vdGVyU3RyaW5nLmxlbmd0aDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHByaW50U2VydmVyU3RhdHNDb25zb2xlKCkge1xyXG4gICAgLy8gdG9kb1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZXRTdGF0cyhuczogTlMsIHNlcnZlcjogc3RyaW5nLCBoYWNrVGhyZXNob2xkOiBudW1iZXIpIHtcclxuICAgIC8vIG1vbmV5XHJcbiAgICBtYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XHJcbiAgICBjdXJNb25leSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHNlcnZlcik7XHJcbiAgICBoYWNraW5nQ2hhbmNlID0gbnMuaGFja0FuYWx5emVDaGFuY2Uoc2VydmVyKTtcclxuICAgIC8vIHNlYyBsdmxcclxuICAgIG1pblNlYyA9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcclxuICAgIGN1clNlYyA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcclxuICAgIC8vIHJhbVxyXG4gICAgbWF4UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNlcnZlcik7XHJcbiAgICB1c2VSYW0gPSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlcik7XHJcbiAgICBmcmVlUmFtID0gbWF4UmFtIC0gdXNlUmFtO1xyXG4gICAgLy8gdGhyZWFkc1xyXG5cclxuICAgIG1vbmV5TXVsdGlwbGllciA9IG1heE1vbmV5IC8gY3VyTW9uZXk7XHJcbiAgICBpZiAoaXNOYU4obW9uZXlNdWx0aXBsaWVyKSB8fCBtb25leU11bHRpcGxpZXIgPT0gSW5maW5pdHkpIG1vbmV5TXVsdGlwbGllciA9IDE7XHJcblxyXG4gICAgZ3Jvd2luZ1RocmVhZHMgPSBNYXRoLmNlaWwobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIG1vbmV5TXVsdGlwbGllcikpO1xyXG5cclxuICAgIHNlcnZlcldlYWtlblRocmVhZHNDdXIgPSBNYXRoLmNlaWwoKGN1clNlYyAtIG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc2VydmVyKSkgLyAwLjA1KTtcclxuXHJcbiAgICBoYWNraW5nUGVyY2VudCA9IG5zLmhhY2tBbmFseXplKHNlcnZlcik7XHJcbiAgICBoYWNrVGhyZWFkcyA9IE1hdGguY2VpbChoYWNrVGhyZXNob2xkIC8gaGFja2luZ1BlcmNlbnQpO1xyXG4gICAgaWYgKGlzTmFOKGhhY2tUaHJlYWRzKSB8fCBoYWNrVGhyZWFkcyA9PSBJbmZpbml0eSkgaGFja1RocmVhZHMgPSAwO1xyXG4gICAgaWYgKGlzTmFOKGhhY2tpbmdQZXJjZW50KSB8fCBoYWNraW5nUGVyY2VudCA9PSBJbmZpbml0eSkgaGFja2luZ1BlcmNlbnQgPSAwO1xyXG5cclxuICAgIGhlYWRlclN0cmluZyA9IFwi4pSM4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIHN0YXRzIGZvciBcIiArIHNlcnZlciArIFwiIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkFwiO1xyXG4gICAgZm9vdGVyU3RyaW5nID0gXCLilJRcIiArIFwi4pSAXCIucmVwZWF0KGhlYWRlclN0cmluZy5sZW5ndGggLSAyKSArIFwi4pSYXCI7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHByaW50U3RhdExpbmUobnM6IE5TLCB2YWx1ZTogc3RyaW5nLCBpbmRlbnQgPSB0cnVlKSB7XHJcbiAgICBpZiAoaW5kZW50KSB2YWx1ZSA9IFwiXFx0XCIgKyB2YWx1ZTtcclxuICAgIGNvbnN0IG9mZnNldCA9IGluZGVudCA/IDggOiAzOyAvLyB0aGUgb2Zmc2V0IHRvIHN1YnRyYWN0IHRoZSBib3JkZXIgYW5kIGluZGVudFxyXG4gICAgbnMucHJpbnQoXHJcbiAgICAgICAgQk9SREVSX0NPTE9SICtcclxuICAgICAgICAgICAgXCLilIIgXCIgK1xyXG4gICAgICAgICAgICBDb2xvcnMuUkVTRVQgK1xyXG4gICAgICAgICAgICB2YWx1ZSArXHJcbiAgICAgICAgICAgIFwiIFwiLnJlcGVhdChoZWFkZXJTdHJpbmcubGVuZ3RoIC0gdmFsdWUubGVuZ3RoIC0gb2Zmc2V0KSArXHJcbiAgICAgICAgICAgIEJPUkRFUl9DT0xPUiArXHJcbiAgICAgICAgICAgIFwi4pSCXCIgK1xyXG4gICAgICAgICAgICBDb2xvcnMuUkVTRVQsXHJcbiAgICApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TnVtVGhyZWFkc0FjdGl2ZShuczogTlMpIHtcclxuICAgIGNvbnN0IGhvc3RzID0gZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZChucyk7XHJcblxyXG4gICAgbGV0IHRvdGFsVGhyZWFkcyA9IDA7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhvc3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgY29uc3QgaG9zdCA9IGhvc3RzW2ldO1xyXG5cclxuICAgICAgICBjb25zdCBwcm9jZXNzZXMgPSBucy5wcyhob3N0Lm5hbWUpO1xyXG5cclxuICAgICAgICBwcm9jZXNzZXMuZm9yRWFjaCgocHJvY2VzcykgPT4ge1xyXG4gICAgICAgICAgICB0b3RhbFRocmVhZHMgKz0gcHJvY2Vzcy50aHJlYWRzO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvdGFsVGhyZWFkcztcclxufVxyXG5cclxuaW50ZXJmYWNlIEF1dG9jb21wbGV0ZURhdGEge1xyXG4gICAgc2VydmVyczogc3RyaW5nW107XHJcbiAgICB0eHRzOiBzdHJpbmdbXTtcclxuICAgIHNjcmlwdHM6IHN0cmluZ1tdO1xyXG4gICAgZmxhZ3M6IHN0cmluZ1tdO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYXV0b2NvbXBsZXRlKGRhdGE6IEF1dG9jb21wbGV0ZURhdGEpIHtcclxuICAgIHJldHVybiBbLi4uZGF0YS5zZXJ2ZXJzXTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBucy5jbGVhckxvZygpO1xyXG4gICAgbnMudGFpbCgpO1xyXG4gICAgbnMuZGlzYWJsZUxvZyhcIkFMTFwiKTtcclxuICAgIC8vIHdoaWxlICh0cnVlKSB7XHJcbiAgICAvLyAgICAgbnMuY2xlYXJMb2coKTtcclxuICAgIC8vICAgICBucy5wcmludChnZXROdW1UaHJlYWRzQWN0aXZlKG5zKSk7XHJcbiAgICAvLyAgICAgYXdhaXQgbnMuc2xlZXAoMTAwMCk7XHJcbiAgICAvLyB9XHJcbiAgICBpZiAobnMuYXJncy5sZW5ndGggPT0gMSkge1xyXG4gICAgICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgICAgIG5zLmNsZWFyTG9nKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gcHJpbnRTZXJ2ZXJTdGF0cyhucywgbnMuYXJnc1swXS50b1N0cmluZygpLCAwLjkpO1xyXG4gICAgICAgICAgICBucy5yZXNpemVUYWlsKCh3aWR0aCAtIDEpICogMTAsIDM3NSk7XHJcbiAgICAgICAgICAgIGF3YWl0IG5zLnNsZWVwKDEwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgICAgICBucy5jbGVhckxvZygpO1xyXG4gICAgICAgICAgICBjb25zdCBzZXJ2ZXIgPSBucy5wZWVrKDEpO1xyXG4gICAgICAgICAgICBpZiAoc2VydmVyID09PSBcIk5VTEwgUE9SVCBEQVRBXCIpIHtcclxuICAgICAgICAgICAgICAgIG5zLnByaW50KFwiTm8gc2VydmVyIGZvdW5kLCB3YWl0aW5nIGZvciBkYXRhLi4uXCIpO1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgbnMuZ2V0UG9ydEhhbmRsZSgxKS5uZXh0V3JpdGUoKTtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gcHJpbnRTZXJ2ZXJTdGF0cyhucywgc2VydmVyLnRvU3RyaW5nKCksIDAuOSk7XHJcbiAgICAgICAgICAgIG5zLnJlc2l6ZVRhaWwoKHdpZHRoIC0gMSkgKiAxMCwgMzc1KTtcclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoMjApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLFNBQVMsY0FBYztBQUN2QixTQUFTLGlDQUFpQztBQUUxQyxNQUFNLGVBQWUsT0FBTztBQUU1QixJQUFJLFdBQVc7QUFDZixJQUFJLFdBQVc7QUFDZixJQUFJLGdCQUFnQjtBQUNwQixJQUFJLFNBQVM7QUFDYixJQUFJLFNBQVM7QUFDYixJQUFJLFNBQVM7QUFDYixJQUFJLFNBQVM7QUFDYixJQUFJLFVBQVU7QUFDZCxJQUFJLGtCQUFrQjtBQUN0QixJQUFJLGlCQUFpQjtBQUNyQixJQUFJLHlCQUF5QjtBQUM3QixJQUFJLGNBQWM7QUFDbEIsSUFBSSxlQUFlO0FBQ25CLElBQUksZUFBZTtBQUNuQixJQUFJLGlCQUFpQjtBQUVkLGdCQUFTLGlCQUFpQixJQUFRLFFBQWdCLGVBQXVCO0FBQzVFLFdBQVMsSUFBSSxRQUFRLGFBQWE7QUFFbEMsS0FBRyxNQUFNLGVBQWUsZUFBZSxPQUFPLEtBQUs7QUFFbkQsZ0JBQWMsSUFBSSxVQUFVLEtBQUs7QUFDakMsZ0JBQWMsSUFBSSxnQkFBZ0IsR0FBRyxhQUFhLFFBQVEsSUFBSSx1QkFBdUIsR0FBRyxhQUFhLFFBQVEsQ0FBQztBQUM5RztBQUFBLElBQ0k7QUFBQSxJQUNBLGNBQWMsR0FBRyxhQUFhLFdBQVcsUUFBUSxJQUFJLHFCQUFxQixHQUFHLGFBQWEsYUFBYTtBQUFBLEVBQzNHO0FBRUEsZ0JBQWMsSUFBSSxhQUFhLEtBQUs7QUFDcEMsZ0JBQWMsSUFBSSxpQkFBaUIsU0FBUyx3QkFBd0IsR0FBRyxhQUFhLE1BQU0sQ0FBQztBQUUzRixnQkFBYyxJQUFJLFFBQVEsS0FBSztBQUMvQixnQkFBYyxJQUFJLHFCQUFxQixNQUFNO0FBQzdDLGdCQUFjLElBQUksZUFBZSxTQUFTLGtCQUFrQixPQUFPO0FBRW5FLGdCQUFjLElBQUksWUFBWSxLQUFLO0FBQ25DLGdCQUFjLElBQUksbUJBQW1CLGNBQWM7QUFDbkQsZ0JBQWMsSUFBSSxvQkFBb0Isc0JBQXNCO0FBQzVELGdCQUFjLElBQUksbUJBQW1CLGNBQWMsc0JBQXNCLEdBQUcsYUFBYSxnQkFBZ0IsQ0FBQyxDQUFDO0FBRTNHLEtBQUcsTUFBTSxlQUFlLGVBQWUsT0FBTyxLQUFLO0FBRW5ELFNBQU8sYUFBYTtBQUN4QjtBQUVPLGdCQUFTLDBCQUEwQjtBQUUxQztBQUVBLFNBQVMsU0FBUyxJQUFRLFFBQWdCLGVBQXVCO0FBRTdELGFBQVcsR0FBRyxrQkFBa0IsTUFBTTtBQUN0QyxhQUFXLEdBQUcsd0JBQXdCLE1BQU07QUFDNUMsa0JBQWdCLEdBQUcsa0JBQWtCLE1BQU07QUFFM0MsV0FBUyxHQUFHLDBCQUEwQixNQUFNO0FBQzVDLFdBQVMsR0FBRyx1QkFBdUIsTUFBTTtBQUV6QyxXQUFTLEdBQUcsZ0JBQWdCLE1BQU07QUFDbEMsV0FBUyxHQUFHLGlCQUFpQixNQUFNO0FBQ25DLFlBQVUsU0FBUztBQUduQixvQkFBa0IsV0FBVztBQUM3QixNQUFJLE1BQU0sZUFBZSxLQUFLLG1CQUFtQjtBQUFVLHNCQUFrQjtBQUU3RSxtQkFBaUIsS0FBSyxLQUFLLEdBQUcsY0FBYyxRQUFRLGVBQWUsQ0FBQztBQUVwRSwyQkFBeUIsS0FBSyxNQUFNLFNBQVMsR0FBRywwQkFBMEIsTUFBTSxLQUFLLElBQUk7QUFFekYsbUJBQWlCLEdBQUcsWUFBWSxNQUFNO0FBQ3RDLGdCQUFjLEtBQUssS0FBSyxnQkFBZ0IsY0FBYztBQUN0RCxNQUFJLE1BQU0sV0FBVyxLQUFLLGVBQWU7QUFBVSxrQkFBYztBQUNqRSxNQUFJLE1BQU0sY0FBYyxLQUFLLGtCQUFrQjtBQUFVLHFCQUFpQjtBQUUxRSxpQkFBZSxrQ0FBa0MsU0FBUztBQUMxRCxpQkFBZSxNQUFNLElBQUksT0FBTyxhQUFhLFNBQVMsQ0FBQyxJQUFJO0FBQy9EO0FBRUEsU0FBUyxjQUFjLElBQVEsT0FBZSxTQUFTLE1BQU07QUFDekQsTUFBSTtBQUFRLFlBQVEsTUFBTztBQUMzQixRQUFNLFNBQVMsU0FBUyxJQUFJO0FBQzVCLEtBQUc7QUFBQSxJQUNDLGVBQ0ksT0FDQSxPQUFPLFFBQ1AsUUFDQSxJQUFJLE9BQU8sYUFBYSxTQUFTLE1BQU0sU0FBUyxNQUFNLElBQ3RELGVBQ0EsTUFDQSxPQUFPO0FBQUEsRUFDZjtBQUNKO0FBRU8sZ0JBQVMsb0JBQW9CLElBQVE7QUFDeEMsUUFBTSxRQUFRLDBCQUEwQixFQUFFO0FBRTFDLE1BQUksZUFBZTtBQUNuQixXQUFTLElBQUksR0FBRyxJQUFJLE1BQU0sUUFBUSxLQUFLO0FBQ25DLFVBQU0sT0FBTyxNQUFNLENBQUM7QUFFcEIsVUFBTSxZQUFZLEdBQUcsR0FBRyxLQUFLLElBQUk7QUFFakMsY0FBVSxRQUFRLENBQUMsWUFBWTtBQUMzQixzQkFBZ0IsUUFBUTtBQUFBLElBQzVCLENBQUM7QUFBQSxFQUNMO0FBQ0EsU0FBTztBQUNYO0FBU08sZ0JBQVMsYUFBYSxNQUF3QjtBQUNqRCxTQUFPLENBQUMsR0FBRyxLQUFLLE9BQU87QUFDM0I7QUFFQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLEtBQUcsU0FBUztBQUNaLEtBQUcsS0FBSztBQUNSLEtBQUcsV0FBVyxLQUFLO0FBTW5CLE1BQUksR0FBRyxLQUFLLFVBQVUsR0FBRztBQUNyQixXQUFPLE1BQU07QUFDVCxTQUFHLFNBQVM7QUFDWixZQUFNLFFBQVEsaUJBQWlCLElBQUksR0FBRyxLQUFLLENBQUMsRUFBRSxTQUFTLEdBQUcsR0FBRztBQUM3RCxTQUFHLFlBQVksUUFBUSxLQUFLLElBQUksR0FBRztBQUNuQyxZQUFNLEdBQUcsTUFBTSxHQUFHO0FBQUEsSUFDdEI7QUFBQSxFQUNKLE9BQU87QUFDSCxXQUFPLE1BQU07QUFDVCxTQUFHLFNBQVM7QUFDWixZQUFNLFNBQVMsR0FBRyxLQUFLLENBQUM7QUFDeEIsVUFBSSxXQUFXLGtCQUFrQjtBQUM3QixXQUFHLE1BQU0sc0NBQXNDO0FBQy9DLGNBQU0sR0FBRyxjQUFjLENBQUMsRUFBRSxVQUFVO0FBQ3BDO0FBQUEsTUFDSjtBQUNBLFlBQU0sUUFBUSxpQkFBaUIsSUFBSSxPQUFPLFNBQVMsR0FBRyxHQUFHO0FBQ3pELFNBQUcsWUFBWSxRQUFRLEtBQUssSUFBSSxHQUFHO0FBQ25DLFlBQU0sR0FBRyxNQUFNLEVBQUU7QUFBQSxJQUNyQjtBQUFBLEVBQ0o7QUFDSjsiLCJuYW1lcyI6W119\",\"filename\":\"serverStats.js\",\"server\":\"home\"}}],[\"bestServer.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { isHackable, nukeServer, serverScanner } from \\\"/lib.js\\\";\\nimport { Config } from \\\"/Config/Config.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  getBestServerList(ns, true);\\n}\\nexport function getBestServerList(ns, shouldPrint) {\\n  const serverList = serverScanner(ns);\\n  const servers = [];\\n  for (let i = 0; i < serverList.length; i++) {\\n    const serverName = serverList[i];\\n    if (!isHackable(ns, serverName))\\n      continue;\\n    nukeServer(ns, serverName);\\n    const maxMoney = ns.getServerMaxMoney(serverName);\\n    const hackingChance = ns.hackAnalyzeChance(serverName);\\n    let weakeningTime = ns.getWeakenTime(serverName);\\n    const maxRam = ns.getServerMaxRam(serverName);\\n    if (maxMoney < 1 || ns.getServerRequiredHackingLevel(serverName) > ns.getHackingLevel())\\n      continue;\\n    let score = maxMoney / ns.getServerMinSecurityLevel(serverName) / 1e6;\\n    if (ns.fileExists(\\\"formulas.exe\\\", \\\"home\\\")) {\\n      const server2 = ns.getServer(serverName);\\n      const player = ns.getPlayer();\\n      server2.hackDifficulty = server2.minDifficulty;\\n      const maxMoney2 = server2.moneyMax == void 0 ? 0 : server2.moneyMax;\\n      weakeningTime = ns.formulas.hacking.weakenTime(server2, player);\\n      score = maxMoney2 / weakeningTime * ns.formulas.hacking.hackChance(server2, player) / 1e3;\\n    } else {\\n      const serverLvl = ns.getServerRequiredHackingLevel(serverName);\\n      const playerLvl = ns.getHackingLevel();\\n      if (playerLvl / serverLvl < 2)\\n        score = 0;\\n    }\\n    const server = {\\n      name: serverName,\\n      maxMoney,\\n      hackingChance,\\n      weakeningTime,\\n      maxRam,\\n      availableRam: maxRam - ns.getServerUsedRam(serverName),\\n      score\\n    };\\n    servers.push(server);\\n  }\\n  servers.sort((a, b) => {\\n    return (b.score || 0) - (a.score || 0);\\n  });\\n  if (shouldPrint)\\n    printTable(ns, servers);\\n  return servers;\\n}\\nexport function getBestServer(ns) {\\n  if (Config.TARGET !== \\\"\\\")\\n    return Config.TARGET;\\n  else\\n    return getBestServerList(ns, false)[0].name;\\n}\\nexport function getBestHostByRamOptimized(ns) {\\n  const allHosts = [];\\n  const allServers = serverScanner(ns);\\n  for (let i = 0; i < allServers.length; i++) {\\n    const server = ns.getServer(allServers[i]);\\n    if (server.maxRam - server.ramUsed < 2)\\n      continue;\\n    if (!server.hasAdminRights)\\n      continue;\\n    const serverObj = {\\n      name: server.hostname,\\n      maxRam: server.maxRam,\\n      availableRam: server.maxRam - server.ramUsed,\\n      score: 0\\n    };\\n    if (serverObj.name === \\\"home\\\")\\n      serverObj.availableRam -= Config.HOME_FREE_RAM;\\n    allHosts.push(serverObj);\\n  }\\n  allHosts.sort((a, b) => {\\n    return a.availableRam - b.availableRam;\\n  });\\n  return allHosts;\\n}\\nexport function getBestHostByRam(ns) {\\n  const allHosts = getBestServerListCheap(ns, false).filter((server) => {\\n    return server.availableRam > 2;\\n  });\\n  const home = {\\n    name: \\\"home\\\",\\n    maxRam: ns.getServerMaxRam(\\\"home\\\") - Config.HOME_FREE_RAM,\\n    availableRam: ns.getServerMaxRam(\\\"home\\\") - ns.getServerUsedRam(\\\"home\\\") - Config.HOME_FREE_RAM,\\n    score: 0\\n  };\\n  allHosts.push(home);\\n  const purchasedServers = ns.getPurchasedServers();\\n  for (let i = 0; i < purchasedServers.length; i++) {\\n    const server = {\\n      name: purchasedServers[i],\\n      maxRam: ns.getServerMaxRam(purchasedServers[i]),\\n      availableRam: ns.getServerMaxRam(purchasedServers[i]) - ns.getServerUsedRam(purchasedServers[i]),\\n      score: 0\\n    };\\n    if (server.maxRam > 2) {\\n      allHosts.push(server);\\n    }\\n  }\\n  allHosts.sort((a, b) => {\\n    return a.availableRam - b.availableRam;\\n  });\\n  return allHosts;\\n}\\nexport function getBestServerListCheap(ns, shouldPrint) {\\n  const serverList = serverScanner(ns);\\n  const servers = [];\\n  for (let i = 0; i < serverList.length; i++) {\\n    const serverName = serverList[i];\\n    if (!isHackable(ns, serverName))\\n      continue;\\n    const maxMoney = ns.getServerMaxMoney(serverName);\\n    const maxRam = ns.getServerMaxRam(serverName);\\n    if (maxMoney < 1 || ns.getServerRequiredHackingLevel(serverList[i]) > ns.getHackingLevel())\\n      continue;\\n    const score = maxMoney / ns.getServerMinSecurityLevel(serverName) / 1e6;\\n    const server = {\\n      name: serverName,\\n      maxMoney,\\n      maxRam,\\n      availableRam: maxRam - ns.getServerUsedRam(serverName),\\n      score\\n    };\\n    servers.push(server);\\n  }\\n  servers.sort((a, b) => {\\n    return (b.score || 0) - (a.score || 0);\\n  });\\n  if (shouldPrint)\\n    printTable(ns, servers);\\n  return servers;\\n}\\nexport function printTable(ns, array) {\\n  const tableArray = [];\\n  for (let i = 0; i < array.length; i++) {\\n    if (array[i].maxMoney === void 0)\\n      array[i].maxMoney = 0;\\n    if (array[i].hackingChance === void 0)\\n      array[i].hackingChance = 0;\\n    if (array[i].weakeningTime === void 0)\\n      array[i].weakeningTime = 0;\\n    const server = {\\n      name: array[i].name,\\n      maxMoney: ns.formatNumber(Number(array[i].maxMoney)),\\n      hackingChance: ns.formatNumber(Number(array[i].hackingChance)),\\n      weakeningTime: ns.formatNumber(Number(array[i].weakeningTime) / 1e3),\\n      //ns.formatNumber(Number(array[i].weakeningTime), 4),\\n      score: ns.formatNumber(Number(array[i].score))\\n    };\\n    tableArray.push(server);\\n  }\\n  ns.print(\\\"╔════════════════════╦══════════╦════════╦═══════════╦═════════╗\\\");\\n  ns.print(\\\"║       server       ║   Max $  ║ chance ║ Weak time ║  score  ║\\\");\\n  ns.print(\\\"╠════════════════════╬══════════╬════════╬═══════════╬═════════╣\\\");\\n  for (let i = 0; i < tableArray.length; i++) {\\n    ns.print(\\n      \\\"║ \\\" + tableArray[i].name + space(tableArray[i].name.length, 0) + \\\"║ \\\" + tableArray[i].maxMoney + space(tableArray[i].maxMoney.length, 1) + \\\"║ \\\" + tableArray[i].hackingChance + space(tableArray[i].hackingChance.length, 2) + \\\"║ \\\" + tableArray[i].weakeningTime + space(tableArray[i].weakeningTime.length, 3) + \\\"║ \\\" + tableArray[i].score + space(tableArray[i].score.length, 4) + \\\"║\\\"\\n    );\\n  }\\n  ns.print(\\\"╚════════════════════╩══════════╩════════╩═══════════╩═════════╝\\\");\\n}\\nfunction space(len, colIndex) {\\n  const colLen = [19, 9, 7, 10, 8];\\n  const real = colLen[colIndex] - len;\\n  let str = \\\"\\\";\\n  for (let i = 0; i < real; i++) {\\n    str += \\\" \\\";\\n  }\\n  return str;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJlc3RTZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBpc0hhY2thYmxlLCBudWtlU2VydmVyLCBzZXJ2ZXJTY2FubmVyIH0gZnJvbSBcIi4vbGliLmpzXCI7XHJcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gXCIuL0NvbmZpZy9Db25maWcuanNcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU2VydmVyIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIG1heE1vbmV5PzogbnVtYmVyO1xyXG4gICAgaGFja2luZ0NoYW5jZT86IG51bWJlcjtcclxuICAgIHdlYWtlbmluZ1RpbWU/OiBudW1iZXI7XHJcbiAgICBtYXhSYW06IG51bWJlcjtcclxuICAgIGF2YWlsYWJsZVJhbTogbnVtYmVyO1xyXG4gICAgc2NvcmU6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBucy50YWlsKCk7XHJcbiAgICBucy5kaXNhYmxlTG9nKFwiQUxMXCIpO1xyXG4gICAgZ2V0QmVzdFNlcnZlckxpc3QobnMsIHRydWUpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVzdFNlcnZlckxpc3QobnM6IE5TLCBzaG91bGRQcmludDogYm9vbGVhbikge1xyXG4gICAgY29uc3Qgc2VydmVyTGlzdCA9IHNlcnZlclNjYW5uZXIobnMpO1xyXG5cclxuICAgIGNvbnN0IHNlcnZlcnM6IFNlcnZlcltdID0gW107XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZXJ2ZXJMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyTmFtZSA9IHNlcnZlckxpc3RbaV07XHJcbiAgICAgICAgaWYgKCFpc0hhY2thYmxlKG5zLCBzZXJ2ZXJOYW1lKSkgY29udGludWU7XHJcblxyXG4gICAgICAgIG51a2VTZXJ2ZXIobnMsIHNlcnZlck5hbWUpOyAvLyA1MCBtcyBmb3IgNTAwIGl0dGVyYXRpb25zXHJcblxyXG4gICAgICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyTmFtZSk7XHJcbiAgICAgICAgY29uc3QgaGFja2luZ0NoYW5jZSA9IG5zLmhhY2tBbmFseXplQ2hhbmNlKHNlcnZlck5hbWUpO1xyXG4gICAgICAgIGxldCB3ZWFrZW5pbmdUaW1lID0gbnMuZ2V0V2Vha2VuVGltZShzZXJ2ZXJOYW1lKTtcclxuICAgICAgICBjb25zdCBtYXhSYW0gPSBucy5nZXRTZXJ2ZXJNYXhSYW0oc2VydmVyTmFtZSk7XHJcblxyXG4gICAgICAgIC8vIGZpbHRlciBzZXJ2ZXIgd2l0aCBubyBtb25leSBvciB0aGUgaGFja2luZyBsZXZlbCBhYm92ZSBwbGF5ZXJzIGhhY2tpbmcgbGV2ZWxcclxuICAgICAgICBpZiAobWF4TW9uZXkgPCAxIHx8IG5zLmdldFNlcnZlclJlcXVpcmVkSGFja2luZ0xldmVsKHNlcnZlck5hbWUpID4gbnMuZ2V0SGFja2luZ0xldmVsKCkpIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICAvLyBjb25zdCBzY29yZSA9IChtYXhNb25leSAvICh3ZWFrZW5pbmdUaW1lICsgMykpICogaGFja2luZ0NoYW5jZSAqICgxIC8gd2Vha2VuaW5nVGltZSlcclxuICAgICAgICAvLyBjb25zdCBzY29yZSA9IG5zLmZvcm1hdE51bWJlcigoKG1heE1vbmV5IC8gKHdlYWtlbmluZ1RpbWUpKSAqIGhhY2tpbmdDaGFuY2UpIC8gMTAwMClcclxuXHJcbiAgICAgICAgbGV0IHNjb3JlID0gbWF4TW9uZXkgLyBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHNlcnZlck5hbWUpIC8gMTAwMDAwMDtcclxuXHJcbiAgICAgICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJmb3JtdWxhcy5leGVcIiwgXCJob21lXCIpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlcnZlciA9IG5zLmdldFNlcnZlcihzZXJ2ZXJOYW1lKTtcclxuICAgICAgICAgICAgY29uc3QgcGxheWVyID0gbnMuZ2V0UGxheWVyKCk7XHJcbiAgICAgICAgICAgIHNlcnZlci5oYWNrRGlmZmljdWx0eSA9IHNlcnZlci5taW5EaWZmaWN1bHR5O1xyXG4gICAgICAgICAgICBjb25zdCBtYXhNb25leSA9IHNlcnZlci5tb25leU1heCA9PSB1bmRlZmluZWQgPyAwIDogc2VydmVyLm1vbmV5TWF4O1xyXG4gICAgICAgICAgICB3ZWFrZW5pbmdUaW1lID0gbnMuZm9ybXVsYXMuaGFja2luZy53ZWFrZW5UaW1lKHNlcnZlciwgcGxheWVyKTtcclxuICAgICAgICAgICAgc2NvcmUgPSAoKG1heE1vbmV5IC8gd2Vha2VuaW5nVGltZSkgKiBucy5mb3JtdWxhcy5oYWNraW5nLmhhY2tDaGFuY2Uoc2VydmVyLCBwbGF5ZXIpKSAvIDEwMDA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3Qgc2VydmVyTHZsID0gbnMuZ2V0U2VydmVyUmVxdWlyZWRIYWNraW5nTGV2ZWwoc2VydmVyTmFtZSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHBsYXllckx2bCA9IG5zLmdldEhhY2tpbmdMZXZlbCgpO1xyXG4gICAgICAgICAgICBpZiAocGxheWVyTHZsIC8gc2VydmVyTHZsIDwgMikgc2NvcmUgPSAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3Qgc2VydmVyOiBTZXJ2ZXIgPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IHNlcnZlck5hbWUsXHJcbiAgICAgICAgICAgIG1heE1vbmV5OiBtYXhNb25leSxcclxuICAgICAgICAgICAgaGFja2luZ0NoYW5jZTogaGFja2luZ0NoYW5jZSxcclxuICAgICAgICAgICAgd2Vha2VuaW5nVGltZTogd2Vha2VuaW5nVGltZSxcclxuICAgICAgICAgICAgbWF4UmFtOiBtYXhSYW0sXHJcbiAgICAgICAgICAgIGF2YWlsYWJsZVJhbTogbWF4UmFtIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShzZXJ2ZXJOYW1lKSxcclxuICAgICAgICAgICAgc2NvcmU6IHNjb3JlLFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHNlcnZlcnMucHVzaChzZXJ2ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIHNlcnZlcnMuc29ydCgoYSwgYikgPT4ge1xyXG4gICAgICAgIHJldHVybiAoYi5zY29yZSB8fCAwKSAtIChhLnNjb3JlIHx8IDApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKHNob3VsZFByaW50KSBwcmludFRhYmxlKG5zLCBzZXJ2ZXJzKTtcclxuXHJcbiAgICByZXR1cm4gc2VydmVycztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEJlc3RTZXJ2ZXIobnM6IE5TKTogc3RyaW5nIHtcclxuICAgIGlmIChDb25maWcuVEFSR0VUICE9PSBcIlwiKSByZXR1cm4gQ29uZmlnLlRBUkdFVDtcclxuICAgIGVsc2UgcmV0dXJuIGdldEJlc3RTZXJ2ZXJMaXN0KG5zLCBmYWxzZSlbMF0ubmFtZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEJlc3RIb3N0QnlSYW1PcHRpbWl6ZWQobnM6IE5TKTogU2VydmVyW10ge1xyXG4gICAgY29uc3QgYWxsSG9zdHM6IFNlcnZlcltdID0gW107XHJcbiAgICBjb25zdCBhbGxTZXJ2ZXJzID0gc2VydmVyU2Nhbm5lcihucyk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxTZXJ2ZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyID0gbnMuZ2V0U2VydmVyKGFsbFNlcnZlcnNbaV0pO1xyXG5cclxuICAgICAgICBpZiAoc2VydmVyLm1heFJhbSAtIHNlcnZlci5yYW1Vc2VkIDwgMikgY29udGludWU7XHJcbiAgICAgICAgaWYgKCFzZXJ2ZXIuaGFzQWRtaW5SaWdodHMpIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICBjb25zdCBzZXJ2ZXJPYmo6IFNlcnZlciA9IHtcclxuICAgICAgICAgICAgbmFtZTogc2VydmVyLmhvc3RuYW1lLFxyXG4gICAgICAgICAgICBtYXhSYW06IHNlcnZlci5tYXhSYW0sXHJcbiAgICAgICAgICAgIGF2YWlsYWJsZVJhbTogc2VydmVyLm1heFJhbSAtIHNlcnZlci5yYW1Vc2VkLFxyXG4gICAgICAgICAgICBzY29yZTogMCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChzZXJ2ZXJPYmoubmFtZSA9PT0gXCJob21lXCIpIHNlcnZlck9iai5hdmFpbGFibGVSYW0gLT0gQ29uZmlnLkhPTUVfRlJFRV9SQU07XHJcbiAgICAgICAgYWxsSG9zdHMucHVzaChzZXJ2ZXJPYmopO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHNvcnQgYnkgcmFtIGluIGFzY2VuZGluZyBvcmRlclxyXG4gICAgYWxsSG9zdHMuc29ydCgoYSwgYikgPT4ge1xyXG4gICAgICAgIHJldHVybiBhLmF2YWlsYWJsZVJhbSAtIGIuYXZhaWxhYmxlUmFtO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGFsbEhvc3RzO1xyXG59XHJcblxyXG4vKipcclxuICogQGRlcHJlY2F0ZWQgdXNlIGdldEJlc3RIb3N0QnlSYW1PcHRpbWl6ZWQgaW5zdGVhZFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEJlc3RIb3N0QnlSYW0obnM6IE5TKTogU2VydmVyW10ge1xyXG4gICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0U2VydmVyTGlzdENoZWFwKG5zLCBmYWxzZSkuZmlsdGVyKChzZXJ2ZXIpID0+IHtcclxuICAgICAgICByZXR1cm4gc2VydmVyLmF2YWlsYWJsZVJhbSA+IDI7XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBob21lOiBTZXJ2ZXIgPSB7XHJcbiAgICAgICAgbmFtZTogXCJob21lXCIsXHJcbiAgICAgICAgbWF4UmFtOiBucy5nZXRTZXJ2ZXJNYXhSYW0oXCJob21lXCIpIC0gQ29uZmlnLkhPTUVfRlJFRV9SQU0sXHJcbiAgICAgICAgYXZhaWxhYmxlUmFtOiBucy5nZXRTZXJ2ZXJNYXhSYW0oXCJob21lXCIpIC0gbnMuZ2V0U2VydmVyVXNlZFJhbShcImhvbWVcIikgLSBDb25maWcuSE9NRV9GUkVFX1JBTSxcclxuICAgICAgICBzY29yZTogMCxcclxuICAgIH07IC8vIDEwIHNvbWUgc2FmZXR5IG1hcmdpblxyXG4gICAgYWxsSG9zdHMucHVzaChob21lKTtcclxuXHJcbiAgICBjb25zdCBwdXJjaGFzZWRTZXJ2ZXJzID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVycygpO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwdXJjaGFzZWRTZXJ2ZXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyOiBTZXJ2ZXIgPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IHB1cmNoYXNlZFNlcnZlcnNbaV0sXHJcbiAgICAgICAgICAgIG1heFJhbTogbnMuZ2V0U2VydmVyTWF4UmFtKHB1cmNoYXNlZFNlcnZlcnNbaV0pLFxyXG4gICAgICAgICAgICBhdmFpbGFibGVSYW06IG5zLmdldFNlcnZlck1heFJhbShwdXJjaGFzZWRTZXJ2ZXJzW2ldKSAtIG5zLmdldFNlcnZlclVzZWRSYW0ocHVyY2hhc2VkU2VydmVyc1tpXSksXHJcbiAgICAgICAgICAgIHNjb3JlOiAwLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKHNlcnZlci5tYXhSYW0gPiAyKSB7XHJcbiAgICAgICAgICAgIGFsbEhvc3RzLnB1c2goc2VydmVyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gc29ydCBieSByYW0gaW4gYXNjZW5kaW5nIG9yZGVyXHJcbiAgICBhbGxIb3N0cy5zb3J0KChhLCBiKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGEuYXZhaWxhYmxlUmFtIC0gYi5hdmFpbGFibGVSYW07XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gYWxsSG9zdHM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRCZXN0U2VydmVyTGlzdENoZWFwKG5zOiBOUywgc2hvdWxkUHJpbnQ6IGJvb2xlYW4pOiBTZXJ2ZXJbXSB7XHJcbiAgICBjb25zdCBzZXJ2ZXJMaXN0ID0gc2VydmVyU2Nhbm5lcihucyk7XHJcblxyXG4gICAgY29uc3Qgc2VydmVyczogU2VydmVyW10gPSBbXTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlcnZlckxpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCBzZXJ2ZXJOYW1lID0gc2VydmVyTGlzdFtpXTtcclxuICAgICAgICAvLyBjb25zdCBzbyA9IG5zLmdldFNlcnZlcihzZXJ2ZXJOYW1lKTtcclxuICAgICAgICAvLyBjb25zdCBwbGF5ZXIgPSBucy5nZXRQbGF5ZXIoKTtcclxuXHJcbiAgICAgICAgaWYgKCFpc0hhY2thYmxlKG5zLCBzZXJ2ZXJOYW1lKSkgY29udGludWU7XHJcblxyXG4gICAgICAgIC8vIGNvbnN0IGNhbk9wZW5Qb3J0cyA9IHNvLm51bU9wZW5Qb3J0c1JlcXVpcmVkIDw9IGdldE51bUhhY2tzKG5zKTtcclxuICAgICAgICAvLyBjb25zdCBjYW5IYWNrID0gc28ucmVxdWlyZWRIYWNraW5nU2tpbGwgPD0gcGxheWVyLnNraWxscy5oYWNraW5nO1xyXG4gICAgICAgIC8vIGlmICghKGNhbk9wZW5Qb3J0cyAmJiBjYW5IYWNrKSkgY29udGludWU7XHJcblxyXG4gICAgICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyTmFtZSk7XHJcbiAgICAgICAgY29uc3QgbWF4UmFtID0gbnMuZ2V0U2VydmVyTWF4UmFtKHNlcnZlck5hbWUpO1xyXG5cclxuICAgICAgICAvLyBmaWx0ZXIgc2VydmVyIHdpdGggbm8gbW9uZXkgb3IgdGhlIGhhY2tpbmcgbGV2ZWwgYWJvdmUgcGxheWVycyBoYWNraW5nIGxldmVsXHJcbiAgICAgICAgaWYgKG1heE1vbmV5IDwgMSB8fCBucy5nZXRTZXJ2ZXJSZXF1aXJlZEhhY2tpbmdMZXZlbChzZXJ2ZXJMaXN0W2ldKSA+IG5zLmdldEhhY2tpbmdMZXZlbCgpKSBjb250aW51ZTtcclxuXHJcbiAgICAgICAgY29uc3Qgc2NvcmUgPSBtYXhNb25leSAvIG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc2VydmVyTmFtZSkgLyAxMDAwMDAwO1xyXG5cclxuICAgICAgICBjb25zdCBzZXJ2ZXI6IFNlcnZlciA9IHtcclxuICAgICAgICAgICAgbmFtZTogc2VydmVyTmFtZSxcclxuICAgICAgICAgICAgbWF4TW9uZXk6IG1heE1vbmV5LFxyXG4gICAgICAgICAgICBtYXhSYW06IG1heFJhbSxcclxuICAgICAgICAgICAgYXZhaWxhYmxlUmFtOiBtYXhSYW0gLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKHNlcnZlck5hbWUpLFxyXG4gICAgICAgICAgICBzY29yZTogc2NvcmUsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBzZXJ2ZXJzLnB1c2goc2VydmVyKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXJ2ZXJzLnNvcnQoKGEsIGIpID0+IHtcclxuICAgICAgICByZXR1cm4gKGIuc2NvcmUgfHwgMCkgLSAoYS5zY29yZSB8fCAwKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGlmIChzaG91bGRQcmludCkgcHJpbnRUYWJsZShucywgc2VydmVycyk7XHJcblxyXG4gICAgcmV0dXJuIHNlcnZlcnM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcmludFRhYmxlKG5zOiBOUywgYXJyYXk6IFNlcnZlcltdKSB7XHJcbiAgICAvLyBzYW5pdHkgY2hlY2sgKyBudW1iZXIgZm9ybWF0dGluZ1xyXG4gICAgaW50ZXJmYWNlIFRhYmxlU2VydmVyIHtcclxuICAgICAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICAgICAgbWF4TW9uZXk6IHN0cmluZztcclxuICAgICAgICBoYWNraW5nQ2hhbmNlOiBzdHJpbmc7XHJcbiAgICAgICAgd2Vha2VuaW5nVGltZTogc3RyaW5nO1xyXG4gICAgICAgIHNjb3JlOiBzdHJpbmc7XHJcbiAgICB9XHJcbiAgICBjb25zdCB0YWJsZUFycmF5OiBUYWJsZVNlcnZlcltdID0gW107XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChhcnJheVtpXS5tYXhNb25leSA9PT0gdW5kZWZpbmVkKSBhcnJheVtpXS5tYXhNb25leSA9IDA7XHJcbiAgICAgICAgaWYgKGFycmF5W2ldLmhhY2tpbmdDaGFuY2UgPT09IHVuZGVmaW5lZCkgYXJyYXlbaV0uaGFja2luZ0NoYW5jZSA9IDA7XHJcbiAgICAgICAgaWYgKGFycmF5W2ldLndlYWtlbmluZ1RpbWUgPT09IHVuZGVmaW5lZCkgYXJyYXlbaV0ud2Vha2VuaW5nVGltZSA9IDA7XHJcblxyXG4gICAgICAgIGNvbnN0IHNlcnZlcjogVGFibGVTZXJ2ZXIgPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IGFycmF5W2ldLm5hbWUsXHJcbiAgICAgICAgICAgIG1heE1vbmV5OiBucy5mb3JtYXROdW1iZXIoTnVtYmVyKGFycmF5W2ldLm1heE1vbmV5KSksXHJcbiAgICAgICAgICAgIGhhY2tpbmdDaGFuY2U6IG5zLmZvcm1hdE51bWJlcihOdW1iZXIoYXJyYXlbaV0uaGFja2luZ0NoYW5jZSkpLFxyXG4gICAgICAgICAgICB3ZWFrZW5pbmdUaW1lOiBucy5mb3JtYXROdW1iZXIoTnVtYmVyKGFycmF5W2ldLndlYWtlbmluZ1RpbWUpIC8gMTAwMCksIC8vbnMuZm9ybWF0TnVtYmVyKE51bWJlcihhcnJheVtpXS53ZWFrZW5pbmdUaW1lKSwgNCksXHJcbiAgICAgICAgICAgIHNjb3JlOiBucy5mb3JtYXROdW1iZXIoTnVtYmVyKGFycmF5W2ldLnNjb3JlKSksXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0YWJsZUFycmF5LnB1c2goc2VydmVyKTtcclxuICAgIH1cclxuXHJcbiAgICBucy5wcmludChcIuKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVpuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVpuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVpuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVpuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVl1wiKTtcclxuICAgIG5zLnByaW50KFwi4pWRICAgICAgIHNlcnZlciAgICAgICDilZEgICBNYXggJCAg4pWRIGNoYW5jZSDilZEgV2VhayB0aW1lIOKVkSAgc2NvcmUgIOKVkVwiKTtcclxuICAgIG5zLnByaW50KFwi4pWg4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWs4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWs4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWs4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWs4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWjXCIpO1xyXG4gICAgLy8gcG9sbHV0aW5nIHRhYmxlIHdpdGggZGF0YVxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YWJsZUFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgIFwi4pWRIFwiICtcclxuICAgICAgICAgICAgICAgIHRhYmxlQXJyYXlbaV0ubmFtZSArXHJcbiAgICAgICAgICAgICAgICBzcGFjZSh0YWJsZUFycmF5W2ldLm5hbWUubGVuZ3RoLCAwKSArXHJcbiAgICAgICAgICAgICAgICBcIuKVkSBcIiArXHJcbiAgICAgICAgICAgICAgICB0YWJsZUFycmF5W2ldLm1heE1vbmV5ICtcclxuICAgICAgICAgICAgICAgIHNwYWNlKHRhYmxlQXJyYXlbaV0ubWF4TW9uZXkubGVuZ3RoLCAxKSArXHJcbiAgICAgICAgICAgICAgICBcIuKVkSBcIiArXHJcbiAgICAgICAgICAgICAgICB0YWJsZUFycmF5W2ldLmhhY2tpbmdDaGFuY2UgK1xyXG4gICAgICAgICAgICAgICAgc3BhY2UodGFibGVBcnJheVtpXS5oYWNraW5nQ2hhbmNlLmxlbmd0aCwgMikgK1xyXG4gICAgICAgICAgICAgICAgXCLilZEgXCIgK1xyXG4gICAgICAgICAgICAgICAgdGFibGVBcnJheVtpXS53ZWFrZW5pbmdUaW1lICtcclxuICAgICAgICAgICAgICAgIHNwYWNlKHRhYmxlQXJyYXlbaV0ud2Vha2VuaW5nVGltZS5sZW5ndGgsIDMpICtcclxuICAgICAgICAgICAgICAgIFwi4pWRIFwiICtcclxuICAgICAgICAgICAgICAgIHRhYmxlQXJyYXlbaV0uc2NvcmUgK1xyXG4gICAgICAgICAgICAgICAgc3BhY2UodGFibGVBcnJheVtpXS5zY29yZS5sZW5ndGgsIDQpICtcclxuICAgICAgICAgICAgICAgIFwi4pWRXCIsXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBucy5wcmludChcIuKVmuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVqeKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVqeKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVqeKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVqeKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVnVwiKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc3BhY2UobGVuOiBudW1iZXIsIGNvbEluZGV4OiBudW1iZXIpIHtcclxuICAgIC8vIHdpdGggb2YgdGhlIGNlbGwgY29udGVudFxyXG4gICAgY29uc3QgY29sTGVuID0gWzE5LCA5LCA3LCAxMCwgOF07XHJcbiAgICBjb25zdCByZWFsID0gY29sTGVuW2NvbEluZGV4XSAtIGxlbjtcclxuICAgIGxldCBzdHIgPSBcIlwiO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZWFsOyBpKyspIHtcclxuICAgICAgICBzdHIgKz0gXCIgXCI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc3RyO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBRUEsU0FBUyxZQUFZLFlBQVkscUJBQXFCO0FBQ3RELFNBQVMsY0FBYztBQVl2QixzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLEtBQUcsS0FBSztBQUNSLEtBQUcsV0FBVyxLQUFLO0FBQ25CLG9CQUFrQixJQUFJLElBQUk7QUFDOUI7QUFFTyxnQkFBUyxrQkFBa0IsSUFBUSxhQUFzQjtBQUM1RCxRQUFNLGFBQWEsY0FBYyxFQUFFO0FBRW5DLFFBQU0sVUFBb0IsQ0FBQztBQUUzQixXQUFTLElBQUksR0FBRyxJQUFJLFdBQVcsUUFBUSxLQUFLO0FBQ3hDLFVBQU0sYUFBYSxXQUFXLENBQUM7QUFDL0IsUUFBSSxDQUFDLFdBQVcsSUFBSSxVQUFVO0FBQUc7QUFFakMsZUFBVyxJQUFJLFVBQVU7QUFFekIsVUFBTSxXQUFXLEdBQUcsa0JBQWtCLFVBQVU7QUFDaEQsVUFBTSxnQkFBZ0IsR0FBRyxrQkFBa0IsVUFBVTtBQUNyRCxRQUFJLGdCQUFnQixHQUFHLGNBQWMsVUFBVTtBQUMvQyxVQUFNLFNBQVMsR0FBRyxnQkFBZ0IsVUFBVTtBQUc1QyxRQUFJLFdBQVcsS0FBSyxHQUFHLDhCQUE4QixVQUFVLElBQUksR0FBRyxnQkFBZ0I7QUFBRztBQUt6RixRQUFJLFFBQVEsV0FBVyxHQUFHLDBCQUEwQixVQUFVLElBQUk7QUFFbEUsUUFBSSxHQUFHLFdBQVcsZ0JBQWdCLE1BQU0sR0FBRztBQUN2QyxZQUFNQSxVQUFTLEdBQUcsVUFBVSxVQUFVO0FBQ3RDLFlBQU0sU0FBUyxHQUFHLFVBQVU7QUFDNUIsTUFBQUEsUUFBTyxpQkFBaUJBLFFBQU87QUFDL0IsWUFBTUMsWUFBV0QsUUFBTyxZQUFZLFNBQVksSUFBSUEsUUFBTztBQUMzRCxzQkFBZ0IsR0FBRyxTQUFTLFFBQVEsV0FBV0EsU0FBUSxNQUFNO0FBQzdELGNBQVVDLFlBQVcsZ0JBQWlCLEdBQUcsU0FBUyxRQUFRLFdBQVdELFNBQVEsTUFBTSxJQUFLO0FBQUEsSUFDNUYsT0FBTztBQUNILFlBQU0sWUFBWSxHQUFHLDhCQUE4QixVQUFVO0FBQzdELFlBQU0sWUFBWSxHQUFHLGdCQUFnQjtBQUNyQyxVQUFJLFlBQVksWUFBWTtBQUFHLGdCQUFRO0FBQUEsSUFDM0M7QUFFQSxVQUFNLFNBQWlCO0FBQUEsTUFDbkIsTUFBTTtBQUFBLE1BQ047QUFBQSxNQUNBO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBLGNBQWMsU0FBUyxHQUFHLGlCQUFpQixVQUFVO0FBQUEsTUFDckQ7QUFBQSxJQUNKO0FBRUEsWUFBUSxLQUFLLE1BQU07QUFBQSxFQUN2QjtBQUVBLFVBQVEsS0FBSyxDQUFDLEdBQUcsTUFBTTtBQUNuQixZQUFRLEVBQUUsU0FBUyxNQUFNLEVBQUUsU0FBUztBQUFBLEVBQ3hDLENBQUM7QUFFRCxNQUFJO0FBQWEsZUFBVyxJQUFJLE9BQU87QUFFdkMsU0FBTztBQUNYO0FBRU8sZ0JBQVMsY0FBYyxJQUFnQjtBQUMxQyxNQUFJLE9BQU8sV0FBVztBQUFJLFdBQU8sT0FBTztBQUFBO0FBQ25DLFdBQU8sa0JBQWtCLElBQUksS0FBSyxFQUFFLENBQUMsRUFBRTtBQUNoRDtBQUVPLGdCQUFTLDBCQUEwQixJQUFrQjtBQUN4RCxRQUFNLFdBQXFCLENBQUM7QUFDNUIsUUFBTSxhQUFhLGNBQWMsRUFBRTtBQUVuQyxXQUFTLElBQUksR0FBRyxJQUFJLFdBQVcsUUFBUSxLQUFLO0FBQ3hDLFVBQU0sU0FBUyxHQUFHLFVBQVUsV0FBVyxDQUFDLENBQUM7QUFFekMsUUFBSSxPQUFPLFNBQVMsT0FBTyxVQUFVO0FBQUc7QUFDeEMsUUFBSSxDQUFDLE9BQU87QUFBZ0I7QUFFNUIsVUFBTSxZQUFvQjtBQUFBLE1BQ3RCLE1BQU0sT0FBTztBQUFBLE1BQ2IsUUFBUSxPQUFPO0FBQUEsTUFDZixjQUFjLE9BQU8sU0FBUyxPQUFPO0FBQUEsTUFDckMsT0FBTztBQUFBLElBQ1g7QUFDQSxRQUFJLFVBQVUsU0FBUztBQUFRLGdCQUFVLGdCQUFnQixPQUFPO0FBQ2hFLGFBQVMsS0FBSyxTQUFTO0FBQUEsRUFDM0I7QUFHQSxXQUFTLEtBQUssQ0FBQyxHQUFHLE1BQU07QUFDcEIsV0FBTyxFQUFFLGVBQWUsRUFBRTtBQUFBLEVBQzlCLENBQUM7QUFFRCxTQUFPO0FBQ1g7QUFLTyxnQkFBUyxpQkFBaUIsSUFBa0I7QUFDL0MsUUFBTSxXQUFXLHVCQUF1QixJQUFJLEtBQUssRUFBRSxPQUFPLENBQUMsV0FBVztBQUNsRSxXQUFPLE9BQU8sZUFBZTtBQUFBLEVBQ2pDLENBQUM7QUFFRCxRQUFNLE9BQWU7QUFBQSxJQUNqQixNQUFNO0FBQUEsSUFDTixRQUFRLEdBQUcsZ0JBQWdCLE1BQU0sSUFBSSxPQUFPO0FBQUEsSUFDNUMsY0FBYyxHQUFHLGdCQUFnQixNQUFNLElBQUksR0FBRyxpQkFBaUIsTUFBTSxJQUFJLE9BQU87QUFBQSxJQUNoRixPQUFPO0FBQUEsRUFDWDtBQUNBLFdBQVMsS0FBSyxJQUFJO0FBRWxCLFFBQU0sbUJBQW1CLEdBQUcsb0JBQW9CO0FBQ2hELFdBQVMsSUFBSSxHQUFHLElBQUksaUJBQWlCLFFBQVEsS0FBSztBQUM5QyxVQUFNLFNBQWlCO0FBQUEsTUFDbkIsTUFBTSxpQkFBaUIsQ0FBQztBQUFBLE1BQ3hCLFFBQVEsR0FBRyxnQkFBZ0IsaUJBQWlCLENBQUMsQ0FBQztBQUFBLE1BQzlDLGNBQWMsR0FBRyxnQkFBZ0IsaUJBQWlCLENBQUMsQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLGlCQUFpQixDQUFDLENBQUM7QUFBQSxNQUMvRixPQUFPO0FBQUEsSUFDWDtBQUNBLFFBQUksT0FBTyxTQUFTLEdBQUc7QUFDbkIsZUFBUyxLQUFLLE1BQU07QUFBQSxJQUN4QjtBQUFBLEVBQ0o7QUFHQSxXQUFTLEtBQUssQ0FBQyxHQUFHLE1BQU07QUFDcEIsV0FBTyxFQUFFLGVBQWUsRUFBRTtBQUFBLEVBQzlCLENBQUM7QUFFRCxTQUFPO0FBQ1g7QUFFTyxnQkFBUyx1QkFBdUIsSUFBUSxhQUFnQztBQUMzRSxRQUFNLGFBQWEsY0FBYyxFQUFFO0FBRW5DLFFBQU0sVUFBb0IsQ0FBQztBQUUzQixXQUFTLElBQUksR0FBRyxJQUFJLFdBQVcsUUFBUSxLQUFLO0FBQ3hDLFVBQU0sYUFBYSxXQUFXLENBQUM7QUFJL0IsUUFBSSxDQUFDLFdBQVcsSUFBSSxVQUFVO0FBQUc7QUFNakMsVUFBTSxXQUFXLEdBQUcsa0JBQWtCLFVBQVU7QUFDaEQsVUFBTSxTQUFTLEdBQUcsZ0JBQWdCLFVBQVU7QUFHNUMsUUFBSSxXQUFXLEtBQUssR0FBRyw4QkFBOEIsV0FBVyxDQUFDLENBQUMsSUFBSSxHQUFHLGdCQUFnQjtBQUFHO0FBRTVGLFVBQU0sUUFBUSxXQUFXLEdBQUcsMEJBQTBCLFVBQVUsSUFBSTtBQUVwRSxVQUFNLFNBQWlCO0FBQUEsTUFDbkIsTUFBTTtBQUFBLE1BQ047QUFBQSxNQUNBO0FBQUEsTUFDQSxjQUFjLFNBQVMsR0FBRyxpQkFBaUIsVUFBVTtBQUFBLE1BQ3JEO0FBQUEsSUFDSjtBQUNBLFlBQVEsS0FBSyxNQUFNO0FBQUEsRUFDdkI7QUFFQSxVQUFRLEtBQUssQ0FBQyxHQUFHLE1BQU07QUFDbkIsWUFBUSxFQUFFLFNBQVMsTUFBTSxFQUFFLFNBQVM7QUFBQSxFQUN4QyxDQUFDO0FBRUQsTUFBSTtBQUFhLGVBQVcsSUFBSSxPQUFPO0FBRXZDLFNBQU87QUFDWDtBQUVPLGdCQUFTLFdBQVcsSUFBUSxPQUFpQjtBQVNoRCxRQUFNLGFBQTRCLENBQUM7QUFFbkMsV0FBUyxJQUFJLEdBQUcsSUFBSSxNQUFNLFFBQVEsS0FBSztBQUNuQyxRQUFJLE1BQU0sQ0FBQyxFQUFFLGFBQWE7QUFBVyxZQUFNLENBQUMsRUFBRSxXQUFXO0FBQ3pELFFBQUksTUFBTSxDQUFDLEVBQUUsa0JBQWtCO0FBQVcsWUFBTSxDQUFDLEVBQUUsZ0JBQWdCO0FBQ25FLFFBQUksTUFBTSxDQUFDLEVBQUUsa0JBQWtCO0FBQVcsWUFBTSxDQUFDLEVBQUUsZ0JBQWdCO0FBRW5FLFVBQU0sU0FBc0I7QUFBQSxNQUN4QixNQUFNLE1BQU0sQ0FBQyxFQUFFO0FBQUEsTUFDZixVQUFVLEdBQUcsYUFBYSxPQUFPLE1BQU0sQ0FBQyxFQUFFLFFBQVEsQ0FBQztBQUFBLE1BQ25ELGVBQWUsR0FBRyxhQUFhLE9BQU8sTUFBTSxDQUFDLEVBQUUsYUFBYSxDQUFDO0FBQUEsTUFDN0QsZUFBZSxHQUFHLGFBQWEsT0FBTyxNQUFNLENBQUMsRUFBRSxhQUFhLElBQUksR0FBSTtBQUFBO0FBQUEsTUFDcEUsT0FBTyxHQUFHLGFBQWEsT0FBTyxNQUFNLENBQUMsRUFBRSxLQUFLLENBQUM7QUFBQSxJQUNqRDtBQUNBLGVBQVcsS0FBSyxNQUFNO0FBQUEsRUFDMUI7QUFFQSxLQUFHLE1BQU0sa0VBQWtFO0FBQzNFLEtBQUcsTUFBTSxrRUFBa0U7QUFDM0UsS0FBRyxNQUFNLGtFQUFrRTtBQUUzRSxXQUFTLElBQUksR0FBRyxJQUFJLFdBQVcsUUFBUSxLQUFLO0FBQ3hDLE9BQUc7QUFBQSxNQUNDLE9BQ0ksV0FBVyxDQUFDLEVBQUUsT0FDZCxNQUFNLFdBQVcsQ0FBQyxFQUFFLEtBQUssUUFBUSxDQUFDLElBQ2xDLE9BQ0EsV0FBVyxDQUFDLEVBQUUsV0FDZCxNQUFNLFdBQVcsQ0FBQyxFQUFFLFNBQVMsUUFBUSxDQUFDLElBQ3RDLE9BQ0EsV0FBVyxDQUFDLEVBQUUsZ0JBQ2QsTUFBTSxXQUFXLENBQUMsRUFBRSxjQUFjLFFBQVEsQ0FBQyxJQUMzQyxPQUNBLFdBQVcsQ0FBQyxFQUFFLGdCQUNkLE1BQU0sV0FBVyxDQUFDLEVBQUUsY0FBYyxRQUFRLENBQUMsSUFDM0MsT0FDQSxXQUFXLENBQUMsRUFBRSxRQUNkLE1BQU0sV0FBVyxDQUFDLEVBQUUsTUFBTSxRQUFRLENBQUMsSUFDbkM7QUFBQSxJQUNSO0FBQUEsRUFDSjtBQUVBLEtBQUcsTUFBTSxrRUFBa0U7QUFDL0U7QUFFQSxTQUFTLE1BQU0sS0FBYSxVQUFrQjtBQUUxQyxRQUFNLFNBQVMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUM7QUFDL0IsUUFBTSxPQUFPLE9BQU8sUUFBUSxJQUFJO0FBQ2hDLE1BQUksTUFBTTtBQUNWLFdBQVMsSUFBSSxHQUFHLElBQUksTUFBTSxLQUFLO0FBQzNCLFdBQU87QUFBQSxFQUNYO0FBQ0EsU0FBTztBQUNYOyIsIm5hbWVzIjpbInNlcnZlciIsIm1heE1vbmV5Il19\",\"filename\":\"bestServer.js\",\"server\":\"home\"}}],[\"loop/hackingAlgo.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRamOptimized } from \\\"/bestServer.js\\\";\\nimport { getHackThreads } from \\\"/lib.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  await hackServer(ns, \\\"foodnstuff\\\", 0.8);\\n}\\nexport async function hackServer(ns, target, threshold) {\\n  const safetyMarginMs = Config.DELAY_MARGIN_MS;\\n  const targetHackThreads = getHackThreads(ns, target, threshold);\\n  const hackingScriptRam = Config.HACK_SCRIPT_RAM;\\n  ns.print(\\n    \\\"total hack threads needed: \\\" + targetHackThreads + \\\" money available: \\\" + ns.getServerMoneyAvailable(target)\\n  );\\n  const allHosts = getBestHostByRamOptimized(ns);\\n  const totalMaxRam = allHosts.reduce((acc, server) => {\\n    return acc + server.maxRam;\\n  }, 0);\\n  const numRuns = Math.ceil(targetHackThreads / totalMaxRam);\\n  ns.print(\\\"total RAM: \\\" + totalMaxRam + \\\" numRuns: \\\" + numRuns + \\\"\\\\nthreads to finish: \\\" + targetHackThreads);\\n  let sumThreadsDone = 0;\\n  while (sumThreadsDone < targetHackThreads) {\\n    const hackingTime = ns.getHackTime(target);\\n    for (let i = 0; i < allHosts.length; i++) {\\n      if (sumThreadsDone >= targetHackThreads)\\n        break;\\n      const host = allHosts[i];\\n      const freeRam = host.maxRam - ns.getServerUsedRam(host.name);\\n      const numThreadsOnHost = Math.floor(freeRam / hackingScriptRam);\\n      ns.exec(\\\"hack.js\\\", host.name, numThreadsOnHost, target, 0);\\n      sumThreadsDone += numThreadsOnHost;\\n    }\\n    await ns.sleep(hackingTime + safetyMarginMs);\\n    ns.print(\\\"done with \\\" + sumThreadsDone + \\\"/\\\" + targetHackThreads + \\\" hacks\\\");\\n  }\\n  ns.print(\\\"Done hacking!\\\");\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2tpbmdBbGdvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbmZpZyB9IGZyb20gXCJAL0NvbmZpZy9Db25maWdcIjtcclxuaW1wb3J0IHsgZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZCB9IGZyb20gXCJAL2Jlc3RTZXJ2ZXJcIjtcclxuaW1wb3J0IHsgZ2V0SGFja1RocmVhZHMgfSBmcm9tIFwiQC9saWJcIjtcclxuaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcclxuICAgIG5zLnRhaWwoKTtcclxuICAgIGF3YWl0IGhhY2tTZXJ2ZXIobnMsIFwiZm9vZG5zdHVmZlwiLCAwLjgpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFja1NlcnZlcihuczogTlMsIHRhcmdldDogc3RyaW5nLCB0aHJlc2hvbGQ6IG51bWJlcikge1xyXG4gICAgY29uc3Qgc2FmZXR5TWFyZ2luTXMgPSBDb25maWcuREVMQVlfTUFSR0lOX01TO1xyXG5cclxuICAgIC8vY29uc3QgaGFja0NoYW5jZSA9IG5zLmhhY2tBbmFseXplQ2hhbmNlKHRhcmdldCkgLy8gdG9kb1xyXG4gICAgY29uc3QgdGFyZ2V0SGFja1RocmVhZHMgPSBnZXRIYWNrVGhyZWFkcyhucywgdGFyZ2V0LCB0aHJlc2hvbGQpO1xyXG4gICAgY29uc3QgaGFja2luZ1NjcmlwdFJhbSA9IENvbmZpZy5IQUNLX1NDUklQVF9SQU07XHJcblxyXG4gICAgbnMucHJpbnQoXHJcbiAgICAgICAgXCJ0b3RhbCBoYWNrIHRocmVhZHMgbmVlZGVkOiBcIiArIHRhcmdldEhhY2tUaHJlYWRzICsgXCIgbW9uZXkgYXZhaWxhYmxlOiBcIiArIG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCksXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFsbEhvc3RzID0gZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZChucyk7XHJcblxyXG4gICAgY29uc3QgdG90YWxNYXhSYW0gPSBhbGxIb3N0cy5yZWR1Y2UoKGFjYywgc2VydmVyKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGFjYyArIHNlcnZlci5tYXhSYW07XHJcbiAgICB9LCAwKTtcclxuICAgIGNvbnN0IG51bVJ1bnMgPSBNYXRoLmNlaWwodGFyZ2V0SGFja1RocmVhZHMgLyB0b3RhbE1heFJhbSk7XHJcblxyXG4gICAgbnMucHJpbnQoXCJ0b3RhbCBSQU06IFwiICsgdG90YWxNYXhSYW0gKyBcIiBudW1SdW5zOiBcIiArIG51bVJ1bnMgKyBcIlxcbnRocmVhZHMgdG8gZmluaXNoOiBcIiArIHRhcmdldEhhY2tUaHJlYWRzKTtcclxuXHJcbiAgICBsZXQgc3VtVGhyZWFkc0RvbmUgPSAwO1xyXG4gICAgd2hpbGUgKHN1bVRocmVhZHNEb25lIDwgdGFyZ2V0SGFja1RocmVhZHMpIHtcclxuICAgICAgICBjb25zdCBoYWNraW5nVGltZSA9IG5zLmdldEhhY2tUaW1lKHRhcmdldCk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxIb3N0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoc3VtVGhyZWFkc0RvbmUgPj0gdGFyZ2V0SGFja1RocmVhZHMpIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xyXG4gICAgICAgICAgICBjb25zdCBmcmVlUmFtID0gaG9zdC5tYXhSYW0gLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKGhvc3QubmFtZSk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBudW1UaHJlYWRzT25Ib3N0ID0gTWF0aC5mbG9vcihmcmVlUmFtIC8gaGFja2luZ1NjcmlwdFJhbSk7XHJcblxyXG4gICAgICAgICAgICBucy5leGVjKFwiaGFjay5qc1wiLCBob3N0Lm5hbWUsIG51bVRocmVhZHNPbkhvc3QsIHRhcmdldCwgMCk7XHJcbiAgICAgICAgICAgIHN1bVRocmVhZHNEb25lICs9IG51bVRocmVhZHNPbkhvc3Q7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKGhhY2tpbmdUaW1lICsgc2FmZXR5TWFyZ2luTXMpO1xyXG4gICAgICAgIG5zLnByaW50KFwiZG9uZSB3aXRoIFwiICsgc3VtVGhyZWFkc0RvbmUgKyBcIi9cIiArIHRhcmdldEhhY2tUaHJlYWRzICsgXCIgaGFja3NcIik7XHJcbiAgICB9XHJcblxyXG4gICAgbnMucHJpbnQoXCJEb25lIGhhY2tpbmchXCIpO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxjQUFjO0FBQ3ZCLFNBQVMsaUNBQWlDO0FBQzFDLFNBQVMsc0JBQXNCO0FBRy9CLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsUUFBTSxXQUFXLElBQUksY0FBYyxHQUFHO0FBQzFDO0FBRUEsc0JBQXNCLFdBQVcsSUFBUSxRQUFnQixXQUFtQjtBQUN4RSxRQUFNLGlCQUFpQixPQUFPO0FBRzlCLFFBQU0sb0JBQW9CLGVBQWUsSUFBSSxRQUFRLFNBQVM7QUFDOUQsUUFBTSxtQkFBbUIsT0FBTztBQUVoQyxLQUFHO0FBQUEsSUFDQyxnQ0FBZ0Msb0JBQW9CLHVCQUF1QixHQUFHLHdCQUF3QixNQUFNO0FBQUEsRUFDaEg7QUFFQSxRQUFNLFdBQVcsMEJBQTBCLEVBQUU7QUFFN0MsUUFBTSxjQUFjLFNBQVMsT0FBTyxDQUFDLEtBQUssV0FBVztBQUNqRCxXQUFPLE1BQU0sT0FBTztBQUFBLEVBQ3hCLEdBQUcsQ0FBQztBQUNKLFFBQU0sVUFBVSxLQUFLLEtBQUssb0JBQW9CLFdBQVc7QUFFekQsS0FBRyxNQUFNLGdCQUFnQixjQUFjLGVBQWUsVUFBVSwwQkFBMEIsaUJBQWlCO0FBRTNHLE1BQUksaUJBQWlCO0FBQ3JCLFNBQU8saUJBQWlCLG1CQUFtQjtBQUN2QyxVQUFNLGNBQWMsR0FBRyxZQUFZLE1BQU07QUFDekMsYUFBUyxJQUFJLEdBQUcsSUFBSSxTQUFTLFFBQVEsS0FBSztBQUN0QyxVQUFJLGtCQUFrQjtBQUFtQjtBQUV6QyxZQUFNLE9BQU8sU0FBUyxDQUFDO0FBQ3ZCLFlBQU0sVUFBVSxLQUFLLFNBQVMsR0FBRyxpQkFBaUIsS0FBSyxJQUFJO0FBRTNELFlBQU0sbUJBQW1CLEtBQUssTUFBTSxVQUFVLGdCQUFnQjtBQUU5RCxTQUFHLEtBQUssV0FBVyxLQUFLLE1BQU0sa0JBQWtCLFFBQVEsQ0FBQztBQUN6RCx3QkFBa0I7QUFBQSxJQUN0QjtBQUNBLFVBQU0sR0FBRyxNQUFNLGNBQWMsY0FBYztBQUMzQyxPQUFHLE1BQU0sZUFBZSxpQkFBaUIsTUFBTSxvQkFBb0IsUUFBUTtBQUFBLEVBQy9FO0FBRUEsS0FBRyxNQUFNLGVBQWU7QUFDNUI7IiwibmFtZXMiOltdfQ==\",\"filename\":\"loop/hackingAlgo.js\",\"server\":\"home\"}}],[\"loop/manager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getBestServerListCheap } from \\\"/bestServer.js\\\";\\nimport { Colors, nukeAll } from \\\"/lib.js\\\";\\nimport { hackServer } from \\\"/loop/hackingAlgo.js\\\";\\nimport { prepareServer } from \\\"/loop/prepareServer.js\\\";\\nlet lastTarget = \\\"\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  while (true) {\\n    const target = getBestServerListCheap(ns, true)[0].name;\\n    if (lastTarget != target) {\\n      nukeAll(ns);\\n      ns.print(\\\"found new best Server: \\\" + target);\\n    }\\n    lastTarget = target;\\n    await loopCycle(ns, target, 0.8);\\n  }\\n}\\nexport async function loopCycle(ns, target, threshold) {\\n  ns.print(Colors.CYAN + \\\"------------ PREPARING ------------\\\" + Colors.RESET);\\n  await prepareServer(ns, target, threshold);\\n  ns.print(Colors.CYAN + \\\"------------- HACKING -------------\\\" + Colors.RESET);\\n  await hackServer(ns, target, threshold);\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBnZXRCZXN0U2VydmVyTGlzdENoZWFwIH0gZnJvbSBcIi4uL2Jlc3RTZXJ2ZXIuanNcIjtcclxuaW1wb3J0IHsgQ29sb3JzLCBudWtlQWxsIH0gZnJvbSBcIi4uL2xpYi5qc1wiO1xyXG5pbXBvcnQgeyBoYWNrU2VydmVyIH0gZnJvbSBcIi4vaGFja2luZ0FsZ28uanNcIjtcclxuaW1wb3J0IHsgcHJlcGFyZVNlcnZlciB9IGZyb20gXCIuL3ByZXBhcmVTZXJ2ZXIuanNcIjtcclxuXHJcbmxldCBsYXN0VGFyZ2V0ID0gXCJcIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgbnMudGFpbCgpO1xyXG4gICAgbnMuZGlzYWJsZUxvZyhcIkFMTFwiKTtcclxuXHJcbiAgICAvLyBzdGVwczogV0dXSC1XR1dILS4uXHJcbiAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGdldEJlc3RTZXJ2ZXJMaXN0Q2hlYXAobnMsIHRydWUpWzBdLm5hbWU7XHJcbiAgICAgICAgaWYgKGxhc3RUYXJnZXQgIT0gdGFyZ2V0KSB7XHJcbiAgICAgICAgICAgIG51a2VBbGwobnMpO1xyXG4gICAgICAgICAgICBucy5wcmludChcImZvdW5kIG5ldyBiZXN0IFNlcnZlcjogXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsYXN0VGFyZ2V0ID0gdGFyZ2V0O1xyXG4gICAgICAgIGF3YWl0IGxvb3BDeWNsZShucywgdGFyZ2V0LCAwLjgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9vcEN5Y2xlKG5zOiBOUywgdGFyZ2V0OiBzdHJpbmcsIHRocmVzaG9sZDogbnVtYmVyKSB7XHJcbiAgICBucy5wcmludChDb2xvcnMuQ1lBTiArIFwiLS0tLS0tLS0tLS0tIFBSRVBBUklORyAtLS0tLS0tLS0tLS1cIiArIENvbG9ycy5SRVNFVCk7XHJcbiAgICBhd2FpdCBwcmVwYXJlU2VydmVyKG5zLCB0YXJnZXQsIHRocmVzaG9sZCk7XHJcblxyXG4gICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIi0tLS0tLS0tLS0tLS0gSEFDS0lORyAtLS0tLS0tLS0tLS0tXCIgKyBDb2xvcnMuUkVTRVQpO1xyXG4gICAgYXdhaXQgaGFja1NlcnZlcihucywgdGFyZ2V0LCB0aHJlc2hvbGQpO1xyXG59XHJcblxyXG4vKipcclxuIG5vdGVzOlxyXG4gd2Vha2VuIHJlbW92ZXMgMC4wNSBzZWMgbHZsXHJcbiBncm93IGFkZHMgMC4wMDQgc2VjIGx2bFxyXG5cclxuICovXHJcbiJdLCJtYXBwaW5ncyI6IkFBRUEsU0FBUyw4QkFBOEI7QUFDdkMsU0FBUyxRQUFRLGVBQWU7QUFDaEMsU0FBUyxrQkFBa0I7QUFDM0IsU0FBUyxxQkFBcUI7QUFFOUIsSUFBSSxhQUFhO0FBRWpCLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsS0FBRyxXQUFXLEtBQUs7QUFHbkIsU0FBTyxNQUFNO0FBQ1QsVUFBTSxTQUFTLHVCQUF1QixJQUFJLElBQUksRUFBRSxDQUFDLEVBQUU7QUFDbkQsUUFBSSxjQUFjLFFBQVE7QUFDdEIsY0FBUSxFQUFFO0FBQ1YsU0FBRyxNQUFNLDRCQUE0QixNQUFNO0FBQUEsSUFDL0M7QUFDQSxpQkFBYTtBQUNiLFVBQU0sVUFBVSxJQUFJLFFBQVEsR0FBRztBQUFBLEVBQ25DO0FBQ0o7QUFFQSxzQkFBc0IsVUFBVSxJQUFRLFFBQWdCLFdBQW1CO0FBQ3ZFLEtBQUcsTUFBTSxPQUFPLE9BQU8sd0NBQXdDLE9BQU8sS0FBSztBQUMzRSxRQUFNLGNBQWMsSUFBSSxRQUFRLFNBQVM7QUFFekMsS0FBRyxNQUFNLE9BQU8sT0FBTyx3Q0FBd0MsT0FBTyxLQUFLO0FBQzNFLFFBQU0sV0FBVyxJQUFJLFFBQVEsU0FBUztBQUMxQzsiLCJuYW1lcyI6W119\",\"filename\":\"loop/manager.js\",\"server\":\"home\"}}],[\"lib.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { PlayerManager } from \\\"/parallel/PlayerManager.js\\\";\\nexport var Colors = /* @__PURE__ */ ((Colors2) => {\\n  Colors2[\\\"RESET\\\"] = \\\"\\\\x1B[0m\\\";\\n  Colors2[\\\"BLACK\\\"] = \\\"\\\\x1B[30m\\\";\\n  Colors2[\\\"RED\\\"] = \\\"\\\\x1B[31m\\\";\\n  Colors2[\\\"GREEN\\\"] = \\\"\\\\x1B[32m\\\";\\n  Colors2[\\\"YELLOW\\\"] = \\\"\\\\x1B[33m\\\";\\n  Colors2[\\\"BLUE\\\"] = \\\"\\\\x1B[34m\\\";\\n  Colors2[\\\"MAGENTA\\\"] = \\\"\\\\x1B[35m\\\";\\n  Colors2[\\\"CYAN\\\"] = \\\"\\\\x1B[36m\\\";\\n  Colors2[\\\"WHITE\\\"] = \\\"\\\\x1B[37m\\\";\\n  Colors2[\\\"E_ORANGE\\\"] = \\\"\\\\x1B[38;5;178m\\\";\\n  return Colors2;\\n})(Colors || {});\\nexport function serverScanner(ns) {\\n  const uncheckedHosts = [\\\"home\\\"];\\n  const checkedHosts = [];\\n  for (let i = 0; i < uncheckedHosts.length; i++) {\\n    const newHosts = ns.scan(uncheckedHosts[i]);\\n    checkedHosts.push(uncheckedHosts[i]);\\n    for (let n = 0; n < newHosts.length; n++) {\\n      if (checkedHosts.includes(newHosts[n]) == false || uncheckedHosts.includes(newHosts[n]) == false) {\\n        uncheckedHosts.push(newHosts[n]);\\n      }\\n    }\\n  }\\n  return checkedHosts.sort();\\n}\\nexport function isHackable(ns, server) {\\n  if (ns.getServerNumPortsRequired(server) <= getNumHacks(ns) && ns.getServerRequiredHackingLevel(server) <= ns.getHackingLevel())\\n    return true;\\n  else\\n    return false;\\n}\\nexport function getNumHacks(ns) {\\n  let i = 0;\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\"))\\n    i++;\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\"))\\n    i++;\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\"))\\n    i++;\\n  if (ns.fileExists(\\\"SQLInject.exe\\\"))\\n    i++;\\n  return i;\\n}\\nexport function nukeAll(ns) {\\n  const hosts = serverScanner(ns);\\n  for (let i = 0; i < hosts.length; i++) {\\n    if (isHackable(ns, hosts[i]) || ns.getPurchasedServers().includes(hosts[i])) {\\n      openPorts(ns, hosts[i]);\\n      ns.nuke(hosts[i]);\\n      ns.scp(\\\"hack.js\\\", hosts[i]);\\n      ns.scp(\\\"grow.js\\\", hosts[i]);\\n      ns.scp(\\\"weaken.js\\\", hosts[i]);\\n    } else {\\n      continue;\\n    }\\n  }\\n}\\nexport function nukeServer(ns, server) {\\n  openPorts(ns, server);\\n  ns.nuke(server);\\n  ns.scp(\\\"hack.js\\\", server);\\n  ns.scp(\\\"grow.js\\\", server);\\n  ns.scp(\\\"weaken.js\\\", server);\\n}\\nexport function openPorts(ns, target) {\\n  if (ns.fileExists(\\\"BruteSSH.exe\\\"))\\n    ns.brutessh(target);\\n  if (ns.fileExists(\\\"FTPCrack.exe\\\"))\\n    ns.ftpcrack(target);\\n  if (ns.fileExists(\\\"HTTPWorm.exe\\\"))\\n    ns.httpworm(target);\\n  if (ns.fileExists(\\\"SQLInject.exe\\\"))\\n    ns.sqlinject(target);\\n}\\nexport function getTimeH(timestamp) {\\n  if (timestamp == void 0 || timestamp == null)\\n    timestamp = Date.now();\\n  const date = new Date(timestamp);\\n  date.setUTCHours(date.getUTCHours() + 1);\\n  const hours = date.getUTCHours().toString().padStart(2, \\\"0\\\");\\n  const minutes = date.getUTCMinutes().toString().padStart(2, \\\"0\\\");\\n  const seconds = date.getUTCSeconds().toString().padStart(2, \\\"0\\\");\\n  const milliseconds = date.getUTCMilliseconds().toString().padStart(3, \\\"0\\\");\\n  const formattedTime = `${hours}:${minutes}:${seconds}:${milliseconds}`;\\n  return formattedTime;\\n}\\nexport function getGrowThreads(ns, server) {\\n  const serverMaxMoney = ns.getServerMaxMoney(server);\\n  const serverCurrentMoney = ns.getServerMoneyAvailable(server);\\n  let moneyMultiplier = serverMaxMoney / serverCurrentMoney;\\n  if (isNaN(moneyMultiplier) || moneyMultiplier == Infinity)\\n    moneyMultiplier = serverMaxMoney;\\n  const serverGrowThreads = Math.ceil(ns.growthAnalyze(server, moneyMultiplier) * 1.01);\\n  return serverGrowThreads;\\n}\\nexport function getGrowThreadsThreshold(ns, server, threshold) {\\n  const maxMoney = ns.getServerMaxMoney(server);\\n  const minMoney = maxMoney * (1 - threshold);\\n  const moneyMultiplier = maxMoney / minMoney;\\n  const serverGrowThreads = Math.ceil(ns.growthAnalyze(server, moneyMultiplier) * 1.01);\\n  ns.print(serverGrowThreads + \\\" grows needed\\\");\\n  return serverGrowThreads;\\n}\\nexport function getWeakenThreadsAfterHack(ns, numHackThreads) {\\n  const hackSecLvlIncrease = ns.hackAnalyzeSecurity(numHackThreads);\\n  const serverWeakenThreads = Math.ceil(hackSecLvlIncrease / ns.weakenAnalyze(1));\\n  return serverWeakenThreads;\\n}\\nexport function getWeakenThreadsAfterGrow(ns, numGrowThreads) {\\n  const hackSecLvlIncrease = ns.growthAnalyzeSecurity(numGrowThreads);\\n  const serverWeakenThreads = Math.ceil(hackSecLvlIncrease / ns.weakenAnalyze(1));\\n  return serverWeakenThreads;\\n}\\nexport function getWeakenThreads(ns, server) {\\n  const serverSecLvl = ns.getServerSecurityLevel(server);\\n  const serverWeakenThreads = Math.ceil((serverSecLvl - ns.getServerMinSecurityLevel(server)) / ns.weakenAnalyze(1));\\n  return serverWeakenThreads;\\n}\\nexport function getHackThreads(ns, server, moneyHackThreshold) {\\n  const serverMaxMoney = ns.getServerMaxMoney(server);\\n  const lowerMoneyBound = serverMaxMoney * (1 - moneyHackThreshold);\\n  const hackAmount = serverMaxMoney - lowerMoneyBound;\\n  const serverHackThreads = Math.floor(ns.hackAnalyzeThreads(server, hackAmount));\\n  return serverHackThreads;\\n}\\nexport function getGrowThreadsFormulas(ns, server, hackThreads) {\\n  const serverObject = ns.getServer(server);\\n  const playerObject = PlayerManager.getInstance(ns).getPlayer();\\n  if (serverObject.moneyMax == void 0)\\n    return 0;\\n  serverObject.moneyAvailable = serverObject.moneyMax;\\n  serverObject.baseDifficulty = serverObject.minDifficulty;\\n  const percentPerHack = ns.formulas.hacking.hackPercent(serverObject, playerObject);\\n  const hackPercent = percentPerHack * hackThreads;\\n  serverObject.moneyAvailable = serverObject.moneyMax * (1 - hackPercent);\\n  serverObject.baseDifficulty = serverObject.minDifficulty;\\n  return Math.ceil(ns.formulas.hacking.growThreads(serverObject, playerObject, serverObject.moneyMax) * 1.01);\\n}\\nexport function getHackThreadsFormulas(ns, server, hackThreshold) {\\n  const serverObject = ns.getServer(server);\\n  const playerObject = PlayerManager.getInstance(ns).getPlayer();\\n  serverObject.baseDifficulty = serverObject.minDifficulty;\\n  serverObject.moneyAvailable = serverObject.moneyMax;\\n  return Math.floor(hackThreshold / ns.formulas.hacking.hackPercent(serverObject, playerObject));\\n}\\nexport function writeToPort(ns, port, data) {\\n  const currentData = ns.peek(port);\\n  if (currentData == \\\"NULL PORT DATA\\\") {\\n    ns.writePort(port, data);\\n  } else {\\n    ns.writePort(port, data);\\n    ns.readPort(port);\\n  }\\n}\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuaW1wb3J0IHsgUGxheWVyTWFuYWdlciB9IGZyb20gXCIuL3BhcmFsbGVsL1BsYXllck1hbmFnZXJcIjtcclxuXHJcbmV4cG9ydCBlbnVtIENvbG9ycyB7XHJcbiAgICBSRVNFVCA9IFwiXFx4MWJbMG1cIixcclxuICAgIEJMQUNLID0gXCJcXHgxYlszMG1cIixcclxuICAgIFJFRCA9IFwiXFx4MWJbMzFtXCIsXHJcbiAgICBHUkVFTiA9IFwiXFx4MWJbMzJtXCIsXHJcbiAgICBZRUxMT1cgPSBcIlxceDFiWzMzbVwiLFxyXG4gICAgQkxVRSA9IFwiXFx4MWJbMzRtXCIsXHJcbiAgICBNQUdFTlRBID0gXCJcXHgxYlszNW1cIixcclxuICAgIENZQU4gPSBcIlxceDFiWzM2bVwiLFxyXG4gICAgV0hJVEUgPSBcIlxceDFiWzM3bVwiLFxyXG4gICAgRV9PUkFOR0UgPSBcIlxceDFiWzM4OzU7MTc4bVwiLFxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2VydmVyU2Nhbm5lcihuczogTlMpIHtcclxuICAgIGNvbnN0IHVuY2hlY2tlZEhvc3RzID0gW1wiaG9tZVwiXTtcclxuICAgIGNvbnN0IGNoZWNrZWRIb3N0cyA9IFtdO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdW5jaGVja2VkSG9zdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCBuZXdIb3N0cyA9IG5zLnNjYW4odW5jaGVja2VkSG9zdHNbaV0pO1xyXG4gICAgICAgIGNoZWNrZWRIb3N0cy5wdXNoKHVuY2hlY2tlZEhvc3RzW2ldKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgbiA9IDA7IG4gPCBuZXdIb3N0cy5sZW5ndGg7IG4rKykge1xyXG4gICAgICAgICAgICBpZiAoY2hlY2tlZEhvc3RzLmluY2x1ZGVzKG5ld0hvc3RzW25dKSA9PSBmYWxzZSB8fCB1bmNoZWNrZWRIb3N0cy5pbmNsdWRlcyhuZXdIb3N0c1tuXSkgPT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgIHVuY2hlY2tlZEhvc3RzLnB1c2gobmV3SG9zdHNbbl0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjaGVja2VkSG9zdHMuc29ydCgpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNIYWNrYWJsZShuczogTlMsIHNlcnZlcjogc3RyaW5nKSB7XHJcbiAgICBpZiAoXHJcbiAgICAgICAgbnMuZ2V0U2VydmVyTnVtUG9ydHNSZXF1aXJlZChzZXJ2ZXIpIDw9IGdldE51bUhhY2tzKG5zKSAmJlxyXG4gICAgICAgIG5zLmdldFNlcnZlclJlcXVpcmVkSGFja2luZ0xldmVsKHNlcnZlcikgPD0gbnMuZ2V0SGFja2luZ0xldmVsKClcclxuICAgIClcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIGVsc2UgcmV0dXJuIGZhbHNlO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TnVtSGFja3MobnM6IE5TKSB7XHJcbiAgICBsZXQgaSA9IDA7XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cyhcIkJydXRlU1NILmV4ZVwiKSkgaSsrO1xyXG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJGVFBDcmFjay5leGVcIikpIGkrKztcclxuICAgIGlmIChucy5maWxlRXhpc3RzKFwiSFRUUFdvcm0uZXhlXCIpKSBpKys7XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cyhcIlNRTEluamVjdC5leGVcIikpIGkrKztcclxuICAgIHJldHVybiBpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbnVrZUFsbChuczogTlMpIHtcclxuICAgIGNvbnN0IGhvc3RzID0gc2VydmVyU2Nhbm5lcihucyk7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhvc3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgLy8gY2hlY2sgaWYgdGhlIGhvc3QgaXMgaGFja2FibGVcclxuICAgICAgICBpZiAoaXNIYWNrYWJsZShucywgaG9zdHNbaV0pIHx8IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKS5pbmNsdWRlcyhob3N0c1tpXSkpIHtcclxuICAgICAgICAgICAgLy8gVE9ETzogZ2V0UHVyY2hhc2VkU2VydmVycygpIGlzIG5vdCBuZWVkZWRcclxuICAgICAgICAgICAgb3BlblBvcnRzKG5zLCBob3N0c1tpXSk7XHJcbiAgICAgICAgICAgIG5zLm51a2UoaG9zdHNbaV0pO1xyXG5cclxuICAgICAgICAgICAgLy8gY29weSBhbGwgc2NyaXB0cyB0byB0aGUgc2VydmVyXHJcbiAgICAgICAgICAgIG5zLnNjcChcImhhY2suanNcIiwgaG9zdHNbaV0pO1xyXG4gICAgICAgICAgICBucy5zY3AoXCJncm93LmpzXCIsIGhvc3RzW2ldKTtcclxuICAgICAgICAgICAgbnMuc2NwKFwid2Vha2VuLmpzXCIsIGhvc3RzW2ldKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBudWtlU2VydmVyKG5zOiBOUywgc2VydmVyOiBzdHJpbmcpIHtcclxuICAgIG9wZW5Qb3J0cyhucywgc2VydmVyKTtcclxuICAgIG5zLm51a2Uoc2VydmVyKTtcclxuXHJcbiAgICBucy5zY3AoXCJoYWNrLmpzXCIsIHNlcnZlcik7XHJcbiAgICBucy5zY3AoXCJncm93LmpzXCIsIHNlcnZlcik7XHJcbiAgICBucy5zY3AoXCJ3ZWFrZW4uanNcIiwgc2VydmVyKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Qb3J0cyhuczogTlMsIHRhcmdldDogc3RyaW5nKSB7XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cyhcIkJydXRlU1NILmV4ZVwiKSkgbnMuYnJ1dGVzc2godGFyZ2V0KTtcclxuICAgIGlmIChucy5maWxlRXhpc3RzKFwiRlRQQ3JhY2suZXhlXCIpKSBucy5mdHBjcmFjayh0YXJnZXQpO1xyXG4gICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJIVFRQV29ybS5leGVcIikpIG5zLmh0dHB3b3JtKHRhcmdldCk7XHJcbiAgICBpZiAobnMuZmlsZUV4aXN0cyhcIlNRTEluamVjdC5leGVcIikpIG5zLnNxbGluamVjdCh0YXJnZXQpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGltZUgodGltZXN0YW1wPzogbnVtYmVyKSB7XHJcbiAgICBpZiAodGltZXN0YW1wID09IHVuZGVmaW5lZCB8fCB0aW1lc3RhbXAgPT0gbnVsbCkgdGltZXN0YW1wID0gRGF0ZS5ub3coKTtcclxuXHJcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodGltZXN0YW1wKTtcclxuICAgIGRhdGUuc2V0VVRDSG91cnMoZGF0ZS5nZXRVVENIb3VycygpICsgMSk7XHJcbiAgICBjb25zdCBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcclxuICAgIGNvbnN0IG1pbnV0ZXMgPSBkYXRlLmdldFVUQ01pbnV0ZXMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcclxuICAgIGNvbnN0IHNlY29uZHMgPSBkYXRlLmdldFVUQ1NlY29uZHMoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcclxuICAgIGNvbnN0IG1pbGxpc2Vjb25kcyA9IGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgzLCBcIjBcIik7XHJcbiAgICBjb25zdCBmb3JtYXR0ZWRUaW1lID0gYCR7aG91cnN9OiR7bWludXRlc306JHtzZWNvbmRzfToke21pbGxpc2Vjb25kc31gO1xyXG4gICAgcmV0dXJuIGZvcm1hdHRlZFRpbWU7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRHcm93VGhyZWFkcyhuczogTlMsIHNlcnZlcjogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBzZXJ2ZXJNYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XHJcbiAgICBjb25zdCBzZXJ2ZXJDdXJyZW50TW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShzZXJ2ZXIpO1xyXG4gICAgbGV0IG1vbmV5TXVsdGlwbGllciA9IHNlcnZlck1heE1vbmV5IC8gc2VydmVyQ3VycmVudE1vbmV5O1xyXG4gICAgaWYgKGlzTmFOKG1vbmV5TXVsdGlwbGllcikgfHwgbW9uZXlNdWx0aXBsaWVyID09IEluZmluaXR5KSBtb25leU11bHRpcGxpZXIgPSBzZXJ2ZXJNYXhNb25leTtcclxuICAgIGNvbnN0IHNlcnZlckdyb3dUaHJlYWRzID0gTWF0aC5jZWlsKG5zLmdyb3d0aEFuYWx5emUoc2VydmVyLCBtb25leU11bHRpcGxpZXIpICogMS4wMSk7XHJcblxyXG4gICAgcmV0dXJuIHNlcnZlckdyb3dUaHJlYWRzO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0R3Jvd1RocmVhZHNUaHJlc2hvbGQobnM6IE5TLCBzZXJ2ZXI6IHN0cmluZywgdGhyZXNob2xkOiBudW1iZXIpIHtcclxuICAgIGNvbnN0IG1heE1vbmV5ID0gbnMuZ2V0U2VydmVyTWF4TW9uZXkoc2VydmVyKTtcclxuICAgIGNvbnN0IG1pbk1vbmV5ID0gbWF4TW9uZXkgKiAoMSAtIHRocmVzaG9sZCk7XHJcbiAgICBjb25zdCBtb25leU11bHRpcGxpZXIgPSBtYXhNb25leSAvIG1pbk1vbmV5O1xyXG4gICAgY29uc3Qgc2VydmVyR3Jvd1RocmVhZHMgPSBNYXRoLmNlaWwobnMuZ3Jvd3RoQW5hbHl6ZShzZXJ2ZXIsIG1vbmV5TXVsdGlwbGllcikgKiAxLjAxKTtcclxuICAgIG5zLnByaW50KHNlcnZlckdyb3dUaHJlYWRzICsgXCIgZ3Jvd3MgbmVlZGVkXCIpO1xyXG5cclxuICAgIHJldHVybiBzZXJ2ZXJHcm93VGhyZWFkcztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFdlYWtlblRocmVhZHNBZnRlckhhY2sobnM6IE5TLCBudW1IYWNrVGhyZWFkczogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgIGNvbnN0IGhhY2tTZWNMdmxJbmNyZWFzZSA9IG5zLmhhY2tBbmFseXplU2VjdXJpdHkobnVtSGFja1RocmVhZHMpO1xyXG5cclxuICAgIGNvbnN0IHNlcnZlcldlYWtlblRocmVhZHMgPSBNYXRoLmNlaWwoaGFja1NlY0x2bEluY3JlYXNlIC8gbnMud2Vha2VuQW5hbHl6ZSgxKSk7XHJcblxyXG4gICAgcmV0dXJuIHNlcnZlcldlYWtlblRocmVhZHM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJHcm93KG5zOiBOUywgbnVtR3Jvd1RocmVhZHM6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICBjb25zdCBoYWNrU2VjTHZsSW5jcmVhc2UgPSBucy5ncm93dGhBbmFseXplU2VjdXJpdHkobnVtR3Jvd1RocmVhZHMpO1xyXG5cclxuICAgIGNvbnN0IHNlcnZlcldlYWtlblRocmVhZHMgPSBNYXRoLmNlaWwoaGFja1NlY0x2bEluY3JlYXNlIC8gbnMud2Vha2VuQW5hbHl6ZSgxKSk7XHJcblxyXG4gICAgcmV0dXJuIHNlcnZlcldlYWtlblRocmVhZHM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRXZWFrZW5UaHJlYWRzKG5zOiBOUywgc2VydmVyOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IHNlcnZlclNlY0x2bCA9IG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwoc2VydmVyKTtcclxuICAgIGNvbnN0IHNlcnZlcldlYWtlblRocmVhZHMgPSBNYXRoLmNlaWwoKHNlcnZlclNlY0x2bCAtIG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwoc2VydmVyKSkgLyBucy53ZWFrZW5BbmFseXplKDEpKTtcclxuXHJcbiAgICByZXR1cm4gc2VydmVyV2Vha2VuVGhyZWFkcztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEhhY2tUaHJlYWRzKG5zOiBOUywgc2VydmVyOiBzdHJpbmcsIG1vbmV5SGFja1RocmVzaG9sZDogbnVtYmVyKSB7XHJcbiAgICBjb25zdCBzZXJ2ZXJNYXhNb25leSA9IG5zLmdldFNlcnZlck1heE1vbmV5KHNlcnZlcik7XHJcbiAgICBjb25zdCBsb3dlck1vbmV5Qm91bmQgPSBzZXJ2ZXJNYXhNb25leSAqICgxIC0gbW9uZXlIYWNrVGhyZXNob2xkKTtcclxuICAgIGNvbnN0IGhhY2tBbW91bnQgPSBzZXJ2ZXJNYXhNb25leSAtIGxvd2VyTW9uZXlCb3VuZDtcclxuICAgIGNvbnN0IHNlcnZlckhhY2tUaHJlYWRzID0gTWF0aC5mbG9vcihucy5oYWNrQW5hbHl6ZVRocmVhZHMoc2VydmVyLCBoYWNrQW1vdW50KSk7XHJcblxyXG4gICAgcmV0dXJuIHNlcnZlckhhY2tUaHJlYWRzO1xyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLSBGb3JtdWxhc0FQSSAtLS0tLS0tLS0tLS0tLS0tLVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0R3Jvd1RocmVhZHNGb3JtdWxhcyhuczogTlMsIHNlcnZlcjogc3RyaW5nLCBoYWNrVGhyZWFkczogbnVtYmVyKSB7XHJcbiAgICBjb25zdCBzZXJ2ZXJPYmplY3QgPSBucy5nZXRTZXJ2ZXIoc2VydmVyKTtcclxuICAgIGNvbnN0IHBsYXllck9iamVjdCA9IFBsYXllck1hbmFnZXIuZ2V0SW5zdGFuY2UobnMpLmdldFBsYXllcigpO1xyXG5cclxuICAgIGlmIChzZXJ2ZXJPYmplY3QubW9uZXlNYXggPT0gdW5kZWZpbmVkKSByZXR1cm4gMDtcclxuXHJcbiAgICBzZXJ2ZXJPYmplY3QubW9uZXlBdmFpbGFibGUgPSBzZXJ2ZXJPYmplY3QubW9uZXlNYXg7XHJcbiAgICBzZXJ2ZXJPYmplY3QuYmFzZURpZmZpY3VsdHkgPSBzZXJ2ZXJPYmplY3QubWluRGlmZmljdWx0eTtcclxuXHJcbiAgICBjb25zdCBwZXJjZW50UGVySGFjayA9IG5zLmZvcm11bGFzLmhhY2tpbmcuaGFja1BlcmNlbnQoc2VydmVyT2JqZWN0LCBwbGF5ZXJPYmplY3QpO1xyXG4gICAgY29uc3QgaGFja1BlcmNlbnQgPSBwZXJjZW50UGVySGFjayAqIGhhY2tUaHJlYWRzO1xyXG5cclxuICAgIHNlcnZlck9iamVjdC5tb25leUF2YWlsYWJsZSA9IHNlcnZlck9iamVjdC5tb25leU1heCAqICgxIC0gaGFja1BlcmNlbnQpO1xyXG4gICAgc2VydmVyT2JqZWN0LmJhc2VEaWZmaWN1bHR5ID0gc2VydmVyT2JqZWN0Lm1pbkRpZmZpY3VsdHk7XHJcblxyXG4gICAgcmV0dXJuIE1hdGguY2VpbChucy5mb3JtdWxhcy5oYWNraW5nLmdyb3dUaHJlYWRzKHNlcnZlck9iamVjdCwgcGxheWVyT2JqZWN0LCBzZXJ2ZXJPYmplY3QubW9uZXlNYXgpICogMS4wMSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRIYWNrVGhyZWFkc0Zvcm11bGFzKG5zOiBOUywgc2VydmVyOiBzdHJpbmcsIGhhY2tUaHJlc2hvbGQ6IG51bWJlcikge1xyXG4gICAgY29uc3Qgc2VydmVyT2JqZWN0ID0gbnMuZ2V0U2VydmVyKHNlcnZlcik7XHJcbiAgICBjb25zdCBwbGF5ZXJPYmplY3QgPSBQbGF5ZXJNYW5hZ2VyLmdldEluc3RhbmNlKG5zKS5nZXRQbGF5ZXIoKTtcclxuXHJcbiAgICBzZXJ2ZXJPYmplY3QuYmFzZURpZmZpY3VsdHkgPSBzZXJ2ZXJPYmplY3QubWluRGlmZmljdWx0eTtcclxuICAgIHNlcnZlck9iamVjdC5tb25leUF2YWlsYWJsZSA9IHNlcnZlck9iamVjdC5tb25leU1heDtcclxuXHJcbiAgICAvLyB0aHJlYWRzICogcGVyY2VudCA9PSBoYWNrVGhyZXNob2xkID0+IHRocmVhZHMgPT0gaGFja1RocmVzaG9sZCAvIHBlcmNlbnRcclxuICAgIHJldHVybiBNYXRoLmZsb29yKGhhY2tUaHJlc2hvbGQgLyBucy5mb3JtdWxhcy5oYWNraW5nLmhhY2tQZXJjZW50KHNlcnZlck9iamVjdCwgcGxheWVyT2JqZWN0KSk7XHJcbn1cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tIFBvcnRzIC0tLS0tLS0tLS0tLS0tLS0tXHJcbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVRvUG9ydChuczogTlMsIHBvcnQ6IG51bWJlciwgZGF0YTogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBjdXJyZW50RGF0YSA9IG5zLnBlZWsocG9ydCk7XHJcbiAgICBpZiAoY3VycmVudERhdGEgPT0gXCJOVUxMIFBPUlQgREFUQVwiKSB7XHJcbiAgICAgICAgbnMud3JpdGVQb3J0KHBvcnQsIGRhdGEpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBucy53cml0ZVBvcnQocG9ydCwgZGF0YSk7XHJcbiAgICAgICAgbnMucmVhZFBvcnQocG9ydCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgbnMudGFpbCgpO1xyXG4gICAgbnMuZGlzYWJsZUxvZyhcIkFMTFwiKTtcclxuXHJcbiAgICAvLyBjb25zdCBzZXJ2ZXIgPSBcImFscGhhLWVudFwiO1xyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBUyxxQkFBcUI7QUFFdkIsV0FBSyxTQUFMLGtCQUFLQSxZQUFMO0FBQ0gsRUFBQUEsUUFBQSxXQUFRO0FBQ1IsRUFBQUEsUUFBQSxXQUFRO0FBQ1IsRUFBQUEsUUFBQSxTQUFNO0FBQ04sRUFBQUEsUUFBQSxXQUFRO0FBQ1IsRUFBQUEsUUFBQSxZQUFTO0FBQ1QsRUFBQUEsUUFBQSxVQUFPO0FBQ1AsRUFBQUEsUUFBQSxhQUFVO0FBQ1YsRUFBQUEsUUFBQSxVQUFPO0FBQ1AsRUFBQUEsUUFBQSxXQUFRO0FBQ1IsRUFBQUEsUUFBQSxjQUFXO0FBVkgsU0FBQUE7QUFBQSxHQUFBO0FBYUwsZ0JBQVMsY0FBYyxJQUFRO0FBQ2xDLFFBQU0saUJBQWlCLENBQUMsTUFBTTtBQUM5QixRQUFNLGVBQWUsQ0FBQztBQUV0QixXQUFTLElBQUksR0FBRyxJQUFJLGVBQWUsUUFBUSxLQUFLO0FBQzVDLFVBQU0sV0FBVyxHQUFHLEtBQUssZUFBZSxDQUFDLENBQUM7QUFDMUMsaUJBQWEsS0FBSyxlQUFlLENBQUMsQ0FBQztBQUVuQyxhQUFTLElBQUksR0FBRyxJQUFJLFNBQVMsUUFBUSxLQUFLO0FBQ3RDLFVBQUksYUFBYSxTQUFTLFNBQVMsQ0FBQyxDQUFDLEtBQUssU0FBUyxlQUFlLFNBQVMsU0FBUyxDQUFDLENBQUMsS0FBSyxPQUFPO0FBQzlGLHVCQUFlLEtBQUssU0FBUyxDQUFDLENBQUM7QUFBQSxNQUNuQztBQUFBLElBQ0o7QUFBQSxFQUNKO0FBRUEsU0FBTyxhQUFhLEtBQUs7QUFDN0I7QUFFTyxnQkFBUyxXQUFXLElBQVEsUUFBZ0I7QUFDL0MsTUFDSSxHQUFHLDBCQUEwQixNQUFNLEtBQUssWUFBWSxFQUFFLEtBQ3RELEdBQUcsOEJBQThCLE1BQU0sS0FBSyxHQUFHLGdCQUFnQjtBQUUvRCxXQUFPO0FBQUE7QUFDTixXQUFPO0FBQ2hCO0FBRU8sZ0JBQVMsWUFBWSxJQUFRO0FBQ2hDLE1BQUksSUFBSTtBQUNSLE1BQUksR0FBRyxXQUFXLGNBQWM7QUFBRztBQUNuQyxNQUFJLEdBQUcsV0FBVyxjQUFjO0FBQUc7QUFDbkMsTUFBSSxHQUFHLFdBQVcsY0FBYztBQUFHO0FBQ25DLE1BQUksR0FBRyxXQUFXLGVBQWU7QUFBRztBQUNwQyxTQUFPO0FBQ1g7QUFFTyxnQkFBUyxRQUFRLElBQVE7QUFDNUIsUUFBTSxRQUFRLGNBQWMsRUFBRTtBQUM5QixXQUFTLElBQUksR0FBRyxJQUFJLE1BQU0sUUFBUSxLQUFLO0FBRW5DLFFBQUksV0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEtBQUssR0FBRyxvQkFBb0IsRUFBRSxTQUFTLE1BQU0sQ0FBQyxDQUFDLEdBQUc7QUFFekUsZ0JBQVUsSUFBSSxNQUFNLENBQUMsQ0FBQztBQUN0QixTQUFHLEtBQUssTUFBTSxDQUFDLENBQUM7QUFHaEIsU0FBRyxJQUFJLFdBQVcsTUFBTSxDQUFDLENBQUM7QUFDMUIsU0FBRyxJQUFJLFdBQVcsTUFBTSxDQUFDLENBQUM7QUFDMUIsU0FBRyxJQUFJLGFBQWEsTUFBTSxDQUFDLENBQUM7QUFBQSxJQUNoQyxPQUFPO0FBQ0g7QUFBQSxJQUNKO0FBQUEsRUFDSjtBQUNKO0FBRU8sZ0JBQVMsV0FBVyxJQUFRLFFBQWdCO0FBQy9DLFlBQVUsSUFBSSxNQUFNO0FBQ3BCLEtBQUcsS0FBSyxNQUFNO0FBRWQsS0FBRyxJQUFJLFdBQVcsTUFBTTtBQUN4QixLQUFHLElBQUksV0FBVyxNQUFNO0FBQ3hCLEtBQUcsSUFBSSxhQUFhLE1BQU07QUFDOUI7QUFFTyxnQkFBUyxVQUFVLElBQVEsUUFBZ0I7QUFDOUMsTUFBSSxHQUFHLFdBQVcsY0FBYztBQUFHLE9BQUcsU0FBUyxNQUFNO0FBQ3JELE1BQUksR0FBRyxXQUFXLGNBQWM7QUFBRyxPQUFHLFNBQVMsTUFBTTtBQUNyRCxNQUFJLEdBQUcsV0FBVyxjQUFjO0FBQUcsT0FBRyxTQUFTLE1BQU07QUFDckQsTUFBSSxHQUFHLFdBQVcsZUFBZTtBQUFHLE9BQUcsVUFBVSxNQUFNO0FBQzNEO0FBRU8sZ0JBQVMsU0FBUyxXQUFvQjtBQUN6QyxNQUFJLGFBQWEsVUFBYSxhQUFhO0FBQU0sZ0JBQVksS0FBSyxJQUFJO0FBRXRFLFFBQU0sT0FBTyxJQUFJLEtBQUssU0FBUztBQUMvQixPQUFLLFlBQVksS0FBSyxZQUFZLElBQUksQ0FBQztBQUN2QyxRQUFNLFFBQVEsS0FBSyxZQUFZLEVBQUUsU0FBUyxFQUFFLFNBQVMsR0FBRyxHQUFHO0FBQzNELFFBQU0sVUFBVSxLQUFLLGNBQWMsRUFBRSxTQUFTLEVBQUUsU0FBUyxHQUFHLEdBQUc7QUFDL0QsUUFBTSxVQUFVLEtBQUssY0FBYyxFQUFFLFNBQVMsRUFBRSxTQUFTLEdBQUcsR0FBRztBQUMvRCxRQUFNLGVBQWUsS0FBSyxtQkFBbUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxHQUFHLEdBQUc7QUFDekUsUUFBTSxnQkFBZ0IsR0FBRyxLQUFLLElBQUksT0FBTyxJQUFJLE9BQU8sSUFBSSxZQUFZO0FBQ3BFLFNBQU87QUFDWDtBQUVPLGdCQUFTLGVBQWUsSUFBUSxRQUFnQjtBQUNuRCxRQUFNLGlCQUFpQixHQUFHLGtCQUFrQixNQUFNO0FBQ2xELFFBQU0scUJBQXFCLEdBQUcsd0JBQXdCLE1BQU07QUFDNUQsTUFBSSxrQkFBa0IsaUJBQWlCO0FBQ3ZDLE1BQUksTUFBTSxlQUFlLEtBQUssbUJBQW1CO0FBQVUsc0JBQWtCO0FBQzdFLFFBQU0sb0JBQW9CLEtBQUssS0FBSyxHQUFHLGNBQWMsUUFBUSxlQUFlLElBQUksSUFBSTtBQUVwRixTQUFPO0FBQ1g7QUFFTyxnQkFBUyx3QkFBd0IsSUFBUSxRQUFnQixXQUFtQjtBQUMvRSxRQUFNLFdBQVcsR0FBRyxrQkFBa0IsTUFBTTtBQUM1QyxRQUFNLFdBQVcsWUFBWSxJQUFJO0FBQ2pDLFFBQU0sa0JBQWtCLFdBQVc7QUFDbkMsUUFBTSxvQkFBb0IsS0FBSyxLQUFLLEdBQUcsY0FBYyxRQUFRLGVBQWUsSUFBSSxJQUFJO0FBQ3BGLEtBQUcsTUFBTSxvQkFBb0IsZUFBZTtBQUU1QyxTQUFPO0FBQ1g7QUFFTyxnQkFBUywwQkFBMEIsSUFBUSxnQkFBZ0M7QUFDOUUsUUFBTSxxQkFBcUIsR0FBRyxvQkFBb0IsY0FBYztBQUVoRSxRQUFNLHNCQUFzQixLQUFLLEtBQUsscUJBQXFCLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFFOUUsU0FBTztBQUNYO0FBRU8sZ0JBQVMsMEJBQTBCLElBQVEsZ0JBQWdDO0FBQzlFLFFBQU0scUJBQXFCLEdBQUcsc0JBQXNCLGNBQWM7QUFFbEUsUUFBTSxzQkFBc0IsS0FBSyxLQUFLLHFCQUFxQixHQUFHLGNBQWMsQ0FBQyxDQUFDO0FBRTlFLFNBQU87QUFDWDtBQUVPLGdCQUFTLGlCQUFpQixJQUFRLFFBQWdCO0FBQ3JELFFBQU0sZUFBZSxHQUFHLHVCQUF1QixNQUFNO0FBQ3JELFFBQU0sc0JBQXNCLEtBQUssTUFBTSxlQUFlLEdBQUcsMEJBQTBCLE1BQU0sS0FBSyxHQUFHLGNBQWMsQ0FBQyxDQUFDO0FBRWpILFNBQU87QUFDWDtBQUVPLGdCQUFTLGVBQWUsSUFBUSxRQUFnQixvQkFBNEI7QUFDL0UsUUFBTSxpQkFBaUIsR0FBRyxrQkFBa0IsTUFBTTtBQUNsRCxRQUFNLGtCQUFrQixrQkFBa0IsSUFBSTtBQUM5QyxRQUFNLGFBQWEsaUJBQWlCO0FBQ3BDLFFBQU0sb0JBQW9CLEtBQUssTUFBTSxHQUFHLG1CQUFtQixRQUFRLFVBQVUsQ0FBQztBQUU5RSxTQUFPO0FBQ1g7QUFHTyxnQkFBUyx1QkFBdUIsSUFBUSxRQUFnQixhQUFxQjtBQUNoRixRQUFNLGVBQWUsR0FBRyxVQUFVLE1BQU07QUFDeEMsUUFBTSxlQUFlLGNBQWMsWUFBWSxFQUFFLEVBQUUsVUFBVTtBQUU3RCxNQUFJLGFBQWEsWUFBWTtBQUFXLFdBQU87QUFFL0MsZUFBYSxpQkFBaUIsYUFBYTtBQUMzQyxlQUFhLGlCQUFpQixhQUFhO0FBRTNDLFFBQU0saUJBQWlCLEdBQUcsU0FBUyxRQUFRLFlBQVksY0FBYyxZQUFZO0FBQ2pGLFFBQU0sY0FBYyxpQkFBaUI7QUFFckMsZUFBYSxpQkFBaUIsYUFBYSxZQUFZLElBQUk7QUFDM0QsZUFBYSxpQkFBaUIsYUFBYTtBQUUzQyxTQUFPLEtBQUssS0FBSyxHQUFHLFNBQVMsUUFBUSxZQUFZLGNBQWMsY0FBYyxhQUFhLFFBQVEsSUFBSSxJQUFJO0FBQzlHO0FBRU8sZ0JBQVMsdUJBQXVCLElBQVEsUUFBZ0IsZUFBdUI7QUFDbEYsUUFBTSxlQUFlLEdBQUcsVUFBVSxNQUFNO0FBQ3hDLFFBQU0sZUFBZSxjQUFjLFlBQVksRUFBRSxFQUFFLFVBQVU7QUFFN0QsZUFBYSxpQkFBaUIsYUFBYTtBQUMzQyxlQUFhLGlCQUFpQixhQUFhO0FBRzNDLFNBQU8sS0FBSyxNQUFNLGdCQUFnQixHQUFHLFNBQVMsUUFBUSxZQUFZLGNBQWMsWUFBWSxDQUFDO0FBQ2pHO0FBR08sZ0JBQVMsWUFBWSxJQUFRLE1BQWMsTUFBYztBQUM1RCxRQUFNLGNBQWMsR0FBRyxLQUFLLElBQUk7QUFDaEMsTUFBSSxlQUFlLGtCQUFrQjtBQUNqQyxPQUFHLFVBQVUsTUFBTSxJQUFJO0FBQUEsRUFDM0IsT0FBTztBQUNILE9BQUcsVUFBVSxNQUFNLElBQUk7QUFDdkIsT0FBRyxTQUFTLElBQUk7QUFBQSxFQUNwQjtBQUNKO0FBRUEsc0JBQXNCLEtBQUssSUFBUTtBQUMvQixLQUFHLEtBQUs7QUFDUixLQUFHLFdBQVcsS0FBSztBQUd2QjsiLCJuYW1lcyI6WyJDb2xvcnMiXX0=\",\"filename\":\"lib.js\",\"server\":\"home\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"home\"}}],[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"home\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"home\"}}],[\"hackingDeamon.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { Time } from \\\"/Time.js\\\";\\nimport { getBestHostByRamOptimized, getBestServer } from \\\"/bestServer.js\\\";\\nimport {\\n  Colors,\\n  getGrowThreadsFormulas,\\n  getGrowThreadsThreshold,\\n  getHackThreadsFormulas,\\n  getWeakenThreadsAfterGrow,\\n  getWeakenThreadsAfterHack,\\n  writeToPort\\n} from \\\"/lib.js\\\";\\nimport { prepareServer } from \\\"/loop/prepareServer.js\\\";\\nimport { PlayerManager } from \\\"/parallel/PlayerManager.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nimport { parallelCycle } from \\\"/parallel/manager.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  if (ns.stock.hasWSEAccount())\\n    ns.exec(\\\"Stock/manager.js\\\", \\\"home\\\");\\n  let hackThreshold = 0.5;\\n  let lastTarget = \\\"\\\";\\n  const time = Time.getInstance();\\n  while (true) {\\n    time.startTime();\\n    PlayerManager.getInstance(ns).resetPlayer(ns);\\n    const target = getBestServer(ns);\\n    writeToPort(ns, 1, target);\\n    ns.print(\\\"lastTarget: \\\" + lastTarget + \\\" target: \\\" + target);\\n    if (ns.fileExists(\\\"Formulas.exe\\\", \\\"home\\\")) {\\n      if (lastTarget !== target) {\\n        if (ns.getServerMaxMoney(target) != parseFloat(ns.getServerMoneyAvailable(target).toFixed(5)) || parseFloat(ns.getServerSecurityLevel(target).toFixed(5)) != ns.getServerMinSecurityLevel(target)) {\\n          await prepareServer(ns, target);\\n        }\\n        hackThreshold = getHackThreshold(ns, target);\\n        ns.tprint(Colors.E_ORANGE + \\\"hackThreshold: \\\" + hackThreshold);\\n        if (ns.getServerMaxMoney(target) == parseFloat(ns.getServerMoneyAvailable(target).toFixed(5)) || parseFloat(ns.getServerSecurityLevel(target).toFixed(5)) == ns.getServerMinSecurityLevel(target)) {\\n          ns.print(Colors.GREEN + \\\"Preparation finished, starting parallel mode\\\");\\n        } else {\\n          ns.tprint(Colors.RED + \\\"Preparation failed\\\");\\n          throw new Error(\\\"Preparation failed\\\");\\n        }\\n        lastTarget = target;\\n      }\\n      PlayerManager.getInstance(ns).resetPlayer(ns);\\n      await parallelCycle(ns, target, hackThreshold, Config.LOOP_BATCH_COUNT);\\n    } else {\\n      if (lastTarget !== target) {\\n        if (ns.getServerMaxMoney(target) != ns.getServerMoneyAvailable(target) || ns.getServerSecurityLevel(target) != ns.getServerMinSecurityLevel(target)) {\\n          await prepareServer(ns, target);\\n        }\\n        hackThreshold = getHackThreshold(ns, target);\\n        ns.print(\\\"hackThreshold: \\\" + hackThreshold);\\n        if (ns.getServerMaxMoney(target) == ns.getServerMoneyAvailable(target) && ns.getServerSecurityLevel(target) == ns.getServerMinSecurityLevel(target)) {\\n          ns.print(Colors.GREEN + \\\"Preparation finished, starting parallel mode\\\");\\n        } else {\\n          ns.tprint(Colors.RED + \\\"Preparation failed, starting loop mode\\\");\\n          throw new Error(\\\"Preparation failed, starting loop mode\\\");\\n        }\\n        lastTarget = target;\\n      }\\n      await parallelCycle(ns, target, hackThreshold);\\n    }\\n    time.endTime();\\n    ns.print(\\\"Cycle took: \\\" + time.getTime(ns));\\n  }\\n}\\nfunction getHackThreshold(ns, target) {\\n  const allHosts = getBestHostByRamOptimized(ns);\\n  const totalMaxRam = allHosts.reduce((acc, server) => {\\n    return acc + server.maxRam;\\n  }, 0);\\n  let hackThreshold = 0.9;\\n  const THRESHOLD_STEP = Config.THRESHOLD_STEP;\\n  const RAM_WEAKEN = Config.WEAKEN_SCRIPT_RAM;\\n  const RAM_GROW = Config.GROW_SCRIPT_RAM;\\n  const RAM_HACK = Config.HACK_SCRIPT_RAM;\\n  while (true) {\\n    let serverHackThreads = 0;\\n    let serverGrowThreads = 0;\\n    if (ns.fileExists(\\\"Formulas.exe\\\", \\\"home\\\")) {\\n      serverHackThreads = getHackThreadsFormulas(ns, target, hackThreshold);\\n      serverGrowThreads = getGrowThreadsFormulas(ns, target, serverHackThreads);\\n    } else {\\n      const hackAmount = ns.getServerMaxMoney(target) * hackThreshold;\\n      serverHackThreads = Math.ceil(ns.hackAnalyzeThreads(target, hackAmount));\\n      serverGrowThreads = getGrowThreadsThreshold(ns, target, hackThreshold + THRESHOLD_STEP);\\n    }\\n    const firstWeakenThreads = getWeakenThreadsAfterHack(ns, serverHackThreads);\\n    const secondWeakenThreads = getWeakenThreadsAfterGrow(ns, serverGrowThreads);\\n    const weaken1RamNeeded = RAM_WEAKEN * firstWeakenThreads;\\n    const weaken2RamNeeded = RAM_WEAKEN * secondWeakenThreads;\\n    const growRamNeeded = RAM_GROW * serverGrowThreads;\\n    const hackRamNeeded = RAM_HACK * serverHackThreads;\\n    const totalRamNeeded = weaken1RamNeeded + weaken2RamNeeded + growRamNeeded + hackRamNeeded;\\n    ns.print(\\\"predicted threads needed:\\\");\\n    ns.print(\\\"firstWeakenThreads: \\\" + firstWeakenThreads + \\\" with \\\" + weaken1RamNeeded + \\\"GB of RAM\\\");\\n    ns.print(\\\"serverGrowThreads: \\\" + serverGrowThreads + \\\" with \\\" + growRamNeeded + \\\"GB of RAM\\\");\\n    ns.print(\\\"secondWeakenThreads: \\\" + secondWeakenThreads + \\\" with \\\" + weaken2RamNeeded + \\\"GB of RAM\\\");\\n    ns.print(\\\"serverHackThreads: \\\" + serverHackThreads + \\\" with \\\" + hackRamNeeded + \\\"GB of RAM\\\");\\n    if (totalRamNeeded < totalMaxRam) {\\n      ns.print(\\n        \\\"needs \\\" + totalRamNeeded + \\\"GB of RAM and got \\\" + totalMaxRam + \\\". Running parallel mode on \\\" + target\\n      );\\n      return hackThreshold;\\n    }\\n    ns.print(\\n      Colors.YELLOW + \\\"Not enough RAM to run parallel mode on \\\" + target + \\\". Attempting to upgrade/buy server...\\\"\\n    );\\n    if (ns.fileExists(\\\"Formulas.exe\\\", \\\"home\\\")) {\\n      const hackServer = ServerManager.buyOrUpgradeServer(ns, hackRamNeeded, Config.HACK_SERVER_NAME);\\n      const Server = ServerManager.buyOrUpgradeServer(ns, growRamNeeded, Config.GROW_SERVER_NAME);\\n      const weaken1Server = ServerManager.buyOrUpgradeServer(ns, weaken1RamNeeded, Config.WEAK_SERVER_NAME);\\n      const weaken2Server = ServerManager.buyOrUpgradeServer(ns, weaken2RamNeeded, Config.WEAK_SERVER_NAME);\\n      if (hackServer !== \\\"\\\" && Server !== \\\"\\\" && weaken1Server !== \\\"\\\" && weaken2Server !== \\\"\\\") {\\n        ns.print(Colors.GREEN + \\\"Servers bought, running parallel mode on \\\" + target);\\n        return hackThreshold;\\n      }\\n    }\\n    hackThreshold = Math.round((hackThreshold - THRESHOLD_STEP) * 100) / 100;\\n    if (hackThreshold < Config.MIN_HACK_THRESHOLD) {\\n      ns.tprint(Colors.RED + \\\"Error! Not enough RAM to run parallel mode on \\\" + target);\\n      throw new Error(\\\"Error! Not enough RAM to run parallel mode on \\\" + target);\\n    }\\n    ns.print(\\\"Threshold is too high, trying with: \\\" + hackThreshold);\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2tpbmdEZWFtb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiLi9Db25maWcvQ29uZmlnXCI7XHJcbmltcG9ydCB7IFRpbWUgfSBmcm9tIFwiLi9UaW1lXCI7XHJcbmltcG9ydCB7IGdldEJlc3RIb3N0QnlSYW1PcHRpbWl6ZWQsIGdldEJlc3RTZXJ2ZXIgfSBmcm9tIFwiLi9iZXN0U2VydmVyXCI7XHJcbmltcG9ydCB7XHJcbiAgICBDb2xvcnMsXHJcbiAgICBnZXRHcm93VGhyZWFkc0Zvcm11bGFzLFxyXG4gICAgZ2V0R3Jvd1RocmVhZHNUaHJlc2hvbGQsXHJcbiAgICBnZXRIYWNrVGhyZWFkc0Zvcm11bGFzLFxyXG4gICAgZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyxcclxuICAgIGdldFdlYWtlblRocmVhZHNBZnRlckhhY2ssXHJcbiAgICB3cml0ZVRvUG9ydCxcclxufSBmcm9tIFwiLi9saWJcIjtcclxuaW1wb3J0IHsgcHJlcGFyZVNlcnZlciB9IGZyb20gXCIuL2xvb3AvcHJlcGFyZVNlcnZlclwiO1xyXG5pbXBvcnQgeyBQbGF5ZXJNYW5hZ2VyIH0gZnJvbSBcIi4vcGFyYWxsZWwvUGxheWVyTWFuYWdlclwiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJNYW5hZ2VyIH0gZnJvbSBcIi4vcGFyYWxsZWwvU2VydmVyTWFuYWdlclwiO1xyXG5pbXBvcnQgeyBwYXJhbGxlbEN5Y2xlIH0gZnJvbSBcIi4vcGFyYWxsZWwvbWFuYWdlclwiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBucy50YWlsKCk7XHJcbiAgICBucy5kaXNhYmxlTG9nKFwiQUxMXCIpO1xyXG5cclxuICAgIC8vIHN0YXJ0IHN0b2NrIG1hbmFnZXIgaWYgcGxheWVyIGhhcyBXU0UgYWNjb3VudFxyXG4gICAgaWYgKG5zLnN0b2NrLmhhc1dTRUFjY291bnQoKSkgbnMuZXhlYyhcIlN0b2NrL21hbmFnZXIuanNcIiwgXCJob21lXCIpO1xyXG5cclxuICAgIGxldCBoYWNrVGhyZXNob2xkID0gMC41O1xyXG4gICAgbGV0IGxhc3RUYXJnZXQgPSBcIlwiO1xyXG5cclxuICAgIGNvbnN0IHRpbWUgPSBUaW1lLmdldEluc3RhbmNlKCk7XHJcbiAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgIHRpbWUuc3RhcnRUaW1lKCk7XHJcblxyXG4gICAgICAgIFBsYXllck1hbmFnZXIuZ2V0SW5zdGFuY2UobnMpLnJlc2V0UGxheWVyKG5zKTtcclxuXHJcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gZ2V0QmVzdFNlcnZlcihucyk7XHJcblxyXG4gICAgICAgIHdyaXRlVG9Qb3J0KG5zLCAxLCB0YXJnZXQpO1xyXG4gICAgICAgIG5zLnByaW50KFwibGFzdFRhcmdldDogXCIgKyBsYXN0VGFyZ2V0ICsgXCIgdGFyZ2V0OiBcIiArIHRhcmdldCk7XHJcbiAgICAgICAgaWYgKG5zLmZpbGVFeGlzdHMoXCJGb3JtdWxhcy5leGVcIiwgXCJob21lXCIpKSB7XHJcbiAgICAgICAgICAgIGlmIChsYXN0VGFyZ2V0ICE9PSB0YXJnZXQpIHtcclxuICAgICAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tIFBSRVBBUkUgU0VSVkVSIC0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAhPSBwYXJzZUZsb2F0KG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkudG9GaXhlZCg1KSkgfHxcclxuICAgICAgICAgICAgICAgICAgICBwYXJzZUZsb2F0KG5zLmdldFNlcnZlclNlY3VyaXR5TGV2ZWwodGFyZ2V0KS50b0ZpeGVkKDUpKSAhPSBucy5nZXRTZXJ2ZXJNaW5TZWN1cml0eUxldmVsKHRhcmdldClcclxuICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHByZXBhcmVTZXJ2ZXIobnMsIHRhcmdldCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBoYWNrVGhyZXNob2xkID0gZ2V0SGFja1RocmVzaG9sZChucywgdGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIG5zLnRwcmludChDb2xvcnMuRV9PUkFOR0UgKyBcImhhY2tUaHJlc2hvbGQ6IFwiICsgaGFja1RocmVzaG9sZCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICAgICAgIG5zLmdldFNlcnZlck1heE1vbmV5KHRhcmdldCkgPT0gcGFyc2VGbG9hdChucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpLnRvRml4ZWQoNSkpIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VGbG9hdChucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkudG9GaXhlZCg1KSkgPT0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpXHJcbiAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICBucy5wcmludChDb2xvcnMuR1JFRU4gKyBcIlByZXBhcmF0aW9uIGZpbmlzaGVkLCBzdGFydGluZyBwYXJhbGxlbCBtb2RlXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBucy50cHJpbnQoQ29sb3JzLlJFRCArIFwiUHJlcGFyYXRpb24gZmFpbGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlByZXBhcmF0aW9uIGZhaWxlZFwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBsYXN0VGFyZ2V0ID0gdGFyZ2V0O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLSBDSEVDSyBXSElDSCBNT0RFIFRPIFVTRSAtLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICAgICAgICBQbGF5ZXJNYW5hZ2VyLmdldEluc3RhbmNlKG5zKS5yZXNldFBsYXllcihucyk7XHJcbiAgICAgICAgICAgIGF3YWl0IHBhcmFsbGVsQ3ljbGUobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCwgQ29uZmlnLkxPT1BfQkFUQ0hfQ09VTlQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChsYXN0VGFyZ2V0ICE9PSB0YXJnZXQpIHtcclxuICAgICAgICAgICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tIFBSRVBBUkUgU0VSVkVSIC0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgICAgICAgICAgICAgLy8gcHJlcGFyZSB3aGVuIG1vbmV5IGlzIG5vdCBhdCBtYXggb3Igc2VjIGx2bCBpcyBub3QgYXQgbWluXHJcbiAgICAgICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICAgICAgbnMuZ2V0U2VydmVyTWF4TW9uZXkodGFyZ2V0KSAhPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZSh0YXJnZXQpIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgbnMuZ2V0U2VydmVyU2VjdXJpdHlMZXZlbCh0YXJnZXQpICE9IG5zLmdldFNlcnZlck1pblNlY3VyaXR5TGV2ZWwodGFyZ2V0KVxyXG4gICAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgcHJlcGFyZVNlcnZlcihucywgdGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGhhY2tUaHJlc2hvbGQgPSBnZXRIYWNrVGhyZXNob2xkKG5zLCB0YXJnZXQpO1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoXCJoYWNrVGhyZXNob2xkOiBcIiArIGhhY2tUaHJlc2hvbGQpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgICAgICBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpID09IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKHRhcmdldCkgJiZcclxuICAgICAgICAgICAgICAgICAgICBucy5nZXRTZXJ2ZXJTZWN1cml0eUxldmVsKHRhcmdldCkgPT0gbnMuZ2V0U2VydmVyTWluU2VjdXJpdHlMZXZlbCh0YXJnZXQpXHJcbiAgICAgICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgICAgICBucy5wcmludChDb2xvcnMuR1JFRU4gKyBcIlByZXBhcmF0aW9uIGZpbmlzaGVkLCBzdGFydGluZyBwYXJhbGxlbCBtb2RlXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBucy50cHJpbnQoQ29sb3JzLlJFRCArIFwiUHJlcGFyYXRpb24gZmFpbGVkLCBzdGFydGluZyBsb29wIG1vZGVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUHJlcGFyYXRpb24gZmFpbGVkLCBzdGFydGluZyBsb29wIG1vZGVcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbGFzdFRhcmdldCA9IHRhcmdldDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLSBDSEVDSyBXSElDSCBNT0RFIFRPIFVTRSAtLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAgICAgICAgICAgYXdhaXQgcGFyYWxsZWxDeWNsZShucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGltZS5lbmRUaW1lKCk7XHJcbiAgICAgICAgbnMucHJpbnQoXCJDeWNsZSB0b29rOiBcIiArIHRpbWUuZ2V0VGltZShucykpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRIYWNrVGhyZXNob2xkKG5zOiBOUywgdGFyZ2V0OiBzdHJpbmcpOiBudW1iZXIge1xyXG4gICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtT3B0aW1pemVkKG5zKTtcclxuICAgIGNvbnN0IHRvdGFsTWF4UmFtID0gYWxsSG9zdHMucmVkdWNlKChhY2MsIHNlcnZlcikgPT4ge1xyXG4gICAgICAgIHJldHVybiBhY2MgKyBzZXJ2ZXIubWF4UmFtO1xyXG4gICAgfSwgMCk7XHJcblxyXG4gICAgbGV0IGhhY2tUaHJlc2hvbGQgPSAwLjk7XHJcbiAgICBjb25zdCBUSFJFU0hPTERfU1RFUCA9IENvbmZpZy5USFJFU0hPTERfU1RFUDtcclxuXHJcbiAgICAvLyBjb25zdCBtb25leUFsbG93ZWRUb1VzZSA9IG5zLmdldFNlcnZlck1vbmV5QXZhaWxhYmxlKFwiaG9tZVwiKSAqICgyIC8gMyk7XHJcbiAgICBjb25zdCBSQU1fV0VBS0VOID0gQ29uZmlnLldFQUtFTl9TQ1JJUFRfUkFNO1xyXG4gICAgY29uc3QgUkFNX0dST1cgPSBDb25maWcuR1JPV19TQ1JJUFRfUkFNO1xyXG4gICAgY29uc3QgUkFNX0hBQ0sgPSBDb25maWcuSEFDS19TQ1JJUFRfUkFNO1xyXG5cclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgbGV0IHNlcnZlckhhY2tUaHJlYWRzID0gMDtcclxuICAgICAgICBsZXQgc2VydmVyR3Jvd1RocmVhZHMgPSAwO1xyXG4gICAgICAgIGlmIChucy5maWxlRXhpc3RzKFwiRm9ybXVsYXMuZXhlXCIsIFwiaG9tZVwiKSkge1xyXG4gICAgICAgICAgICBzZXJ2ZXJIYWNrVGhyZWFkcyA9IGdldEhhY2tUaHJlYWRzRm9ybXVsYXMobnMsIHRhcmdldCwgaGFja1RocmVzaG9sZCk7XHJcblxyXG4gICAgICAgICAgICBzZXJ2ZXJHcm93VGhyZWFkcyA9IGdldEdyb3dUaHJlYWRzRm9ybXVsYXMobnMsIHRhcmdldCwgc2VydmVySGFja1RocmVhZHMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGhhY2tBbW91bnQgPSBucy5nZXRTZXJ2ZXJNYXhNb25leSh0YXJnZXQpICogaGFja1RocmVzaG9sZDtcclxuICAgICAgICAgICAgc2VydmVySGFja1RocmVhZHMgPSBNYXRoLmNlaWwobnMuaGFja0FuYWx5emVUaHJlYWRzKHRhcmdldCwgaGFja0Ftb3VudCkpO1xyXG5cclxuICAgICAgICAgICAgc2VydmVyR3Jvd1RocmVhZHMgPSBnZXRHcm93VGhyZWFkc1RocmVzaG9sZChucywgdGFyZ2V0LCBoYWNrVGhyZXNob2xkICsgVEhSRVNIT0xEX1NURVApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBmaXJzdFdlYWtlblRocmVhZHMgPSBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJIYWNrKG5zLCBzZXJ2ZXJIYWNrVGhyZWFkcyk7XHJcblxyXG4gICAgICAgIGNvbnN0IHNlY29uZFdlYWtlblRocmVhZHMgPSBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJHcm93KG5zLCBzZXJ2ZXJHcm93VGhyZWFkcyk7XHJcblxyXG4gICAgICAgIC8vIHRoaXMgdmFyIGRlc2NyaWJlcyB0aGUgdG90YWwgYW1vdW50IG9mIHRocmVhZHMgaSBuZWVkIHRvIHJ1biBwYXJhbGxlbCBtb2RlXHJcbiAgICAgICAgY29uc3Qgd2Vha2VuMVJhbU5lZWRlZCA9IFJBTV9XRUFLRU4gKiBmaXJzdFdlYWtlblRocmVhZHM7XHJcbiAgICAgICAgY29uc3Qgd2Vha2VuMlJhbU5lZWRlZCA9IFJBTV9XRUFLRU4gKiBzZWNvbmRXZWFrZW5UaHJlYWRzO1xyXG4gICAgICAgIGNvbnN0IGdyb3dSYW1OZWVkZWQgPSBSQU1fR1JPVyAqIHNlcnZlckdyb3dUaHJlYWRzO1xyXG4gICAgICAgIGNvbnN0IGhhY2tSYW1OZWVkZWQgPSBSQU1fSEFDSyAqIHNlcnZlckhhY2tUaHJlYWRzO1xyXG5cclxuICAgICAgICBjb25zdCB0b3RhbFJhbU5lZWRlZCA9IHdlYWtlbjFSYW1OZWVkZWQgKyB3ZWFrZW4yUmFtTmVlZGVkICsgZ3Jvd1JhbU5lZWRlZCArIGhhY2tSYW1OZWVkZWQ7XHJcblxyXG4gICAgICAgIC8vIGxvZyBhbGxcclxuICAgICAgICBucy5wcmludChcInByZWRpY3RlZCB0aHJlYWRzIG5lZWRlZDpcIik7XHJcbiAgICAgICAgbnMucHJpbnQoXCJmaXJzdFdlYWtlblRocmVhZHM6IFwiICsgZmlyc3RXZWFrZW5UaHJlYWRzICsgXCIgd2l0aCBcIiArIHdlYWtlbjFSYW1OZWVkZWQgKyBcIkdCIG9mIFJBTVwiKTtcclxuICAgICAgICBucy5wcmludChcInNlcnZlckdyb3dUaHJlYWRzOiBcIiArIHNlcnZlckdyb3dUaHJlYWRzICsgXCIgd2l0aCBcIiArIGdyb3dSYW1OZWVkZWQgKyBcIkdCIG9mIFJBTVwiKTtcclxuICAgICAgICBucy5wcmludChcInNlY29uZFdlYWtlblRocmVhZHM6IFwiICsgc2Vjb25kV2Vha2VuVGhyZWFkcyArIFwiIHdpdGggXCIgKyB3ZWFrZW4yUmFtTmVlZGVkICsgXCJHQiBvZiBSQU1cIik7XHJcbiAgICAgICAgbnMucHJpbnQoXCJzZXJ2ZXJIYWNrVGhyZWFkczogXCIgKyBzZXJ2ZXJIYWNrVGhyZWFkcyArIFwiIHdpdGggXCIgKyBoYWNrUmFtTmVlZGVkICsgXCJHQiBvZiBSQU1cIik7XHJcblxyXG4gICAgICAgIGlmICh0b3RhbFJhbU5lZWRlZCA8IHRvdGFsTWF4UmFtKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KFxyXG4gICAgICAgICAgICAgICAgXCJuZWVkcyBcIiArIHRvdGFsUmFtTmVlZGVkICsgXCJHQiBvZiBSQU0gYW5kIGdvdCBcIiArIHRvdGFsTWF4UmFtICsgXCIuIFJ1bm5pbmcgcGFyYWxsZWwgbW9kZSBvbiBcIiArIHRhcmdldCxcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgcmV0dXJuIGhhY2tUaHJlc2hvbGQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG5zLnByaW50KFxyXG4gICAgICAgICAgICBDb2xvcnMuWUVMTE9XICtcclxuICAgICAgICAgICAgICAgIFwiTm90IGVub3VnaCBSQU0gdG8gcnVuIHBhcmFsbGVsIG1vZGUgb24gXCIgK1xyXG4gICAgICAgICAgICAgICAgdGFyZ2V0ICtcclxuICAgICAgICAgICAgICAgIFwiLiBBdHRlbXB0aW5nIHRvIHVwZ3JhZGUvYnV5IHNlcnZlci4uLlwiLFxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGlmIChucy5maWxlRXhpc3RzKFwiRm9ybXVsYXMuZXhlXCIsIFwiaG9tZVwiKSkge1xyXG4gICAgICAgICAgICBjb25zdCBoYWNrU2VydmVyID0gU2VydmVyTWFuYWdlci5idXlPclVwZ3JhZGVTZXJ2ZXIobnMsIGhhY2tSYW1OZWVkZWQsIENvbmZpZy5IQUNLX1NFUlZFUl9OQU1FKTtcclxuICAgICAgICAgICAgY29uc3QgU2VydmVyID0gU2VydmVyTWFuYWdlci5idXlPclVwZ3JhZGVTZXJ2ZXIobnMsIGdyb3dSYW1OZWVkZWQsIENvbmZpZy5HUk9XX1NFUlZFUl9OQU1FKTtcclxuICAgICAgICAgICAgY29uc3Qgd2Vha2VuMVNlcnZlciA9IFNlcnZlck1hbmFnZXIuYnV5T3JVcGdyYWRlU2VydmVyKG5zLCB3ZWFrZW4xUmFtTmVlZGVkLCBDb25maWcuV0VBS19TRVJWRVJfTkFNRSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHdlYWtlbjJTZXJ2ZXIgPSBTZXJ2ZXJNYW5hZ2VyLmJ1eU9yVXBncmFkZVNlcnZlcihucywgd2Vha2VuMlJhbU5lZWRlZCwgQ29uZmlnLldFQUtfU0VSVkVSX05BTUUpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGhhY2tTZXJ2ZXIgIT09IFwiXCIgJiYgU2VydmVyICE9PSBcIlwiICYmIHdlYWtlbjFTZXJ2ZXIgIT09IFwiXCIgJiYgd2Vha2VuMlNlcnZlciAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJTZXJ2ZXJzIGJvdWdodCwgcnVubmluZyBwYXJhbGxlbCBtb2RlIG9uIFwiICsgdGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBoYWNrVGhyZXNob2xkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBoYWNrVGhyZXNob2xkID0gTWF0aC5yb3VuZCgoaGFja1RocmVzaG9sZCAtIFRIUkVTSE9MRF9TVEVQKSAqIDEwMCkgLyAxMDA7XHJcbiAgICAgICAgaWYgKGhhY2tUaHJlc2hvbGQgPCBDb25maWcuTUlOX0hBQ0tfVEhSRVNIT0xEKSB7XHJcbiAgICAgICAgICAgIG5zLnRwcmludChDb2xvcnMuUkVEICsgXCJFcnJvciEgTm90IGVub3VnaCBSQU0gdG8gcnVuIHBhcmFsbGVsIG1vZGUgb24gXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciEgTm90IGVub3VnaCBSQU0gdG8gcnVuIHBhcmFsbGVsIG1vZGUgb24gXCIgKyB0YXJnZXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBucy5wcmludChcIlRocmVzaG9sZCBpcyB0b28gaGlnaCwgdHJ5aW5nIHdpdGg6IFwiICsgaGFja1RocmVzaG9sZCk7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFFQSxTQUFTLGNBQWM7QUFDdkIsU0FBUyxZQUFZO0FBQ3JCLFNBQVMsMkJBQTJCLHFCQUFxQjtBQUN6RDtBQUFBLEVBQ0k7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxPQUNHO0FBQ1AsU0FBUyxxQkFBcUI7QUFDOUIsU0FBUyxxQkFBcUI7QUFDOUIsU0FBUyxxQkFBcUI7QUFDOUIsU0FBUyxxQkFBcUI7QUFFOUIsc0JBQXNCLEtBQUssSUFBUTtBQUMvQixLQUFHLEtBQUs7QUFDUixLQUFHLFdBQVcsS0FBSztBQUduQixNQUFJLEdBQUcsTUFBTSxjQUFjO0FBQUcsT0FBRyxLQUFLLG9CQUFvQixNQUFNO0FBRWhFLE1BQUksZ0JBQWdCO0FBQ3BCLE1BQUksYUFBYTtBQUVqQixRQUFNLE9BQU8sS0FBSyxZQUFZO0FBQzlCLFNBQU8sTUFBTTtBQUNULFNBQUssVUFBVTtBQUVmLGtCQUFjLFlBQVksRUFBRSxFQUFFLFlBQVksRUFBRTtBQUU1QyxVQUFNLFNBQVMsY0FBYyxFQUFFO0FBRS9CLGdCQUFZLElBQUksR0FBRyxNQUFNO0FBQ3pCLE9BQUcsTUFBTSxpQkFBaUIsYUFBYSxjQUFjLE1BQU07QUFDM0QsUUFBSSxHQUFHLFdBQVcsZ0JBQWdCLE1BQU0sR0FBRztBQUN2QyxVQUFJLGVBQWUsUUFBUTtBQUV2QixZQUNJLEdBQUcsa0JBQWtCLE1BQU0sS0FBSyxXQUFXLEdBQUcsd0JBQXdCLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxLQUN4RixXQUFXLEdBQUcsdUJBQXVCLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxLQUFLLEdBQUcsMEJBQTBCLE1BQU0sR0FDakc7QUFDRSxnQkFBTSxjQUFjLElBQUksTUFBTTtBQUFBLFFBQ2xDO0FBQ0Esd0JBQWdCLGlCQUFpQixJQUFJLE1BQU07QUFDM0MsV0FBRyxPQUFPLE9BQU8sV0FBVyxvQkFBb0IsYUFBYTtBQUU3RCxZQUNJLEdBQUcsa0JBQWtCLE1BQU0sS0FBSyxXQUFXLEdBQUcsd0JBQXdCLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxLQUN4RixXQUFXLEdBQUcsdUJBQXVCLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxLQUFLLEdBQUcsMEJBQTBCLE1BQU0sR0FDakc7QUFDRSxhQUFHLE1BQU0sT0FBTyxRQUFRLDhDQUE4QztBQUFBLFFBQzFFLE9BQU87QUFDSCxhQUFHLE9BQU8sT0FBTyxNQUFNLG9CQUFvQjtBQUMzQyxnQkFBTSxJQUFJLE1BQU0sb0JBQW9CO0FBQUEsUUFDeEM7QUFFQSxxQkFBYTtBQUFBLE1BQ2pCO0FBR0Esb0JBQWMsWUFBWSxFQUFFLEVBQUUsWUFBWSxFQUFFO0FBQzVDLFlBQU0sY0FBYyxJQUFJLFFBQVEsZUFBZSxPQUFPLGdCQUFnQjtBQUFBLElBQzFFLE9BQU87QUFDSCxVQUFJLGVBQWUsUUFBUTtBQUl2QixZQUNJLEdBQUcsa0JBQWtCLE1BQU0sS0FBSyxHQUFHLHdCQUF3QixNQUFNLEtBQ2pFLEdBQUcsdUJBQXVCLE1BQU0sS0FBSyxHQUFHLDBCQUEwQixNQUFNLEdBQzFFO0FBQ0UsZ0JBQU0sY0FBYyxJQUFJLE1BQU07QUFBQSxRQUNsQztBQUNBLHdCQUFnQixpQkFBaUIsSUFBSSxNQUFNO0FBQzNDLFdBQUcsTUFBTSxvQkFBb0IsYUFBYTtBQUUxQyxZQUNJLEdBQUcsa0JBQWtCLE1BQU0sS0FBSyxHQUFHLHdCQUF3QixNQUFNLEtBQ2pFLEdBQUcsdUJBQXVCLE1BQU0sS0FBSyxHQUFHLDBCQUEwQixNQUFNLEdBQzFFO0FBQ0UsYUFBRyxNQUFNLE9BQU8sUUFBUSw4Q0FBOEM7QUFBQSxRQUMxRSxPQUFPO0FBQ0gsYUFBRyxPQUFPLE9BQU8sTUFBTSx3Q0FBd0M7QUFDL0QsZ0JBQU0sSUFBSSxNQUFNLHdDQUF3QztBQUFBLFFBQzVEO0FBRUEscUJBQWE7QUFBQSxNQUNqQjtBQUdBLFlBQU0sY0FBYyxJQUFJLFFBQVEsYUFBYTtBQUFBLElBQ2pEO0FBQ0EsU0FBSyxRQUFRO0FBQ2IsT0FBRyxNQUFNLGlCQUFpQixLQUFLLFFBQVEsRUFBRSxDQUFDO0FBQUEsRUFDOUM7QUFDSjtBQUVBLFNBQVMsaUJBQWlCLElBQVEsUUFBd0I7QUFDdEQsUUFBTSxXQUFXLDBCQUEwQixFQUFFO0FBQzdDLFFBQU0sY0FBYyxTQUFTLE9BQU8sQ0FBQyxLQUFLLFdBQVc7QUFDakQsV0FBTyxNQUFNLE9BQU87QUFBQSxFQUN4QixHQUFHLENBQUM7QUFFSixNQUFJLGdCQUFnQjtBQUNwQixRQUFNLGlCQUFpQixPQUFPO0FBRzlCLFFBQU0sYUFBYSxPQUFPO0FBQzFCLFFBQU0sV0FBVyxPQUFPO0FBQ3hCLFFBQU0sV0FBVyxPQUFPO0FBRXhCLFNBQU8sTUFBTTtBQUNULFFBQUksb0JBQW9CO0FBQ3hCLFFBQUksb0JBQW9CO0FBQ3hCLFFBQUksR0FBRyxXQUFXLGdCQUFnQixNQUFNLEdBQUc7QUFDdkMsMEJBQW9CLHVCQUF1QixJQUFJLFFBQVEsYUFBYTtBQUVwRSwwQkFBb0IsdUJBQXVCLElBQUksUUFBUSxpQkFBaUI7QUFBQSxJQUM1RSxPQUFPO0FBQ0gsWUFBTSxhQUFhLEdBQUcsa0JBQWtCLE1BQU0sSUFBSTtBQUNsRCwwQkFBb0IsS0FBSyxLQUFLLEdBQUcsbUJBQW1CLFFBQVEsVUFBVSxDQUFDO0FBRXZFLDBCQUFvQix3QkFBd0IsSUFBSSxRQUFRLGdCQUFnQixjQUFjO0FBQUEsSUFDMUY7QUFDQSxVQUFNLHFCQUFxQiwwQkFBMEIsSUFBSSxpQkFBaUI7QUFFMUUsVUFBTSxzQkFBc0IsMEJBQTBCLElBQUksaUJBQWlCO0FBRzNFLFVBQU0sbUJBQW1CLGFBQWE7QUFDdEMsVUFBTSxtQkFBbUIsYUFBYTtBQUN0QyxVQUFNLGdCQUFnQixXQUFXO0FBQ2pDLFVBQU0sZ0JBQWdCLFdBQVc7QUFFakMsVUFBTSxpQkFBaUIsbUJBQW1CLG1CQUFtQixnQkFBZ0I7QUFHN0UsT0FBRyxNQUFNLDJCQUEyQjtBQUNwQyxPQUFHLE1BQU0seUJBQXlCLHFCQUFxQixXQUFXLG1CQUFtQixXQUFXO0FBQ2hHLE9BQUcsTUFBTSx3QkFBd0Isb0JBQW9CLFdBQVcsZ0JBQWdCLFdBQVc7QUFDM0YsT0FBRyxNQUFNLDBCQUEwQixzQkFBc0IsV0FBVyxtQkFBbUIsV0FBVztBQUNsRyxPQUFHLE1BQU0sd0JBQXdCLG9CQUFvQixXQUFXLGdCQUFnQixXQUFXO0FBRTNGLFFBQUksaUJBQWlCLGFBQWE7QUFDOUIsU0FBRztBQUFBLFFBQ0MsV0FBVyxpQkFBaUIsdUJBQXVCLGNBQWMsZ0NBQWdDO0FBQUEsTUFDckc7QUFDQSxhQUFPO0FBQUEsSUFDWDtBQUNBLE9BQUc7QUFBQSxNQUNDLE9BQU8sU0FDSCw0Q0FDQSxTQUNBO0FBQUEsSUFDUjtBQUVBLFFBQUksR0FBRyxXQUFXLGdCQUFnQixNQUFNLEdBQUc7QUFDdkMsWUFBTSxhQUFhLGNBQWMsbUJBQW1CLElBQUksZUFBZSxPQUFPLGdCQUFnQjtBQUM5RixZQUFNLFNBQVMsY0FBYyxtQkFBbUIsSUFBSSxlQUFlLE9BQU8sZ0JBQWdCO0FBQzFGLFlBQU0sZ0JBQWdCLGNBQWMsbUJBQW1CLElBQUksa0JBQWtCLE9BQU8sZ0JBQWdCO0FBQ3BHLFlBQU0sZ0JBQWdCLGNBQWMsbUJBQW1CLElBQUksa0JBQWtCLE9BQU8sZ0JBQWdCO0FBRXBHLFVBQUksZUFBZSxNQUFNLFdBQVcsTUFBTSxrQkFBa0IsTUFBTSxrQkFBa0IsSUFBSTtBQUNwRixXQUFHLE1BQU0sT0FBTyxRQUFRLDhDQUE4QyxNQUFNO0FBQzVFLGVBQU87QUFBQSxNQUNYO0FBQUEsSUFDSjtBQUVBLG9CQUFnQixLQUFLLE9BQU8sZ0JBQWdCLGtCQUFrQixHQUFHLElBQUk7QUFDckUsUUFBSSxnQkFBZ0IsT0FBTyxvQkFBb0I7QUFDM0MsU0FBRyxPQUFPLE9BQU8sTUFBTSxtREFBbUQsTUFBTTtBQUNoRixZQUFNLElBQUksTUFBTSxtREFBbUQsTUFBTTtBQUFBLElBQzdFO0FBQ0EsT0FBRyxNQUFNLHlDQUF5QyxhQUFhO0FBQUEsRUFDbkU7QUFDSjsiLCJuYW1lcyI6W119\",\"filename\":\"hackingDeamon.js\",\"server\":\"home\"}}],[\"loop/prepareServer.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { Colors, getGrowThreads, getWeakenThreads, getWeakenThreadsAfterGrow } from \\\"/lib.js\\\";\\nimport { WGHAlgorithms } from \\\"/parallel/WGHAlgorithms.js\\\";\\nimport { printServerStats } from \\\"/serverStats.js\\\";\\nimport { getBestHostByRamOptimized } from \\\"/bestServer.js\\\";\\nexport async function main(ns) {\\n  ns.tail();\\n  await prepareServer(ns, \\\"foodnstuff\\\");\\n}\\nexport async function prepareServer(ns, target, threshold = 0.8) {\\n  const allHosts = getBestHostByRamOptimized(ns);\\n  const sumAvailableRam = allHosts.reduce((acc, server) => {\\n    return acc + server.availableRam;\\n  }, 0);\\n  const weakenThreads = getWeakenThreads(ns, target);\\n  const growThreads = getGrowThreads(ns, target);\\n  const weakenAfterGrowThreads = getWeakenThreadsAfterGrow(ns, growThreads);\\n  const totalRamNeeded = weakenThreads * Config.WEAKEN_SCRIPT_RAM + growThreads * Config.GROW_SCRIPT_RAM + weakenAfterGrowThreads * Config.WEAKEN_SCRIPT_RAM;\\n  ns.print(\\n    \\\"needs \\\" + totalRamNeeded + \\\"GB of RAM and got \\\" + sumAvailableRam + \\\" to running parallel mode on \\\" + target\\n  );\\n  if (totalRamNeeded < sumAvailableRam) {\\n    ns.print(Colors.CYAN + \\\"Preparing \\\" + target + \\\" in parallel mode\\\");\\n    const weakTime = ns.getWeakenTime(target);\\n    const growTime = ns.getGrowTime(target);\\n    WGHAlgorithms.weakenServer(ns, target, 1, false, 0, false);\\n    const growDelay = weakTime - growTime + Config.DELAY_MARGIN_MS;\\n    WGHAlgorithms.growServer(ns, target, false, growDelay, false);\\n    const weak2delay = 2 * Config.DELAY_MARGIN_MS;\\n    WGHAlgorithms.weakenServer(ns, target, 2, false, weak2delay, false);\\n    await ns.sleep(weakTime + 4 * Config.DELAY_MARGIN_MS);\\n  } else {\\n    ns.print(Colors.CYAN + \\\"Preparing \\\" + target + \\\" in loop mode\\\");\\n    const safetyMarginMs = Config.DELAY_MARGIN_MS;\\n    while (true) {\\n      const totalWeakenThreadsNeeded = getWeakenThreads(ns, target);\\n      ns.print(Colors.CYAN + \\\"------------ WEAKENING ------------\\\");\\n      ns.print(\\\"total weaken threads needed: \\\" + totalWeakenThreadsNeeded);\\n      let threadsDispatched = 0;\\n      let threadsRemaining = totalWeakenThreadsNeeded;\\n      while (threadsDispatched < totalWeakenThreadsNeeded) {\\n        const weakenTime = ns.getWeakenTime(target);\\n        for (let i = 0; i < allHosts.length; i++) {\\n          if (threadsDispatched >= totalWeakenThreadsNeeded)\\n            break;\\n          const host = allHosts[i];\\n          const freeRam = host.maxRam - ns.getServerUsedRam(host.name);\\n          if (freeRam < Config.WEAKEN_SCRIPT_RAM)\\n            continue;\\n          const numThreadsOnHost = Math.floor(freeRam / Config.WEAKEN_SCRIPT_RAM);\\n          const threadsToDispatch = Math.min(threadsRemaining, numThreadsOnHost);\\n          ns.exec(\\\"weaken.js\\\", host.name, threadsToDispatch, target, 0);\\n          threadsRemaining -= threadsToDispatch;\\n          threadsDispatched += threadsToDispatch;\\n        }\\n        ns.print(\\\"dispatched \\\" + threadsDispatched + \\\" weaken threads\\\");\\n        await ns.sleep(weakenTime + safetyMarginMs + 1e3);\\n        ns.print(\\\"done with \\\" + threadsDispatched + \\\"/\\\" + totalWeakenThreadsNeeded + \\\" weakens\\\");\\n      }\\n      printServerStats(ns, target, threshold);\\n      ns.print(Colors.CYAN + \\\"------------- GROWING -------------\\\");\\n      const totalGrowThreadsNeeded = getGrowThreads(ns, target);\\n      if (totalGrowThreadsNeeded === 0) {\\n        ns.print(\\\"No growth needed\\\");\\n        break;\\n      }\\n      ns.print(\\\"total growing threads needed: \\\" + totalGrowThreadsNeeded);\\n      const growingTime = ns.getGrowTime(target);\\n      threadsDispatched = 0;\\n      for (let i = 0; i < allHosts.length; i++) {\\n        const host = allHosts[i];\\n        const freeRam = host.maxRam - ns.getServerUsedRam(host.name);\\n        if (freeRam < Config.GROW_SCRIPT_RAM)\\n          continue;\\n        const numThreadsOnHost = Math.floor(freeRam / Config.GROW_SCRIPT_RAM);\\n        ns.exec(\\\"grow.js\\\", host.name, numThreadsOnHost, target, 0);\\n        threadsDispatched += numThreadsOnHost;\\n      }\\n      ns.print(\\\"dispatched \\\" + threadsDispatched + \\\" grow threads\\\");\\n      await ns.sleep(growingTime + safetyMarginMs);\\n      ns.print(\\\"done with \\\" + threadsDispatched + \\\"/\\\" + totalGrowThreadsNeeded + \\\" grows\\\");\\n      printServerStats(ns, target, threshold);\\n    }\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZXBhcmVTZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSBcIkAvQ29uZmlnL0NvbmZpZ1wiO1xyXG5pbXBvcnQgeyBDb2xvcnMsIGdldEdyb3dUaHJlYWRzLCBnZXRXZWFrZW5UaHJlYWRzLCBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJHcm93IH0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IFdHSEFsZ29yaXRobXMgfSBmcm9tIFwiQC9wYXJhbGxlbC9XR0hBbGdvcml0aG1zXCI7XHJcbmltcG9ydCB7IHByaW50U2VydmVyU3RhdHMgfSBmcm9tIFwiQC9zZXJ2ZXJTdGF0c1wiO1xyXG5pbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuaW1wb3J0IHsgZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZCB9IGZyb20gXCIuLi9iZXN0U2VydmVyXCI7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcclxuICAgIG5zLnRhaWwoKTtcclxuICAgIGF3YWl0IHByZXBhcmVTZXJ2ZXIobnMsIFwiZm9vZG5zdHVmZlwiKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZXBhcmVTZXJ2ZXIobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgdGhyZXNob2xkID0gMC44KSB7XHJcbiAgICAvLyBlaXRoZXIgcHJlcGFyZSBpbiBsb29wIG9yIHBhcmFsbGVsIG1vZGVcclxuICAgIGNvbnN0IGFsbEhvc3RzID0gZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZChucyk7XHJcbiAgICBjb25zdCBzdW1BdmFpbGFibGVSYW0gPSBhbGxIb3N0cy5yZWR1Y2UoKGFjYywgc2VydmVyKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGFjYyArIHNlcnZlci5hdmFpbGFibGVSYW07XHJcbiAgICB9LCAwKTtcclxuXHJcbiAgICAvLyBob3cgbXVjaCB0aHJlYWRzIGFyZSBuZWVkZWQ6IHdlYWtlbiBmcm9tIHVua25vd24gdG8gbWluICsgZ3JvdyBmcm9tIHVua25vd24gdG8gbWF4ICsgd2Vha2VuIGdyb3cgZWZmZWN0XHJcbiAgICBjb25zdCB3ZWFrZW5UaHJlYWRzID0gZ2V0V2Vha2VuVGhyZWFkcyhucywgdGFyZ2V0KTtcclxuICAgIGNvbnN0IGdyb3dUaHJlYWRzID0gZ2V0R3Jvd1RocmVhZHMobnMsIHRhcmdldCk7XHJcbiAgICBjb25zdCB3ZWFrZW5BZnRlckdyb3dUaHJlYWRzID0gZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyhucywgZ3Jvd1RocmVhZHMpO1xyXG5cclxuICAgIGNvbnN0IHRvdGFsUmFtTmVlZGVkID1cclxuICAgICAgICB3ZWFrZW5UaHJlYWRzICogQ29uZmlnLldFQUtFTl9TQ1JJUFRfUkFNICtcclxuICAgICAgICBncm93VGhyZWFkcyAqIENvbmZpZy5HUk9XX1NDUklQVF9SQU0gK1xyXG4gICAgICAgIHdlYWtlbkFmdGVyR3Jvd1RocmVhZHMgKiBDb25maWcuV0VBS0VOX1NDUklQVF9SQU07XHJcblxyXG4gICAgbnMucHJpbnQoXHJcbiAgICAgICAgXCJuZWVkcyBcIiArIHRvdGFsUmFtTmVlZGVkICsgXCJHQiBvZiBSQU0gYW5kIGdvdCBcIiArIHN1bUF2YWlsYWJsZVJhbSArIFwiIHRvIHJ1bm5pbmcgcGFyYWxsZWwgbW9kZSBvbiBcIiArIHRhcmdldCxcclxuICAgICk7XHJcblxyXG4gICAgaWYgKHRvdGFsUmFtTmVlZGVkIDwgc3VtQXZhaWxhYmxlUmFtKSB7XHJcbiAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gUEFSQUxMRUwgTU9ERSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICAgIG5zLnByaW50KENvbG9ycy5DWUFOICsgXCJQcmVwYXJpbmcgXCIgKyB0YXJnZXQgKyBcIiBpbiBwYXJhbGxlbCBtb2RlXCIpO1xyXG5cclxuICAgICAgICBjb25zdCB3ZWFrVGltZSA9IG5zLmdldFdlYWtlblRpbWUodGFyZ2V0KTtcclxuICAgICAgICBjb25zdCBncm93VGltZSA9IG5zLmdldEdyb3dUaW1lKHRhcmdldCk7XHJcblxyXG4gICAgICAgIFdHSEFsZ29yaXRobXMud2Vha2VuU2VydmVyKG5zLCB0YXJnZXQsIDEsIGZhbHNlLCAwLCBmYWxzZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IGdyb3dEZWxheSA9IHdlYWtUaW1lIC0gZ3Jvd1RpbWUgKyBDb25maWcuREVMQVlfTUFSR0lOX01TO1xyXG4gICAgICAgIFdHSEFsZ29yaXRobXMuZ3Jvd1NlcnZlcihucywgdGFyZ2V0LCBmYWxzZSwgZ3Jvd0RlbGF5LCBmYWxzZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHdlYWsyZGVsYXkgPSAyICogQ29uZmlnLkRFTEFZX01BUkdJTl9NUztcclxuICAgICAgICBXR0hBbGdvcml0aG1zLndlYWtlblNlcnZlcihucywgdGFyZ2V0LCAyLCBmYWxzZSwgd2VhazJkZWxheSwgZmFsc2UpO1xyXG5cclxuICAgICAgICAvLyB3YWl0IGZvciBwcmVwIHRvIGZpbmlzaFxyXG4gICAgICAgIGF3YWl0IG5zLnNsZWVwKHdlYWtUaW1lICsgNCAqIENvbmZpZy5ERUxBWV9NQVJHSU5fTVMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIExPT1AgTU9ERSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIlByZXBhcmluZyBcIiArIHRhcmdldCArIFwiIGluIGxvb3AgbW9kZVwiKTtcclxuXHJcbiAgICAgICAgY29uc3Qgc2FmZXR5TWFyZ2luTXMgPSBDb25maWcuREVMQVlfTUFSR0lOX01TO1xyXG5cclxuICAgICAgICAvLyBUT0RPOiB1c2Ugc2ltaWxhciBtZXRob2QgYXMgaW4gcGFyYWxsZWwvbWFuYWdlci50cyB0byBsZXQgdGhlIGdyb3cgZmluaXNoIHJpZ2h0IGFmdGVyIHRoZSB3ZWFrZW5cclxuICAgICAgICB3aGlsZSAodHJ1ZSkge1xyXG4gICAgICAgICAgICBjb25zdCB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQgPSBnZXRXZWFrZW5UaHJlYWRzKG5zLCB0YXJnZXQpO1xyXG5cclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIi0tLS0tLS0tLS0tLSBXRUFLRU5JTkcgLS0tLS0tLS0tLS0tXCIpO1xyXG4gICAgICAgICAgICBucy5wcmludChcInRvdGFsIHdlYWtlbiB0aHJlYWRzIG5lZWRlZDogXCIgKyB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQpO1xyXG4gICAgICAgICAgICAvLyB3ZWFrZW4gdG8gbWluIHNlYyBsdmxcclxuICAgICAgICAgICAgbGV0IHRocmVhZHNEaXNwYXRjaGVkID0gMDtcclxuICAgICAgICAgICAgbGV0IHRocmVhZHNSZW1haW5pbmcgPSB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQ7XHJcbiAgICAgICAgICAgIHdoaWxlICh0aHJlYWRzRGlzcGF0Y2hlZCA8IHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgd2Vha2VuVGltZSA9IG5zLmdldFdlYWtlblRpbWUodGFyZ2V0KTtcclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbEhvc3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRocmVhZHNEaXNwYXRjaGVkID49IHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCkgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGhvc3QgPSBhbGxIb3N0c1tpXTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBmcmVlUmFtID0gaG9zdC5tYXhSYW0gLSBucy5nZXRTZXJ2ZXJVc2VkUmFtKGhvc3QubmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZyZWVSYW0gPCBDb25maWcuV0VBS0VOX1NDUklQVF9SQU0pIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG51bVRocmVhZHNPbkhvc3QgPSBNYXRoLmZsb29yKGZyZWVSYW0gLyBDb25maWcuV0VBS0VOX1NDUklQVF9SQU0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB0aHJlYWRzVG9EaXNwYXRjaCA9IE1hdGgubWluKHRocmVhZHNSZW1haW5pbmcsIG51bVRocmVhZHNPbkhvc3QpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBucy5leGVjKFwid2Vha2VuLmpzXCIsIGhvc3QubmFtZSwgdGhyZWFkc1RvRGlzcGF0Y2gsIHRhcmdldCwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyZWFkc1JlbWFpbmluZyAtPSB0aHJlYWRzVG9EaXNwYXRjaDtcclxuICAgICAgICAgICAgICAgICAgICB0aHJlYWRzRGlzcGF0Y2hlZCArPSB0aHJlYWRzVG9EaXNwYXRjaDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG5zLnByaW50KFwiZGlzcGF0Y2hlZCBcIiArIHRocmVhZHNEaXNwYXRjaGVkICsgXCIgd2Vha2VuIHRocmVhZHNcIik7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCBucy5zbGVlcCh3ZWFrZW5UaW1lICsgc2FmZXR5TWFyZ2luTXMgKyAxMDAwKTtcclxuICAgICAgICAgICAgICAgIG5zLnByaW50KFwiZG9uZSB3aXRoIFwiICsgdGhyZWFkc0Rpc3BhdGNoZWQgKyBcIi9cIiArIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCArIFwiIHdlYWtlbnNcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcHJpbnRTZXJ2ZXJTdGF0cyhucywgdGFyZ2V0LCB0aHJlc2hvbGQpO1xyXG5cclxuICAgICAgICAgICAgbnMucHJpbnQoQ29sb3JzLkNZQU4gKyBcIi0tLS0tLS0tLS0tLS0gR1JPV0lORyAtLS0tLS0tLS0tLS0tXCIpO1xyXG4gICAgICAgICAgICBjb25zdCB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkID0gZ2V0R3Jvd1RocmVhZHMobnMsIHRhcmdldCk7XHJcbiAgICAgICAgICAgIC8vIGNoZWNrIGlmIGdyb3cgaXMgbmVlZGVkXHJcbiAgICAgICAgICAgIGlmICh0b3RhbEdyb3dUaHJlYWRzTmVlZGVkID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBucy5wcmludChcIk5vIGdyb3d0aCBuZWVkZWRcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBucy5wcmludChcInRvdGFsIGdyb3dpbmcgdGhyZWFkcyBuZWVkZWQ6IFwiICsgdG90YWxHcm93VGhyZWFkc05lZWRlZCk7XHJcblxyXG4gICAgICAgICAgICAvLyBncm93IG9uZSBiYXRjaFxyXG4gICAgICAgICAgICBjb25zdCBncm93aW5nVGltZSA9IG5zLmdldEdyb3dUaW1lKHRhcmdldCk7XHJcbiAgICAgICAgICAgIHRocmVhZHNEaXNwYXRjaGVkID0gMDtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxIb3N0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgLy8gaWYgKHRocmVhZHNEaXNwYXRjaGVkID49IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQpIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IGhvc3QgPSBhbGxIb3N0c1tpXTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGZyZWVSYW0gPSBob3N0Lm1heFJhbSAtIG5zLmdldFNlcnZlclVzZWRSYW0oaG9zdC5uYW1lKTtcclxuICAgICAgICAgICAgICAgIGlmIChmcmVlUmFtIDwgQ29uZmlnLkdST1dfU0NSSVBUX1JBTSkgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBudW1UaHJlYWRzT25Ib3N0ID0gTWF0aC5mbG9vcihmcmVlUmFtIC8gQ29uZmlnLkdST1dfU0NSSVBUX1JBTSk7XHJcblxyXG4gICAgICAgICAgICAgICAgbnMuZXhlYyhcImdyb3cuanNcIiwgaG9zdC5uYW1lLCBudW1UaHJlYWRzT25Ib3N0LCB0YXJnZXQsIDApO1xyXG4gICAgICAgICAgICAgICAgdGhyZWFkc0Rpc3BhdGNoZWQgKz0gbnVtVGhyZWFkc09uSG9zdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBucy5wcmludChcImRpc3BhdGNoZWQgXCIgKyB0aHJlYWRzRGlzcGF0Y2hlZCArIFwiIGdyb3cgdGhyZWFkc1wiKTtcclxuICAgICAgICAgICAgYXdhaXQgbnMuc2xlZXAoZ3Jvd2luZ1RpbWUgKyBzYWZldHlNYXJnaW5Ncyk7XHJcbiAgICAgICAgICAgIG5zLnByaW50KFwiZG9uZSB3aXRoIFwiICsgdGhyZWFkc0Rpc3BhdGNoZWQgKyBcIi9cIiArIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgKyBcIiBncm93c1wiKTtcclxuICAgICAgICAgICAgcHJpbnRTZXJ2ZXJTdGF0cyhucywgdGFyZ2V0LCB0aHJlc2hvbGQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsY0FBYztBQUN2QixTQUFTLFFBQVEsZ0JBQWdCLGtCQUFrQixpQ0FBaUM7QUFDcEYsU0FBUyxxQkFBcUI7QUFDOUIsU0FBUyx3QkFBd0I7QUFFakMsU0FBUyxpQ0FBaUM7QUFFMUMsc0JBQXNCLEtBQUssSUFBUTtBQUMvQixLQUFHLEtBQUs7QUFDUixRQUFNLGNBQWMsSUFBSSxZQUFZO0FBQ3hDO0FBRUEsc0JBQXNCLGNBQWMsSUFBUSxRQUFnQixZQUFZLEtBQUs7QUFFekUsUUFBTSxXQUFXLDBCQUEwQixFQUFFO0FBQzdDLFFBQU0sa0JBQWtCLFNBQVMsT0FBTyxDQUFDLEtBQUssV0FBVztBQUNyRCxXQUFPLE1BQU0sT0FBTztBQUFBLEVBQ3hCLEdBQUcsQ0FBQztBQUdKLFFBQU0sZ0JBQWdCLGlCQUFpQixJQUFJLE1BQU07QUFDakQsUUFBTSxjQUFjLGVBQWUsSUFBSSxNQUFNO0FBQzdDLFFBQU0seUJBQXlCLDBCQUEwQixJQUFJLFdBQVc7QUFFeEUsUUFBTSxpQkFDRixnQkFBZ0IsT0FBTyxvQkFDdkIsY0FBYyxPQUFPLGtCQUNyQix5QkFBeUIsT0FBTztBQUVwQyxLQUFHO0FBQUEsSUFDQyxXQUFXLGlCQUFpQix1QkFBdUIsa0JBQWtCLGtDQUFrQztBQUFBLEVBQzNHO0FBRUEsTUFBSSxpQkFBaUIsaUJBQWlCO0FBRWxDLE9BQUcsTUFBTSxPQUFPLE9BQU8sZUFBZSxTQUFTLG1CQUFtQjtBQUVsRSxVQUFNLFdBQVcsR0FBRyxjQUFjLE1BQU07QUFDeEMsVUFBTSxXQUFXLEdBQUcsWUFBWSxNQUFNO0FBRXRDLGtCQUFjLGFBQWEsSUFBSSxRQUFRLEdBQUcsT0FBTyxHQUFHLEtBQUs7QUFFekQsVUFBTSxZQUFZLFdBQVcsV0FBVyxPQUFPO0FBQy9DLGtCQUFjLFdBQVcsSUFBSSxRQUFRLE9BQU8sV0FBVyxLQUFLO0FBRTVELFVBQU0sYUFBYSxJQUFJLE9BQU87QUFDOUIsa0JBQWMsYUFBYSxJQUFJLFFBQVEsR0FBRyxPQUFPLFlBQVksS0FBSztBQUdsRSxVQUFNLEdBQUcsTUFBTSxXQUFXLElBQUksT0FBTyxlQUFlO0FBQUEsRUFDeEQsT0FBTztBQUVILE9BQUcsTUFBTSxPQUFPLE9BQU8sZUFBZSxTQUFTLGVBQWU7QUFFOUQsVUFBTSxpQkFBaUIsT0FBTztBQUc5QixXQUFPLE1BQU07QUFDVCxZQUFNLDJCQUEyQixpQkFBaUIsSUFBSSxNQUFNO0FBRTVELFNBQUcsTUFBTSxPQUFPLE9BQU8scUNBQXFDO0FBQzVELFNBQUcsTUFBTSxrQ0FBa0Msd0JBQXdCO0FBRW5FLFVBQUksb0JBQW9CO0FBQ3hCLFVBQUksbUJBQW1CO0FBQ3ZCLGFBQU8sb0JBQW9CLDBCQUEwQjtBQUNqRCxjQUFNLGFBQWEsR0FBRyxjQUFjLE1BQU07QUFFMUMsaUJBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsY0FBSSxxQkFBcUI7QUFBMEI7QUFFbkQsZ0JBQU0sT0FBTyxTQUFTLENBQUM7QUFDdkIsZ0JBQU0sVUFBVSxLQUFLLFNBQVMsR0FBRyxpQkFBaUIsS0FBSyxJQUFJO0FBQzNELGNBQUksVUFBVSxPQUFPO0FBQW1CO0FBQ3hDLGdCQUFNLG1CQUFtQixLQUFLLE1BQU0sVUFBVSxPQUFPLGlCQUFpQjtBQUV0RSxnQkFBTSxvQkFBb0IsS0FBSyxJQUFJLGtCQUFrQixnQkFBZ0I7QUFFckUsYUFBRyxLQUFLLGFBQWEsS0FBSyxNQUFNLG1CQUFtQixRQUFRLENBQUM7QUFDNUQsOEJBQW9CO0FBQ3BCLCtCQUFxQjtBQUFBLFFBQ3pCO0FBQ0EsV0FBRyxNQUFNLGdCQUFnQixvQkFBb0IsaUJBQWlCO0FBQzlELGNBQU0sR0FBRyxNQUFNLGFBQWEsaUJBQWlCLEdBQUk7QUFDakQsV0FBRyxNQUFNLGVBQWUsb0JBQW9CLE1BQU0sMkJBQTJCLFVBQVU7QUFBQSxNQUMzRjtBQUNBLHVCQUFpQixJQUFJLFFBQVEsU0FBUztBQUV0QyxTQUFHLE1BQU0sT0FBTyxPQUFPLHFDQUFxQztBQUM1RCxZQUFNLHlCQUF5QixlQUFlLElBQUksTUFBTTtBQUV4RCxVQUFJLDJCQUEyQixHQUFHO0FBQzlCLFdBQUcsTUFBTSxrQkFBa0I7QUFDM0I7QUFBQSxNQUNKO0FBQ0EsU0FBRyxNQUFNLG1DQUFtQyxzQkFBc0I7QUFHbEUsWUFBTSxjQUFjLEdBQUcsWUFBWSxNQUFNO0FBQ3pDLDBCQUFvQjtBQUNwQixlQUFTLElBQUksR0FBRyxJQUFJLFNBQVMsUUFBUSxLQUFLO0FBR3RDLGNBQU0sT0FBTyxTQUFTLENBQUM7QUFDdkIsY0FBTSxVQUFVLEtBQUssU0FBUyxHQUFHLGlCQUFpQixLQUFLLElBQUk7QUFDM0QsWUFBSSxVQUFVLE9BQU87QUFBaUI7QUFDdEMsY0FBTSxtQkFBbUIsS0FBSyxNQUFNLFVBQVUsT0FBTyxlQUFlO0FBRXBFLFdBQUcsS0FBSyxXQUFXLEtBQUssTUFBTSxrQkFBa0IsUUFBUSxDQUFDO0FBQ3pELDZCQUFxQjtBQUFBLE1BQ3pCO0FBQ0EsU0FBRyxNQUFNLGdCQUFnQixvQkFBb0IsZUFBZTtBQUM1RCxZQUFNLEdBQUcsTUFBTSxjQUFjLGNBQWM7QUFDM0MsU0FBRyxNQUFNLGVBQWUsb0JBQW9CLE1BQU0seUJBQXlCLFFBQVE7QUFDbkYsdUJBQWlCLElBQUksUUFBUSxTQUFTO0FBQUEsSUFDMUM7QUFBQSxFQUNKO0FBQ0o7IiwibmFtZXMiOltdfQ==\",\"filename\":\"loop/prepareServer.js\",\"server\":\"home\"}}],[\"sm.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export function autocomplete(data) {\\n  return [...data.servers];\\n}\\nexport async function main(ns) {\\n  let primaryName = \\\"\\\";\\n  let isUpgrade = false;\\n  let upgradeRam = 0;\\n  let upgradeUnit = \\\"\\\";\\n  let isBuy = false;\\n  let buyRam = 0;\\n  let buyUnit = \\\"\\\";\\n  let isRename = false;\\n  let newName = \\\"\\\";\\n  let isDelete = false;\\n  let isKill = false;\\n  if (ns.args.length > 1) {\\n    if (ns.args[0] == \\\"-u\\\" && ns.args.length == 3) {\\n      isUpgrade = true;\\n      primaryName = ns.args[1].toString();\\n      upgradeRam = Number(String(ns.args[2]).slice(0, -1));\\n      upgradeUnit = String(ns.args[2]).slice(-1);\\n    }\\n    if (ns.args[0] == \\\"-b\\\" && ns.args.length == 3) {\\n      isBuy = true;\\n      primaryName = ns.args[1].toString();\\n      buyRam = Number(String(ns.args[2]).slice(0, -1));\\n      buyUnit = String(ns.args[2]).slice(-1);\\n    }\\n    if (ns.args[0] == \\\"-r\\\" && ns.args.length == 3) {\\n      isRename = true;\\n      primaryName = ns.args[1].toString();\\n      newName = ns.args[2].toString();\\n    }\\n    if (ns.args[0] == \\\"-d\\\" && ns.args.length == 2) {\\n      isDelete = true;\\n      primaryName = ns.args[1].toString();\\n    }\\n    if (ns.args[0] == \\\"-k\\\" && ns.args.length == 2) {\\n      isKill = true;\\n      primaryName = ns.args[1].toString();\\n    }\\n  } else {\\n    ns.tprint(\\n      \\\"\\\\nusage: sm.js [options]\\\\n\\\\nOptions:\\\\n\\t-u <Name> <Ram><G|T|P>\\\\n\\t-b <Name> <Ram><G|T|P>\\\\n\\t-r <old name> <new name>\\\\n\\t-d <server name>\\\"\\n    );\\n    return;\\n  }\\n  if (isUpgrade) {\\n    const exponent = Math.ceil(Math.log2(upgradeRam));\\n    upgradeRam = Math.pow(2, exponent);\\n    upgradeRam = getGBfromAnyUnit(ns, upgradeRam, upgradeUnit);\\n    const servers = ns.getPurchasedServers();\\n    if (!servers.includes(primaryName)) {\\n      ns.tprint(\\\"You do not own a server called \\\" + primaryName);\\n    }\\n    const price = ns.getPurchasedServerUpgradeCost(primaryName, upgradeRam);\\n    const answer = await ns.prompt(\\n      \\\"upgrading the server (\\\" + primaryName + \\\") to \\\" + upgradeRam + \\\"GB of Ram, will cost \\\" + ns.formatNumber(price)\\n    );\\n    if (answer)\\n      ns.upgradePurchasedServer(primaryName, upgradeRam);\\n  } else if (isBuy) {\\n    buyRam = getGBfromAnyUnit(ns, buyRam, buyUnit);\\n    if (buyRam < 1)\\n      return;\\n    const price = ns.getPurchasedServerCost(buyRam);\\n    const answer = await ns.prompt(\\n      \\\"buying the server (\\\" + primaryName + \\\") with \\\" + buyRam + \\\"GB of Ram, will cost \\\" + ns.formatNumber(price)\\n    );\\n    if (answer)\\n      ns.purchaseServer(primaryName, buyRam);\\n  } else if (isRename) {\\n    if (!ns.getPurchasedServers().includes(primaryName)) {\\n      ns.tprint(\\\"You do not own a server called \\\" + primaryName);\\n    }\\n    ns.renamePurchasedServer(primaryName, newName);\\n  } else if (isDelete) {\\n    ns.deleteServer(primaryName);\\n  } else if (isKill) {\\n    ns.tprint(\\\"Killing server \\\" + primaryName);\\n    ns.killall(primaryName);\\n  } else {\\n    const playerMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n    let ramSize = 16;\\n    while (ns.getPurchasedServerCost(ramSize) < playerMoney) {\\n      ramSize *= 2;\\n    }\\n    ramSize = ramSize / 2;\\n    ns.tprint(\\n      \\\"you can buy a server with \\\" + ramSize + \\\"GB of ram. This costs \\\" + ns.formatNumber(ns.getPurchasedServerCost(ramSize))\\n    );\\n    const answer = await ns.prompt(\\\"buy Server for \\\" + ns.formatNumber(ns.getPurchasedServerCost(ramSize)) + \\\"?\\\");\\n    if (answer) {\\n      ns.purchaseServer(\\\"hacker\\\", ramSize);\\n    }\\n  }\\n}\\nfunction getGBfromAnyUnit(ns, ram, unit) {\\n  if (unit == \\\"G\\\") {\\n    return ram;\\n  } else if (unit == \\\"T\\\") {\\n    return ram * 1024;\\n  } else if (unit == \\\"P\\\") {\\n    return ram * 1024 * 1024;\\n  } else {\\n    ns.tprint(\\n      \\\"\\\\nusage: sm.js [options]\\\\n\\\\nOptions:\\\\n\\t-u <Name> <Ram><G|T|P>\\\\n\\t-b <Name> <Ram><G|T|P>\\\\n\\t-r <old name> <new name>\\\"\\n    );\\n    return 0;\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5cclxuaW50ZXJmYWNlIEF1dG9jb21wbGV0ZURhdGEge1xyXG4gICAgc2VydmVyczogc3RyaW5nW107XHJcbiAgICB0eHRzOiBzdHJpbmdbXTtcclxuICAgIHNjcmlwdHM6IHN0cmluZ1tdO1xyXG4gICAgZmxhZ3M6IHN0cmluZ1tdO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGUoZGF0YTogQXV0b2NvbXBsZXRlRGF0YSkge1xyXG4gICAgcmV0dXJuIFsuLi5kYXRhLnNlcnZlcnNdO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcclxuICAgIGxldCBwcmltYXJ5TmFtZSA9IFwiXCI7XHJcblxyXG4gICAgbGV0IGlzVXBncmFkZSA9IGZhbHNlO1xyXG4gICAgbGV0IHVwZ3JhZGVSYW0gPSAwO1xyXG4gICAgbGV0IHVwZ3JhZGVVbml0ID0gXCJcIjtcclxuXHJcbiAgICBsZXQgaXNCdXkgPSBmYWxzZTtcclxuICAgIGxldCBidXlSYW0gPSAwO1xyXG4gICAgbGV0IGJ1eVVuaXQgPSBcIlwiO1xyXG5cclxuICAgIGxldCBpc1JlbmFtZSA9IGZhbHNlO1xyXG4gICAgbGV0IG5ld05hbWUgPSBcIlwiO1xyXG5cclxuICAgIGxldCBpc0RlbGV0ZSA9IGZhbHNlO1xyXG5cclxuICAgIGxldCBpc0tpbGwgPSBmYWxzZTtcclxuXHJcbiAgICBpZiAobnMuYXJncy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgaWYgKG5zLmFyZ3NbMF0gPT0gXCItdVwiICYmIG5zLmFyZ3MubGVuZ3RoID09IDMpIHtcclxuICAgICAgICAgICAgaXNVcGdyYWRlID0gdHJ1ZTtcclxuICAgICAgICAgICAgcHJpbWFyeU5hbWUgPSBucy5hcmdzWzFdLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgIHVwZ3JhZGVSYW0gPSBOdW1iZXIoU3RyaW5nKG5zLmFyZ3NbMl0pLnNsaWNlKDAsIC0xKSk7XHJcbiAgICAgICAgICAgIHVwZ3JhZGVVbml0ID0gU3RyaW5nKG5zLmFyZ3NbMl0pLnNsaWNlKC0xKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG5zLmFyZ3NbMF0gPT0gXCItYlwiICYmIG5zLmFyZ3MubGVuZ3RoID09IDMpIHtcclxuICAgICAgICAgICAgaXNCdXkgPSB0cnVlO1xyXG4gICAgICAgICAgICBwcmltYXJ5TmFtZSA9IG5zLmFyZ3NbMV0udG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgYnV5UmFtID0gTnVtYmVyKFN0cmluZyhucy5hcmdzWzJdKS5zbGljZSgwLCAtMSkpO1xyXG4gICAgICAgICAgICBidXlVbml0ID0gU3RyaW5nKG5zLmFyZ3NbMl0pLnNsaWNlKC0xKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG5zLmFyZ3NbMF0gPT0gXCItclwiICYmIG5zLmFyZ3MubGVuZ3RoID09IDMpIHtcclxuICAgICAgICAgICAgaXNSZW5hbWUgPSB0cnVlO1xyXG4gICAgICAgICAgICBwcmltYXJ5TmFtZSA9IG5zLmFyZ3NbMV0udG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgbmV3TmFtZSA9IG5zLmFyZ3NbMl0udG9TdHJpbmcoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG5zLmFyZ3NbMF0gPT0gXCItZFwiICYmIG5zLmFyZ3MubGVuZ3RoID09IDIpIHtcclxuICAgICAgICAgICAgaXNEZWxldGUgPSB0cnVlO1xyXG4gICAgICAgICAgICBwcmltYXJ5TmFtZSA9IG5zLmFyZ3NbMV0udG9TdHJpbmcoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG5zLmFyZ3NbMF0gPT0gXCIta1wiICYmIG5zLmFyZ3MubGVuZ3RoID09IDIpIHtcclxuICAgICAgICAgICAgaXNLaWxsID0gdHJ1ZTtcclxuICAgICAgICAgICAgcHJpbWFyeU5hbWUgPSBucy5hcmdzWzFdLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBucy50cHJpbnQoXHJcbiAgICAgICAgICAgIFwiXFxudXNhZ2U6IHNtLmpzIFtvcHRpb25zXVxcblxcbk9wdGlvbnM6XCIgK1xyXG4gICAgICAgICAgICAgICAgXCJcXG5cXHQtdSA8TmFtZT4gPFJhbT48R3xUfFA+XCIgK1xyXG4gICAgICAgICAgICAgICAgXCJcXG5cXHQtYiA8TmFtZT4gPFJhbT48R3xUfFA+XCIgK1xyXG4gICAgICAgICAgICAgICAgXCJcXG5cXHQtciA8b2xkIG5hbWU+IDxuZXcgbmFtZT5cIiArXHJcbiAgICAgICAgICAgICAgICBcIlxcblxcdC1kIDxzZXJ2ZXIgbmFtZT5cIixcclxuICAgICAgICApO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoaXNVcGdyYWRlKSB7XHJcbiAgICAgICAgLy8gZ2V0IGN1cnJlbnQgcmFtXHJcbiAgICAgICAgY29uc3QgZXhwb25lbnQgPSBNYXRoLmNlaWwoTWF0aC5sb2cyKHVwZ3JhZGVSYW0pKTtcclxuICAgICAgICB1cGdyYWRlUmFtID0gTWF0aC5wb3coMiwgZXhwb25lbnQpO1xyXG5cclxuICAgICAgICB1cGdyYWRlUmFtID0gZ2V0R0Jmcm9tQW55VW5pdChucywgdXBncmFkZVJhbSwgdXBncmFkZVVuaXQpO1xyXG4gICAgICAgIGNvbnN0IHNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCk7XHJcbiAgICAgICAgaWYgKCFzZXJ2ZXJzLmluY2x1ZGVzKHByaW1hcnlOYW1lKSkge1xyXG4gICAgICAgICAgICBucy50cHJpbnQoXCJZb3UgZG8gbm90IG93biBhIHNlcnZlciBjYWxsZWQgXCIgKyBwcmltYXJ5TmFtZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBwcmljZSA9IG5zLmdldFB1cmNoYXNlZFNlcnZlclVwZ3JhZGVDb3N0KHByaW1hcnlOYW1lLCB1cGdyYWRlUmFtKTtcclxuXHJcbiAgICAgICAgY29uc3QgYW5zd2VyID0gYXdhaXQgbnMucHJvbXB0KFxyXG4gICAgICAgICAgICBcInVwZ3JhZGluZyB0aGUgc2VydmVyIChcIiArXHJcbiAgICAgICAgICAgICAgICBwcmltYXJ5TmFtZSArXHJcbiAgICAgICAgICAgICAgICBcIikgdG8gXCIgK1xyXG4gICAgICAgICAgICAgICAgdXBncmFkZVJhbSArXHJcbiAgICAgICAgICAgICAgICBcIkdCIG9mIFJhbSwgd2lsbCBjb3N0IFwiICtcclxuICAgICAgICAgICAgICAgIG5zLmZvcm1hdE51bWJlcihwcmljZSksXHJcbiAgICAgICAgKTtcclxuICAgICAgICBpZiAoYW5zd2VyKSBucy51cGdyYWRlUHVyY2hhc2VkU2VydmVyKHByaW1hcnlOYW1lLCB1cGdyYWRlUmFtKTtcclxuICAgIH0gZWxzZSBpZiAoaXNCdXkpIHtcclxuICAgICAgICBidXlSYW0gPSBnZXRHQmZyb21BbnlVbml0KG5zLCBidXlSYW0sIGJ1eVVuaXQpO1xyXG4gICAgICAgIGlmIChidXlSYW0gPCAxKSByZXR1cm47XHJcblxyXG4gICAgICAgIGNvbnN0IHByaWNlID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVyQ29zdChidXlSYW0pO1xyXG5cclxuICAgICAgICBjb25zdCBhbnN3ZXIgPSBhd2FpdCBucy5wcm9tcHQoXHJcbiAgICAgICAgICAgIFwiYnV5aW5nIHRoZSBzZXJ2ZXIgKFwiICsgcHJpbWFyeU5hbWUgKyBcIikgd2l0aCBcIiArIGJ1eVJhbSArIFwiR0Igb2YgUmFtLCB3aWxsIGNvc3QgXCIgKyBucy5mb3JtYXROdW1iZXIocHJpY2UpLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgaWYgKGFuc3dlcikgbnMucHVyY2hhc2VTZXJ2ZXIocHJpbWFyeU5hbWUsIGJ1eVJhbSk7XHJcbiAgICB9IGVsc2UgaWYgKGlzUmVuYW1lKSB7XHJcbiAgICAgICAgaWYgKCFucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCkuaW5jbHVkZXMocHJpbWFyeU5hbWUpKSB7XHJcbiAgICAgICAgICAgIG5zLnRwcmludChcIllvdSBkbyBub3Qgb3duIGEgc2VydmVyIGNhbGxlZCBcIiArIHByaW1hcnlOYW1lKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbnMucmVuYW1lUHVyY2hhc2VkU2VydmVyKHByaW1hcnlOYW1lLCBuZXdOYW1lKTtcclxuICAgIH0gZWxzZSBpZiAoaXNEZWxldGUpIHtcclxuICAgICAgICBucy5kZWxldGVTZXJ2ZXIocHJpbWFyeU5hbWUpO1xyXG4gICAgfSBlbHNlIGlmIChpc0tpbGwpIHtcclxuICAgICAgICBucy50cHJpbnQoXCJLaWxsaW5nIHNlcnZlciBcIiArIHByaW1hcnlOYW1lKTtcclxuICAgICAgICBucy5raWxsYWxsKHByaW1hcnlOYW1lKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc3QgcGxheWVyTW9uZXkgPSBucy5nZXRTZXJ2ZXJNb25leUF2YWlsYWJsZShcImhvbWVcIik7XHJcbiAgICAgICAgbGV0IHJhbVNpemUgPSAxNjtcclxuICAgICAgICB3aGlsZSAobnMuZ2V0UHVyY2hhc2VkU2VydmVyQ29zdChyYW1TaXplKSA8IHBsYXllck1vbmV5KSB7XHJcbiAgICAgICAgICAgIHJhbVNpemUgKj0gMjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmFtU2l6ZSA9IHJhbVNpemUgLyAyO1xyXG4gICAgICAgIG5zLnRwcmludChcclxuICAgICAgICAgICAgXCJ5b3UgY2FuIGJ1eSBhIHNlcnZlciB3aXRoIFwiICtcclxuICAgICAgICAgICAgICAgIHJhbVNpemUgK1xyXG4gICAgICAgICAgICAgICAgXCJHQiBvZiByYW0uIFRoaXMgY29zdHMgXCIgK1xyXG4gICAgICAgICAgICAgICAgbnMuZm9ybWF0TnVtYmVyKG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtU2l6ZSkpLFxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IG5zLnByb21wdChcImJ1eSBTZXJ2ZXIgZm9yIFwiICsgbnMuZm9ybWF0TnVtYmVyKG5zLmdldFB1cmNoYXNlZFNlcnZlckNvc3QocmFtU2l6ZSkpICsgXCI/XCIpO1xyXG5cclxuICAgICAgICBpZiAoYW5zd2VyKSB7XHJcbiAgICAgICAgICAgIG5zLnB1cmNoYXNlU2VydmVyKFwiaGFja2VyXCIsIHJhbVNpemUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0R0Jmcm9tQW55VW5pdChuczogTlMsIHJhbTogbnVtYmVyLCB1bml0OiBzdHJpbmcpOiBudW1iZXIge1xyXG4gICAgaWYgKHVuaXQgPT0gXCJHXCIpIHtcclxuICAgICAgICByZXR1cm4gcmFtO1xyXG4gICAgfSBlbHNlIGlmICh1bml0ID09IFwiVFwiKSB7XHJcbiAgICAgICAgcmV0dXJuIHJhbSAqIDEwMjQ7XHJcbiAgICB9IGVsc2UgaWYgKHVuaXQgPT0gXCJQXCIpIHtcclxuICAgICAgICByZXR1cm4gcmFtICogMTAyNCAqIDEwMjQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIG5zLnRwcmludChcclxuICAgICAgICAgICAgXCJcXG51c2FnZTogc20uanMgW29wdGlvbnNdXFxuXFxuT3B0aW9uczpcXG5cXHQtdSA8TmFtZT4gPFJhbT48R3xUfFA+XFxuXFx0LWIgPE5hbWU+IDxSYW0+PEd8VHxQPlxcblxcdC1yIDxvbGQgbmFtZT4gPG5ldyBuYW1lPlwiLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFRTyxnQkFBUyxhQUFhLE1BQXdCO0FBQ2pELFNBQU8sQ0FBQyxHQUFHLEtBQUssT0FBTztBQUMzQjtBQUVBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxjQUFjO0FBRWxCLE1BQUksWUFBWTtBQUNoQixNQUFJLGFBQWE7QUFDakIsTUFBSSxjQUFjO0FBRWxCLE1BQUksUUFBUTtBQUNaLE1BQUksU0FBUztBQUNiLE1BQUksVUFBVTtBQUVkLE1BQUksV0FBVztBQUNmLE1BQUksVUFBVTtBQUVkLE1BQUksV0FBVztBQUVmLE1BQUksU0FBUztBQUViLE1BQUksR0FBRyxLQUFLLFNBQVMsR0FBRztBQUNwQixRQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssUUFBUSxHQUFHLEtBQUssVUFBVSxHQUFHO0FBQzNDLGtCQUFZO0FBQ1osb0JBQWMsR0FBRyxLQUFLLENBQUMsRUFBRSxTQUFTO0FBQ2xDLG1CQUFhLE9BQU8sT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLEVBQUUsTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUNuRCxvQkFBYyxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUU7QUFBQSxJQUM3QztBQUNBLFFBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxRQUFRLEdBQUcsS0FBSyxVQUFVLEdBQUc7QUFDM0MsY0FBUTtBQUNSLG9CQUFjLEdBQUcsS0FBSyxDQUFDLEVBQUUsU0FBUztBQUNsQyxlQUFTLE9BQU8sT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLEVBQUUsTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUMvQyxnQkFBVSxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUU7QUFBQSxJQUN6QztBQUNBLFFBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxRQUFRLEdBQUcsS0FBSyxVQUFVLEdBQUc7QUFDM0MsaUJBQVc7QUFDWCxvQkFBYyxHQUFHLEtBQUssQ0FBQyxFQUFFLFNBQVM7QUFDbEMsZ0JBQVUsR0FBRyxLQUFLLENBQUMsRUFBRSxTQUFTO0FBQUEsSUFDbEM7QUFDQSxRQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssUUFBUSxHQUFHLEtBQUssVUFBVSxHQUFHO0FBQzNDLGlCQUFXO0FBQ1gsb0JBQWMsR0FBRyxLQUFLLENBQUMsRUFBRSxTQUFTO0FBQUEsSUFDdEM7QUFDQSxRQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssUUFBUSxHQUFHLEtBQUssVUFBVSxHQUFHO0FBQzNDLGVBQVM7QUFDVCxvQkFBYyxHQUFHLEtBQUssQ0FBQyxFQUFFLFNBQVM7QUFBQSxJQUN0QztBQUFBLEVBQ0osT0FBTztBQUNILE9BQUc7QUFBQSxNQUNDO0FBQUEsSUFLSjtBQUNBO0FBQUEsRUFDSjtBQUVBLE1BQUksV0FBVztBQUVYLFVBQU0sV0FBVyxLQUFLLEtBQUssS0FBSyxLQUFLLFVBQVUsQ0FBQztBQUNoRCxpQkFBYSxLQUFLLElBQUksR0FBRyxRQUFRO0FBRWpDLGlCQUFhLGlCQUFpQixJQUFJLFlBQVksV0FBVztBQUN6RCxVQUFNLFVBQVUsR0FBRyxvQkFBb0I7QUFDdkMsUUFBSSxDQUFDLFFBQVEsU0FBUyxXQUFXLEdBQUc7QUFDaEMsU0FBRyxPQUFPLG9DQUFvQyxXQUFXO0FBQUEsSUFDN0Q7QUFFQSxVQUFNLFFBQVEsR0FBRyw4QkFBOEIsYUFBYSxVQUFVO0FBRXRFLFVBQU0sU0FBUyxNQUFNLEdBQUc7QUFBQSxNQUNwQiwyQkFDSSxjQUNBLFVBQ0EsYUFDQSwwQkFDQSxHQUFHLGFBQWEsS0FBSztBQUFBLElBQzdCO0FBQ0EsUUFBSTtBQUFRLFNBQUcsdUJBQXVCLGFBQWEsVUFBVTtBQUFBLEVBQ2pFLFdBQVcsT0FBTztBQUNkLGFBQVMsaUJBQWlCLElBQUksUUFBUSxPQUFPO0FBQzdDLFFBQUksU0FBUztBQUFHO0FBRWhCLFVBQU0sUUFBUSxHQUFHLHVCQUF1QixNQUFNO0FBRTlDLFVBQU0sU0FBUyxNQUFNLEdBQUc7QUFBQSxNQUNwQix3QkFBd0IsY0FBYyxZQUFZLFNBQVMsMEJBQTBCLEdBQUcsYUFBYSxLQUFLO0FBQUEsSUFDOUc7QUFDQSxRQUFJO0FBQVEsU0FBRyxlQUFlLGFBQWEsTUFBTTtBQUFBLEVBQ3JELFdBQVcsVUFBVTtBQUNqQixRQUFJLENBQUMsR0FBRyxvQkFBb0IsRUFBRSxTQUFTLFdBQVcsR0FBRztBQUNqRCxTQUFHLE9BQU8sb0NBQW9DLFdBQVc7QUFBQSxJQUM3RDtBQUNBLE9BQUcsc0JBQXNCLGFBQWEsT0FBTztBQUFBLEVBQ2pELFdBQVcsVUFBVTtBQUNqQixPQUFHLGFBQWEsV0FBVztBQUFBLEVBQy9CLFdBQVcsUUFBUTtBQUNmLE9BQUcsT0FBTyxvQkFBb0IsV0FBVztBQUN6QyxPQUFHLFFBQVEsV0FBVztBQUFBLEVBQzFCLE9BQU87QUFDSCxVQUFNLGNBQWMsR0FBRyx3QkFBd0IsTUFBTTtBQUNyRCxRQUFJLFVBQVU7QUFDZCxXQUFPLEdBQUcsdUJBQXVCLE9BQU8sSUFBSSxhQUFhO0FBQ3JELGlCQUFXO0FBQUEsSUFDZjtBQUNBLGNBQVUsVUFBVTtBQUNwQixPQUFHO0FBQUEsTUFDQywrQkFDSSxVQUNBLDJCQUNBLEdBQUcsYUFBYSxHQUFHLHVCQUF1QixPQUFPLENBQUM7QUFBQSxJQUMxRDtBQUVBLFVBQU0sU0FBUyxNQUFNLEdBQUcsT0FBTyxvQkFBb0IsR0FBRyxhQUFhLEdBQUcsdUJBQXVCLE9BQU8sQ0FBQyxJQUFJLEdBQUc7QUFFNUcsUUFBSSxRQUFRO0FBQ1IsU0FBRyxlQUFlLFVBQVUsT0FBTztBQUFBLElBQ3ZDO0FBQUEsRUFDSjtBQUNKO0FBRUEsU0FBUyxpQkFBaUIsSUFBUSxLQUFhLE1BQXNCO0FBQ2pFLE1BQUksUUFBUSxLQUFLO0FBQ2IsV0FBTztBQUFBLEVBQ1gsV0FBVyxRQUFRLEtBQUs7QUFDcEIsV0FBTyxNQUFNO0FBQUEsRUFDakIsV0FBVyxRQUFRLEtBQUs7QUFDcEIsV0FBTyxNQUFNLE9BQU87QUFBQSxFQUN4QixPQUFPO0FBQ0gsT0FBRztBQUFBLE1BQ0M7QUFBQSxJQUNKO0FBQ0EsV0FBTztBQUFBLEVBQ1g7QUFDSjsiLCJuYW1lcyI6W119\",\"filename\":\"sm.js\",\"server\":\"home\"}}],[\"parallel/ServerManager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Colors, nukeServer } from \\\"/lib.js\\\";\\nexport class ServerManager {\\n  /**\\n   * Buys or upgrades a server based on the desired RAM and server type.\\n   * If the server exists and can be upgraded successfully, it returns the upgraded server name.\\n   * If the server cannot be upgraded, it attempts to buy a new server with the desired RAM and name.\\n   *\\n   * @param ns - The Bitburner namespace object.\\n   * @param desiredRam - How much RAM needs the server at least.\\n   * @param serverType - The type of server to buy or upgrade (`weak`, `grow`, `hack`).\\n   * @param batchId - The batch ID of the server.\\n   * @returns The name of the upgraded server or an empty string if a new server cannot be bought/upgraded.\\n   */\\n  static buyOrUpgradeServer(ns, desiredRam, serverType) {\\n    const server = this.getBestServerToUpgrade(ns, desiredRam, serverType);\\n    if (server.name !== \\\"\\\") {\\n      const upgradeSuccessful = this.upgradeServer(ns, server.totalRam, server.name);\\n      if (upgradeSuccessful)\\n        return server.name;\\n    }\\n    const name = this.buyServer(ns, desiredRam, serverType);\\n    return name;\\n  }\\n  static buyServer(ns, desiredRam, serverName) {\\n    const purchasedServerLimit = ns.getPurchasedServerLimit();\\n    const purchasedServers = ns.getPurchasedServers();\\n    if (purchasedServers.length >= purchasedServerLimit) {\\n      ns.print(Colors.RED + \\\"[server Manager] attempted to buy a new server, but the limit has been reached\\\");\\n      return \\\"\\\";\\n    }\\n    const exponent = Math.ceil(Math.log2(desiredRam));\\n    desiredRam = Math.pow(2, exponent);\\n    const cost = ns.getPurchasedServerCost(desiredRam);\\n    if (cost > ns.getServerMoneyAvailable(\\\"home\\\")) {\\n      ns.tprint(\\n        Colors.RED + \\\"[server Manager] attempted to buy a new server: '\\\" + serverName + \\\"' with \\\" + desiredRam + \\\"GB, for \\\" + ns.formatNumber(cost) + \\\", but the player does not have enough money\\\"\\n      );\\n      return \\\"\\\";\\n    }\\n    const name = ns.purchaseServer(serverName, desiredRam);\\n    if (name === \\\"\\\") {\\n      ns.tprint(\\n        Colors.RED + \\\"[server Manager] Failed to buy a new server: '\\\" + serverName + \\\"' with \\\" + desiredRam + \\\"GB for \\\" + ns.formatNumber(cost)\\n      );\\n      return \\\"\\\";\\n    }\\n    ns.print(\\n      Colors.GREEN + \\\"[server Manager] Bought Server '\\\" + serverName + \\\"' with \\\" + desiredRam + \\\"GB for \\\" + ns.formatNumber(cost) + \\\"!\\\"\\n    );\\n    nukeServer(ns, name);\\n    return name;\\n  }\\n  static upgradeServer(ns, desiredRam, serverName) {\\n    const purchasedServers = ns.getPurchasedServers();\\n    if (!purchasedServers.includes(serverName)) {\\n      ns.print(Colors.YELLOW + \\\"[server Manager] attempted to upgrade Server, but the server does not exist\\\");\\n      return false;\\n    }\\n    const exponent = Math.ceil(Math.log2(desiredRam));\\n    desiredRam = Math.pow(2, exponent);\\n    const cost = ns.getPurchasedServerUpgradeCost(serverName, desiredRam);\\n    if (cost > ns.getServerMoneyAvailable(\\\"home\\\")) {\\n      ns.print(\\n        Colors.RED + \\\"[server Manager] attempted to upgrade Server: '\\\" + serverName + \\\"' with \\\" + desiredRam + \\\"GB for \\\" + ns.formatNumber(cost) + \\\", but the player does not have enough money\\\"\\n      );\\n      return false;\\n    }\\n    if (!ns.upgradePurchasedServer(serverName, desiredRam)) {\\n      ns.print(Colors.RED + \\\"[server Manager] attempted to upgrade Server, but the upgrade failed\\\");\\n      return false;\\n    }\\n    ns.print(\\n      Colors.GREEN + \\\"[server Manager] Upgraded Server '\\\" + serverName + \\\"' with \\\" + desiredRam + \\\"GB for \\\" + ns.formatNumber(cost) + \\\"!\\\"\\n    );\\n    return true;\\n  }\\n  /**\\n   * Upgrades an existing server to meet the desired RAM requirement, that is cheapest to upgrade.\\n   *\\n   * @param ns - The NetScriptJS object.\\n   * @param desiredRam - How much RAM needs the server at least.\\n   * @param name - The name of the server to upgrade.\\n   * @returns The name of the upgraded server, or an empty string if the upgrade failed.\\n   */\\n  static getBestServerToUpgrade(ns, desiredRam, name) {\\n    const purchasedServers = ns.getPurchasedServers().filter((server) => server.includes(name));\\n    if (purchasedServers.length === 0) {\\n      return {\\n        cost: 0,\\n        name: \\\"\\\",\\n        totalRam: 0\\n      };\\n    }\\n    let minUpgradeCost = Number.MAX_VALUE;\\n    let serverToUpgrade = \\\"\\\";\\n    let totalRequiredRam = 0;\\n    for (let i = 0; i < purchasedServers.length; i++) {\\n      const server = purchasedServers[i];\\n      const serverMaxRam = ns.getServerMaxRam(server);\\n      totalRequiredRam = desiredRam + serverMaxRam;\\n      const exponent = Math.ceil(Math.log2(totalRequiredRam));\\n      totalRequiredRam = Math.pow(2, exponent);\\n      const cost = ns.getPurchasedServerUpgradeCost(server, totalRequiredRam);\\n      if (cost < minUpgradeCost) {\\n        minUpgradeCost = cost;\\n        serverToUpgrade = server;\\n      }\\n    }\\n    return {\\n      cost: minUpgradeCost,\\n      name: serverToUpgrade,\\n      totalRam: totalRequiredRam\\n    };\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcnZlck1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3JzLCBudWtlU2VydmVyIH0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNlcnZlck1hbmFnZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKiBCdXlzIG9yIHVwZ3JhZGVzIGEgc2VydmVyIGJhc2VkIG9uIHRoZSBkZXNpcmVkIFJBTSBhbmQgc2VydmVyIHR5cGUuXHJcbiAgICAgKiBJZiB0aGUgc2VydmVyIGV4aXN0cyBhbmQgY2FuIGJlIHVwZ3JhZGVkIHN1Y2Nlc3NmdWxseSwgaXQgcmV0dXJucyB0aGUgdXBncmFkZWQgc2VydmVyIG5hbWUuXHJcbiAgICAgKiBJZiB0aGUgc2VydmVyIGNhbm5vdCBiZSB1cGdyYWRlZCwgaXQgYXR0ZW1wdHMgdG8gYnV5IGEgbmV3IHNlcnZlciB3aXRoIHRoZSBkZXNpcmVkIFJBTSBhbmQgbmFtZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbnMgLSBUaGUgQml0YnVybmVyIG5hbWVzcGFjZSBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0gZGVzaXJlZFJhbSAtIEhvdyBtdWNoIFJBTSBuZWVkcyB0aGUgc2VydmVyIGF0IGxlYXN0LlxyXG4gICAgICogQHBhcmFtIHNlcnZlclR5cGUgLSBUaGUgdHlwZSBvZiBzZXJ2ZXIgdG8gYnV5IG9yIHVwZ3JhZGUgKGB3ZWFrYCwgYGdyb3dgLCBgaGFja2ApLlxyXG4gICAgICogQHBhcmFtIGJhdGNoSWQgLSBUaGUgYmF0Y2ggSUQgb2YgdGhlIHNlcnZlci5cclxuICAgICAqIEByZXR1cm5zIFRoZSBuYW1lIG9mIHRoZSB1cGdyYWRlZCBzZXJ2ZXIgb3IgYW4gZW1wdHkgc3RyaW5nIGlmIGEgbmV3IHNlcnZlciBjYW5ub3QgYmUgYm91Z2h0L3VwZ3JhZGVkLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgYnV5T3JVcGdyYWRlU2VydmVyKG5zOiBOUywgZGVzaXJlZFJhbTogbnVtYmVyLCBzZXJ2ZXJUeXBlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHNlcnZlciA9IHRoaXMuZ2V0QmVzdFNlcnZlclRvVXBncmFkZShucywgZGVzaXJlZFJhbSwgc2VydmVyVHlwZSk7XHJcbiAgICAgICAgaWYgKHNlcnZlci5uYW1lICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVwZ3JhZGVTdWNjZXNzZnVsID0gdGhpcy51cGdyYWRlU2VydmVyKG5zLCBzZXJ2ZXIudG90YWxSYW0sIHNlcnZlci5uYW1lKTtcclxuICAgICAgICAgICAgaWYgKHVwZ3JhZGVTdWNjZXNzZnVsKSByZXR1cm4gc2VydmVyLm5hbWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5idXlTZXJ2ZXIobnMsIGRlc2lyZWRSYW0sIHNlcnZlclR5cGUpO1xyXG4gICAgICAgIHJldHVybiBuYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBidXlTZXJ2ZXIobnM6IE5TLCBkZXNpcmVkUmFtOiBudW1iZXIsIHNlcnZlck5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgcHVyY2hhc2VkU2VydmVyTGltaXQgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJMaW1pdCgpO1xyXG4gICAgICAgIGNvbnN0IHB1cmNoYXNlZFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCk7XHJcbiAgICAgICAgaWYgKHB1cmNoYXNlZFNlcnZlcnMubGVuZ3RoID49IHB1cmNoYXNlZFNlcnZlckxpbWl0KSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5SRUQgKyBcIltzZXJ2ZXIgTWFuYWdlcl0gYXR0ZW1wdGVkIHRvIGJ1eSBhIG5ldyBzZXJ2ZXIsIGJ1dCB0aGUgbGltaXQgaGFzIGJlZW4gcmVhY2hlZFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBleHBvbmVudCA9IE1hdGguY2VpbChNYXRoLmxvZzIoZGVzaXJlZFJhbSkpO1xyXG4gICAgICAgIGRlc2lyZWRSYW0gPSBNYXRoLnBvdygyLCBleHBvbmVudCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGNvc3QgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJDb3N0KGRlc2lyZWRSYW0pO1xyXG4gICAgICAgIGlmIChjb3N0ID4gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXCJob21lXCIpKSB7XHJcbiAgICAgICAgICAgIG5zLnRwcmludChcclxuICAgICAgICAgICAgICAgIENvbG9ycy5SRUQgK1xyXG4gICAgICAgICAgICAgICAgICAgIFwiW3NlcnZlciBNYW5hZ2VyXSBhdHRlbXB0ZWQgdG8gYnV5IGEgbmV3IHNlcnZlcjogJ1wiICtcclxuICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJOYW1lICtcclxuICAgICAgICAgICAgICAgICAgICBcIicgd2l0aCBcIiArXHJcbiAgICAgICAgICAgICAgICAgICAgZGVzaXJlZFJhbSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCJHQiwgZm9yIFwiICtcclxuICAgICAgICAgICAgICAgICAgICBucy5mb3JtYXROdW1iZXIoY29zdCkgK1xyXG4gICAgICAgICAgICAgICAgICAgIFwiLCBidXQgdGhlIHBsYXllciBkb2VzIG5vdCBoYXZlIGVub3VnaCBtb25leVwiLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAvLyB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgZW5vdWdoIG1vbmV5IHRvIGJ1eSBhIG5ldyBzZXJ2ZXJcIik7XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbmFtZSA9IG5zLnB1cmNoYXNlU2VydmVyKHNlcnZlck5hbWUsIGRlc2lyZWRSYW0pO1xyXG4gICAgICAgIGlmIChuYW1lID09PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIG5zLnRwcmludChcclxuICAgICAgICAgICAgICAgIENvbG9ycy5SRUQgK1xyXG4gICAgICAgICAgICAgICAgICAgIFwiW3NlcnZlciBNYW5hZ2VyXSBGYWlsZWQgdG8gYnV5IGEgbmV3IHNlcnZlcjogJ1wiICtcclxuICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJOYW1lICtcclxuICAgICAgICAgICAgICAgICAgICBcIicgd2l0aCBcIiArXHJcbiAgICAgICAgICAgICAgICAgICAgZGVzaXJlZFJhbSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCJHQiBmb3IgXCIgK1xyXG4gICAgICAgICAgICAgICAgICAgIG5zLmZvcm1hdE51bWJlcihjb3N0KSxcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgLy8gdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGJ1eSBhIG5ldyBzZXJ2ZXJcIik7XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBucy5wcmludChcclxuICAgICAgICAgICAgQ29sb3JzLkdSRUVOICtcclxuICAgICAgICAgICAgICAgIFwiW3NlcnZlciBNYW5hZ2VyXSBCb3VnaHQgU2VydmVyICdcIiArXHJcbiAgICAgICAgICAgICAgICBzZXJ2ZXJOYW1lICtcclxuICAgICAgICAgICAgICAgIFwiJyB3aXRoIFwiICtcclxuICAgICAgICAgICAgICAgIGRlc2lyZWRSYW0gK1xyXG4gICAgICAgICAgICAgICAgXCJHQiBmb3IgXCIgK1xyXG4gICAgICAgICAgICAgICAgbnMuZm9ybWF0TnVtYmVyKGNvc3QpICtcclxuICAgICAgICAgICAgICAgIFwiIVwiLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgbnVrZVNlcnZlcihucywgbmFtZSk7XHJcbiAgICAgICAgcmV0dXJuIG5hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHVwZ3JhZGVTZXJ2ZXIobnM6IE5TLCBkZXNpcmVkUmFtOiBudW1iZXIsIHNlcnZlck5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGNvbnN0IHB1cmNoYXNlZFNlcnZlcnMgPSBucy5nZXRQdXJjaGFzZWRTZXJ2ZXJzKCk7XHJcbiAgICAgICAgaWYgKCFwdXJjaGFzZWRTZXJ2ZXJzLmluY2x1ZGVzKHNlcnZlck5hbWUpKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KENvbG9ycy5ZRUxMT1cgKyBcIltzZXJ2ZXIgTWFuYWdlcl0gYXR0ZW1wdGVkIHRvIHVwZ3JhZGUgU2VydmVyLCBidXQgdGhlIHNlcnZlciBkb2VzIG5vdCBleGlzdFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZXhwb25lbnQgPSBNYXRoLmNlaWwoTWF0aC5sb2cyKGRlc2lyZWRSYW0pKTtcclxuICAgICAgICBkZXNpcmVkUmFtID0gTWF0aC5wb3coMiwgZXhwb25lbnQpO1xyXG5cclxuICAgICAgICBjb25zdCBjb3N0ID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVyVXBncmFkZUNvc3Qoc2VydmVyTmFtZSwgZGVzaXJlZFJhbSk7XHJcblxyXG4gICAgICAgIGlmIChjb3N0ID4gbnMuZ2V0U2VydmVyTW9uZXlBdmFpbGFibGUoXCJob21lXCIpKSB7XHJcbiAgICAgICAgICAgIG5zLnByaW50KFxyXG4gICAgICAgICAgICAgICAgQ29sb3JzLlJFRCArXHJcbiAgICAgICAgICAgICAgICAgICAgXCJbc2VydmVyIE1hbmFnZXJdIGF0dGVtcHRlZCB0byB1cGdyYWRlIFNlcnZlcjogJ1wiICtcclxuICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJOYW1lICtcclxuICAgICAgICAgICAgICAgICAgICBcIicgd2l0aCBcIiArXHJcbiAgICAgICAgICAgICAgICAgICAgZGVzaXJlZFJhbSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCJHQiBmb3IgXCIgK1xyXG4gICAgICAgICAgICAgICAgICAgIG5zLmZvcm1hdE51bWJlcihjb3N0KSArXHJcbiAgICAgICAgICAgICAgICAgICAgXCIsIGJ1dCB0aGUgcGxheWVyIGRvZXMgbm90IGhhdmUgZW5vdWdoIG1vbmV5XCIsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghbnMudXBncmFkZVB1cmNoYXNlZFNlcnZlcihzZXJ2ZXJOYW1lLCBkZXNpcmVkUmFtKSkge1xyXG4gICAgICAgICAgICBucy5wcmludChDb2xvcnMuUkVEICsgXCJbc2VydmVyIE1hbmFnZXJdIGF0dGVtcHRlZCB0byB1cGdyYWRlIFNlcnZlciwgYnV0IHRoZSB1cGdyYWRlIGZhaWxlZFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBucy5wcmludChcclxuICAgICAgICAgICAgQ29sb3JzLkdSRUVOICtcclxuICAgICAgICAgICAgICAgIFwiW3NlcnZlciBNYW5hZ2VyXSBVcGdyYWRlZCBTZXJ2ZXIgJ1wiICtcclxuICAgICAgICAgICAgICAgIHNlcnZlck5hbWUgK1xyXG4gICAgICAgICAgICAgICAgXCInIHdpdGggXCIgK1xyXG4gICAgICAgICAgICAgICAgZGVzaXJlZFJhbSArXHJcbiAgICAgICAgICAgICAgICBcIkdCIGZvciBcIiArXHJcbiAgICAgICAgICAgICAgICBucy5mb3JtYXROdW1iZXIoY29zdCkgK1xyXG4gICAgICAgICAgICAgICAgXCIhXCIsXHJcbiAgICAgICAgKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZ3JhZGVzIGFuIGV4aXN0aW5nIHNlcnZlciB0byBtZWV0IHRoZSBkZXNpcmVkIFJBTSByZXF1aXJlbWVudCwgdGhhdCBpcyBjaGVhcGVzdCB0byB1cGdyYWRlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBucyAtIFRoZSBOZXRTY3JpcHRKUyBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0gZGVzaXJlZFJhbSAtIEhvdyBtdWNoIFJBTSBuZWVkcyB0aGUgc2VydmVyIGF0IGxlYXN0LlxyXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgc2VydmVyIHRvIHVwZ3JhZGUuXHJcbiAgICAgKiBAcmV0dXJucyBUaGUgbmFtZSBvZiB0aGUgdXBncmFkZWQgc2VydmVyLCBvciBhbiBlbXB0eSBzdHJpbmcgaWYgdGhlIHVwZ3JhZGUgZmFpbGVkLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgZ2V0QmVzdFNlcnZlclRvVXBncmFkZShuczogTlMsIGRlc2lyZWRSYW06IG51bWJlciwgbmFtZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgcHVyY2hhc2VkU2VydmVycyA9IG5zLmdldFB1cmNoYXNlZFNlcnZlcnMoKS5maWx0ZXIoKHNlcnZlcikgPT4gc2VydmVyLmluY2x1ZGVzKG5hbWUpKTtcclxuXHJcbiAgICAgICAgaWYgKHB1cmNoYXNlZFNlcnZlcnMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBjb3N0OiAwLFxyXG4gICAgICAgICAgICAgICAgbmFtZTogXCJcIixcclxuICAgICAgICAgICAgICAgIHRvdGFsUmFtOiAwLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IG1pblVwZ3JhZGVDb3N0ID0gTnVtYmVyLk1BWF9WQUxVRTtcclxuICAgICAgICBsZXQgc2VydmVyVG9VcGdyYWRlID0gXCJcIjtcclxuXHJcbiAgICAgICAgbGV0IHRvdGFsUmVxdWlyZWRSYW0gPSAwO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHB1cmNoYXNlZFNlcnZlcnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3Qgc2VydmVyID0gcHVyY2hhc2VkU2VydmVyc1tpXTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHNlcnZlck1heFJhbSA9IG5zLmdldFNlcnZlck1heFJhbShzZXJ2ZXIpO1xyXG4gICAgICAgICAgICB0b3RhbFJlcXVpcmVkUmFtID0gZGVzaXJlZFJhbSArIHNlcnZlck1heFJhbTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGV4cG9uZW50ID0gTWF0aC5jZWlsKE1hdGgubG9nMih0b3RhbFJlcXVpcmVkUmFtKSk7XHJcbiAgICAgICAgICAgIHRvdGFsUmVxdWlyZWRSYW0gPSBNYXRoLnBvdygyLCBleHBvbmVudCk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBjb3N0ID0gbnMuZ2V0UHVyY2hhc2VkU2VydmVyVXBncmFkZUNvc3Qoc2VydmVyLCB0b3RhbFJlcXVpcmVkUmFtKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChjb3N0IDwgbWluVXBncmFkZUNvc3QpIHtcclxuICAgICAgICAgICAgICAgIG1pblVwZ3JhZGVDb3N0ID0gY29zdDtcclxuICAgICAgICAgICAgICAgIHNlcnZlclRvVXBncmFkZSA9IHNlcnZlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjb3N0OiBtaW5VcGdyYWRlQ29zdCxcclxuICAgICAgICAgICAgbmFtZTogc2VydmVyVG9VcGdyYWRlLFxyXG4gICAgICAgICAgICB0b3RhbFJhbTogdG90YWxSZXF1aXJlZFJhbSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxRQUFRLGtCQUFrQjtBQUc1QixhQUFNLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFZdkIsT0FBTyxtQkFBbUIsSUFBUSxZQUFvQixZQUE0QjtBQUM5RSxVQUFNLFNBQVMsS0FBSyx1QkFBdUIsSUFBSSxZQUFZLFVBQVU7QUFDckUsUUFBSSxPQUFPLFNBQVMsSUFBSTtBQUNwQixZQUFNLG9CQUFvQixLQUFLLGNBQWMsSUFBSSxPQUFPLFVBQVUsT0FBTyxJQUFJO0FBQzdFLFVBQUk7QUFBbUIsZUFBTyxPQUFPO0FBQUEsSUFDekM7QUFFQSxVQUFNLE9BQU8sS0FBSyxVQUFVLElBQUksWUFBWSxVQUFVO0FBQ3RELFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFQSxPQUFPLFVBQVUsSUFBUSxZQUFvQixZQUE0QjtBQUNyRSxVQUFNLHVCQUF1QixHQUFHLHdCQUF3QjtBQUN4RCxVQUFNLG1CQUFtQixHQUFHLG9CQUFvQjtBQUNoRCxRQUFJLGlCQUFpQixVQUFVLHNCQUFzQjtBQUNqRCxTQUFHLE1BQU0sT0FBTyxNQUFNLGdGQUFnRjtBQUN0RyxhQUFPO0FBQUEsSUFDWDtBQUVBLFVBQU0sV0FBVyxLQUFLLEtBQUssS0FBSyxLQUFLLFVBQVUsQ0FBQztBQUNoRCxpQkFBYSxLQUFLLElBQUksR0FBRyxRQUFRO0FBRWpDLFVBQU0sT0FBTyxHQUFHLHVCQUF1QixVQUFVO0FBQ2pELFFBQUksT0FBTyxHQUFHLHdCQUF3QixNQUFNLEdBQUc7QUFDM0MsU0FBRztBQUFBLFFBQ0MsT0FBTyxNQUNILHNEQUNBLGFBQ0EsWUFDQSxhQUNBLGFBQ0EsR0FBRyxhQUFhLElBQUksSUFDcEI7QUFBQSxNQUNSO0FBRUEsYUFBTztBQUFBLElBQ1g7QUFFQSxVQUFNLE9BQU8sR0FBRyxlQUFlLFlBQVksVUFBVTtBQUNyRCxRQUFJLFNBQVMsSUFBSTtBQUNiLFNBQUc7QUFBQSxRQUNDLE9BQU8sTUFDSCxtREFDQSxhQUNBLFlBQ0EsYUFDQSxZQUNBLEdBQUcsYUFBYSxJQUFJO0FBQUEsTUFDNUI7QUFFQSxhQUFPO0FBQUEsSUFDWDtBQUNBLE9BQUc7QUFBQSxNQUNDLE9BQU8sUUFDSCxxQ0FDQSxhQUNBLFlBQ0EsYUFDQSxZQUNBLEdBQUcsYUFBYSxJQUFJLElBQ3BCO0FBQUEsSUFDUjtBQUNBLGVBQVcsSUFBSSxJQUFJO0FBQ25CLFdBQU87QUFBQSxFQUNYO0FBQUEsRUFFQSxPQUFPLGNBQWMsSUFBUSxZQUFvQixZQUE2QjtBQUMxRSxVQUFNLG1CQUFtQixHQUFHLG9CQUFvQjtBQUNoRCxRQUFJLENBQUMsaUJBQWlCLFNBQVMsVUFBVSxHQUFHO0FBQ3hDLFNBQUcsTUFBTSxPQUFPLFNBQVMsNkVBQTZFO0FBQ3RHLGFBQU87QUFBQSxJQUNYO0FBRUEsVUFBTSxXQUFXLEtBQUssS0FBSyxLQUFLLEtBQUssVUFBVSxDQUFDO0FBQ2hELGlCQUFhLEtBQUssSUFBSSxHQUFHLFFBQVE7QUFFakMsVUFBTSxPQUFPLEdBQUcsOEJBQThCLFlBQVksVUFBVTtBQUVwRSxRQUFJLE9BQU8sR0FBRyx3QkFBd0IsTUFBTSxHQUFHO0FBQzNDLFNBQUc7QUFBQSxRQUNDLE9BQU8sTUFDSCxvREFDQSxhQUNBLFlBQ0EsYUFDQSxZQUNBLEdBQUcsYUFBYSxJQUFJLElBQ3BCO0FBQUEsTUFDUjtBQUNBLGFBQU87QUFBQSxJQUNYO0FBRUEsUUFBSSxDQUFDLEdBQUcsdUJBQXVCLFlBQVksVUFBVSxHQUFHO0FBQ3BELFNBQUcsTUFBTSxPQUFPLE1BQU0sc0VBQXNFO0FBQzVGLGFBQU87QUFBQSxJQUNYO0FBQ0EsT0FBRztBQUFBLE1BQ0MsT0FBTyxRQUNILHVDQUNBLGFBQ0EsWUFDQSxhQUNBLFlBQ0EsR0FBRyxhQUFhLElBQUksSUFDcEI7QUFBQSxJQUNSO0FBQ0EsV0FBTztBQUFBLEVBQ1g7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFVQSxPQUFPLHVCQUF1QixJQUFRLFlBQW9CLE1BQWM7QUFDcEUsVUFBTSxtQkFBbUIsR0FBRyxvQkFBb0IsRUFBRSxPQUFPLENBQUMsV0FBVyxPQUFPLFNBQVMsSUFBSSxDQUFDO0FBRTFGLFFBQUksaUJBQWlCLFdBQVcsR0FBRztBQUMvQixhQUFPO0FBQUEsUUFDSCxNQUFNO0FBQUEsUUFDTixNQUFNO0FBQUEsUUFDTixVQUFVO0FBQUEsTUFDZDtBQUFBLElBQ0o7QUFFQSxRQUFJLGlCQUFpQixPQUFPO0FBQzVCLFFBQUksa0JBQWtCO0FBRXRCLFFBQUksbUJBQW1CO0FBRXZCLGFBQVMsSUFBSSxHQUFHLElBQUksaUJBQWlCLFFBQVEsS0FBSztBQUM5QyxZQUFNLFNBQVMsaUJBQWlCLENBQUM7QUFFakMsWUFBTSxlQUFlLEdBQUcsZ0JBQWdCLE1BQU07QUFDOUMseUJBQW1CLGFBQWE7QUFFaEMsWUFBTSxXQUFXLEtBQUssS0FBSyxLQUFLLEtBQUssZ0JBQWdCLENBQUM7QUFDdEQseUJBQW1CLEtBQUssSUFBSSxHQUFHLFFBQVE7QUFFdkMsWUFBTSxPQUFPLEdBQUcsOEJBQThCLFFBQVEsZ0JBQWdCO0FBRXRFLFVBQUksT0FBTyxnQkFBZ0I7QUFDdkIseUJBQWlCO0FBQ2pCLDBCQUFrQjtBQUFBLE1BQ3RCO0FBQUEsSUFDSjtBQUNBLFdBQU87QUFBQSxNQUNILE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLFVBQVU7QUFBQSxJQUNkO0FBQUEsRUFDSjtBQUNKOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"parallel/ServerManager.js\",\"server\":\"home\"}}],[\"gorg.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  ns.print(\\\"\\\\n\\\");\\n  const start = Date.now();\\n  for (let index = 0; index < 400; index++) {\\n    const exists = ns.fileExists(\\\"Formulas.exe\\\", \\\"home\\\");\\n  }\\n  const end = Date.now();\\n  ns.print(\\\"Time: \\\" + (end - start));\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvcmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcclxuICAgIG5zLnRhaWwoKTtcclxuICAgIG5zLmRpc2FibGVMb2coXCJBTExcIik7XHJcbiAgICBucy5wcmludChcIlxcblwiKTtcclxuXHJcbiAgICBjb25zdCBzdGFydCA9IERhdGUubm93KCk7XHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgNDAwOyBpbmRleCsrKSB7XHJcbiAgICAgICAgY29uc3QgZXhpc3RzID0gbnMuZmlsZUV4aXN0cyhcIkZvcm11bGFzLmV4ZVwiLCBcImhvbWVcIik7XHJcbiAgICB9XHJcbiAgICBjb25zdCBlbmQgPSBEYXRlLm5vdygpO1xyXG5cclxuICAgIG5zLnByaW50KFwiVGltZTogXCIgKyAoZW5kIC0gc3RhcnQpKTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUVBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxLQUFLO0FBQ1IsS0FBRyxXQUFXLEtBQUs7QUFDbkIsS0FBRyxNQUFNLElBQUk7QUFFYixRQUFNLFFBQVEsS0FBSyxJQUFJO0FBQ3ZCLFdBQVMsUUFBUSxHQUFHLFFBQVEsS0FBSyxTQUFTO0FBQ3RDLFVBQU0sU0FBUyxHQUFHLFdBQVcsZ0JBQWdCLE1BQU07QUFBQSxFQUN2RDtBQUNBLFFBQU0sTUFBTSxLQUFLLElBQUk7QUFFckIsS0FBRyxNQUFNLFlBQVksTUFBTSxNQUFNO0FBQ3JDOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"gorg.js\",\"server\":\"home\"}}],[\"Time.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export class Time {\\n  static instance;\\n  startTimeMillis = 0;\\n  endTimeMillis = 0;\\n  sleepTimeMillis = 0;\\n  startTime() {\\n    this.sleepTimeMillis = 0;\\n    this.startTimeMillis = Date.now();\\n  }\\n  endTime() {\\n    this.endTimeMillis = Date.now();\\n  }\\n  accumulateSleepTime(time) {\\n    this.sleepTimeMillis += time;\\n  }\\n  getTime(ns) {\\n    const runningTime = this.endTimeMillis - this.startTimeMillis - this.sleepTimeMillis;\\n    ns.write(\\\"timelog.txt\\\", \\\"Time: \\\" + runningTime + \\\"ms\\\\n\\\", \\\"a\\\");\\n    return runningTime;\\n  }\\n  constructor() {\\n  }\\n  static getInstance() {\\n    if (!Time.instance) {\\n      Time.instance = new Time();\\n    }\\n    return Time.instance;\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpbWUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGltZSB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogVGltZTtcclxuXHJcbiAgICBwcml2YXRlIHN0YXJ0VGltZU1pbGxpcyA9IDA7XHJcbiAgICBwcml2YXRlIGVuZFRpbWVNaWxsaXMgPSAwO1xyXG4gICAgcHJpdmF0ZSBzbGVlcFRpbWVNaWxsaXMgPSAwO1xyXG5cclxuICAgIHB1YmxpYyBzdGFydFRpbWUoKSB7XHJcbiAgICAgICAgdGhpcy5zbGVlcFRpbWVNaWxsaXMgPSAwO1xyXG4gICAgICAgIHRoaXMuc3RhcnRUaW1lTWlsbGlzID0gRGF0ZS5ub3coKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZW5kVGltZSgpIHtcclxuICAgICAgICB0aGlzLmVuZFRpbWVNaWxsaXMgPSBEYXRlLm5vdygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhY2N1bXVsYXRlU2xlZXBUaW1lKHRpbWU6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuc2xlZXBUaW1lTWlsbGlzICs9IHRpbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFRpbWUobnM6IE5TKSB7XHJcbiAgICAgICAgY29uc3QgcnVubmluZ1RpbWUgPSB0aGlzLmVuZFRpbWVNaWxsaXMgLSB0aGlzLnN0YXJ0VGltZU1pbGxpcyAtIHRoaXMuc2xlZXBUaW1lTWlsbGlzO1xyXG4gICAgICAgIG5zLndyaXRlKFwidGltZWxvZy50eHRcIiwgXCJUaW1lOiBcIiArIHJ1bm5pbmdUaW1lICsgXCJtc1xcblwiLCBcImFcIik7XHJcbiAgICAgICAgcmV0dXJuIHJ1bm5pbmdUaW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgLy9cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCkge1xyXG4gICAgICAgIGlmICghVGltZS5pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICBUaW1lLmluc3RhbmNlID0gbmV3IFRpbWUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFRpbWUuaW5zdGFuY2U7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFFTyxhQUFNLEtBQUs7QUFBQSxFQUNkLE9BQWU7QUFBQSxFQUVQLGtCQUFrQjtBQUFBLEVBQ2xCLGdCQUFnQjtBQUFBLEVBQ2hCLGtCQUFrQjtBQUFBLEVBRW5CLFlBQVk7QUFDZixTQUFLLGtCQUFrQjtBQUN2QixTQUFLLGtCQUFrQixLQUFLLElBQUk7QUFBQSxFQUNwQztBQUFBLEVBRU8sVUFBVTtBQUNiLFNBQUssZ0JBQWdCLEtBQUssSUFBSTtBQUFBLEVBQ2xDO0FBQUEsRUFFTyxvQkFBb0IsTUFBYztBQUNyQyxTQUFLLG1CQUFtQjtBQUFBLEVBQzVCO0FBQUEsRUFFTyxRQUFRLElBQVE7QUFDbkIsVUFBTSxjQUFjLEtBQUssZ0JBQWdCLEtBQUssa0JBQWtCLEtBQUs7QUFDckUsT0FBRyxNQUFNLGVBQWUsV0FBVyxjQUFjLFFBQVEsR0FBRztBQUM1RCxXQUFPO0FBQUEsRUFDWDtBQUFBLEVBRVEsY0FBYztBQUFBLEVBRXRCO0FBQUEsRUFFQSxPQUFjLGNBQWM7QUFDeEIsUUFBSSxDQUFDLEtBQUssVUFBVTtBQUNoQixXQUFLLFdBQVcsSUFBSSxLQUFLO0FBQUEsSUFDN0I7QUFDQSxXQUFPLEtBQUs7QUFBQSxFQUNoQjtBQUNKOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"Time.js\",\"server\":\"home\"}}],[\"Config/Config.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export class Config {\\n  /**\\n   * The target the daemon should hack, leave empty to hack the best server.\\n   * Default: \\\"\\\"\\n   */\\n  static TARGET = \\\"\\\";\\n  /**\\n   * The maximum amount of money the daemon is allowed to use to buy servers.\\n   * Default: 0\\n   */\\n  static MAX_MONEY_TO_BUY = 0;\\n  /**\\n   * The name of the grow/weak/hack servers.\\n   * When the Daemon needs to buy a new server, the servername will start with the value of this property, appended with a trailing number.\\n   * Example: \\\"daemon-grow-0\\\", \\\"daemon-grow-1\\\", ...\\n   * Default: \\\"daemon-grow\\\", \\\"daemon-weak\\\", \\\"daemon-hack\\\"\\n   */\\n  static GROW_SERVER_NAME = \\\"daemon-grow\\\";\\n  static WEAK_SERVER_NAME = \\\"daemon-weak\\\";\\n  static HACK_SERVER_NAME = \\\"daemon-hack\\\";\\n  /**\\n   * The maximum amount of money the daemon is allowed to hack from a server, leave at 0 to let the daemon decide.\\n   * Default: 0\\n   */\\n  static HACK_THRESHOLD = 0;\\n  /**\\n   * The step value which is used to decrease the hack threshold to calculate the optimal HACK_THRESHOLD.\\n   * Default: 0.05\\n   */\\n  static THRESHOLD_STEP = 0.05;\\n  /**\\n   * The minimum hack threshold value.\\n   * This value represents the minimum threshold required for a successful hack.\\n   * Default: 0.15\\n   */\\n  static MIN_HACK_THRESHOLD = 0.15;\\n  /**\\n   * The maximum amount of RAM the daemon should leave free on the Home server.\\n   * Default: 50\\n   */\\n  static HOME_FREE_RAM = 100;\\n  /**\\n   * The delay time in milliseconds.\\n   * This constant represents the amount of time to add as a margin when calling weak/grow/hack in parallel mode.\\n   * This value devided by 2 should not be less than 200ms.\\n   * Default: 1000\\n   */\\n  static DELAY_MARGIN_MS = 50;\\n  /**\\n   * The amount of time in milliseconds to wait before executing the next loop cycle.\\n   * Default: 10000 (10 seconds)\\n   */\\n  static LOOP_SAFETY_MARGIN_MS = 1e4;\\n  /**\\n   * The number of batches to use in parallel mode.\\n   * Default: 2\\n   */\\n  static LOOP_BATCH_COUNT = 2;\\n  /**\\n   * The amount of RAM (in gigabytes) required by the weaken, grow and hack script.\\n   * Default: 1.75, 1.75, 1.7\\n   */\\n  static WEAKEN_SCRIPT_RAM = 1.75;\\n  static GROW_SCRIPT_RAM = 1.75;\\n  static HACK_SCRIPT_RAM = 1.7;\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUmVwcmVzZW50cyB0aGUgc2V0dGluZ3MgZm9yIHRoZSBhcHBsaWNhdGlvbi5cclxuICpcclxuICogVG8gbW9kaWZ5IHRoZSBzZXR0aW5ncywgdXBkYXRlIHRoZSBjbGFzcyBwcm9wZXJ0aWVzIGFjY29yZGluZ2x5LlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIENvbmZpZyB7XHJcbiAgICAvKipcclxuICAgICAqIFRoZSB0YXJnZXQgdGhlIGRhZW1vbiBzaG91bGQgaGFjaywgbGVhdmUgZW1wdHkgdG8gaGFjayB0aGUgYmVzdCBzZXJ2ZXIuXHJcbiAgICAgKiBEZWZhdWx0OiBcIlwiXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgVEFSR0VUOiBzdHJpbmcgPSBcIlwiO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1heGltdW0gYW1vdW50IG9mIG1vbmV5IHRoZSBkYWVtb24gaXMgYWxsb3dlZCB0byB1c2UgdG8gYnV5IHNlcnZlcnMuXHJcbiAgICAgKiBEZWZhdWx0OiAwXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgTUFYX01PTkVZX1RPX0JVWTogbnVtYmVyID0gMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBuYW1lIG9mIHRoZSBncm93L3dlYWsvaGFjayBzZXJ2ZXJzLlxyXG4gICAgICogV2hlbiB0aGUgRGFlbW9uIG5lZWRzIHRvIGJ1eSBhIG5ldyBzZXJ2ZXIsIHRoZSBzZXJ2ZXJuYW1lIHdpbGwgc3RhcnQgd2l0aCB0aGUgdmFsdWUgb2YgdGhpcyBwcm9wZXJ0eSwgYXBwZW5kZWQgd2l0aCBhIHRyYWlsaW5nIG51bWJlci5cclxuICAgICAqIEV4YW1wbGU6IFwiZGFlbW9uLWdyb3ctMFwiLCBcImRhZW1vbi1ncm93LTFcIiwgLi4uXHJcbiAgICAgKiBEZWZhdWx0OiBcImRhZW1vbi1ncm93XCIsIFwiZGFlbW9uLXdlYWtcIiwgXCJkYWVtb24taGFja1wiXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgR1JPV19TRVJWRVJfTkFNRTogc3RyaW5nID0gXCJkYWVtb24tZ3Jvd1wiO1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBXRUFLX1NFUlZFUl9OQU1FOiBzdHJpbmcgPSBcImRhZW1vbi13ZWFrXCI7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEhBQ0tfU0VSVkVSX05BTUU6IHN0cmluZyA9IFwiZGFlbW9uLWhhY2tcIjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBtb25leSB0aGUgZGFlbW9uIGlzIGFsbG93ZWQgdG8gaGFjayBmcm9tIGEgc2VydmVyLCBsZWF2ZSBhdCAwIHRvIGxldCB0aGUgZGFlbW9uIGRlY2lkZS5cclxuICAgICAqIERlZmF1bHQ6IDBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBIQUNLX1RIUkVTSE9MRDogbnVtYmVyID0gMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBzdGVwIHZhbHVlIHdoaWNoIGlzIHVzZWQgdG8gZGVjcmVhc2UgdGhlIGhhY2sgdGhyZXNob2xkIHRvIGNhbGN1bGF0ZSB0aGUgb3B0aW1hbCBIQUNLX1RIUkVTSE9MRC5cclxuICAgICAqIERlZmF1bHQ6IDAuMDVcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBUSFJFU0hPTERfU1RFUDogbnVtYmVyID0gMC4wNTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBtaW5pbXVtIGhhY2sgdGhyZXNob2xkIHZhbHVlLlxyXG4gICAgICogVGhpcyB2YWx1ZSByZXByZXNlbnRzIHRoZSBtaW5pbXVtIHRocmVzaG9sZCByZXF1aXJlZCBmb3IgYSBzdWNjZXNzZnVsIGhhY2suXHJcbiAgICAgKiBEZWZhdWx0OiAwLjE1XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgTUlOX0hBQ0tfVEhSRVNIT0xEOiBudW1iZXIgPSAwLjE1O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1heGltdW0gYW1vdW50IG9mIFJBTSB0aGUgZGFlbW9uIHNob3VsZCBsZWF2ZSBmcmVlIG9uIHRoZSBIb21lIHNlcnZlci5cclxuICAgICAqIERlZmF1bHQ6IDUwXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSE9NRV9GUkVFX1JBTTogbnVtYmVyID0gMTAwO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRlbGF5IHRpbWUgaW4gbWlsbGlzZWNvbmRzLlxyXG4gICAgICogVGhpcyBjb25zdGFudCByZXByZXNlbnRzIHRoZSBhbW91bnQgb2YgdGltZSB0byBhZGQgYXMgYSBtYXJnaW4gd2hlbiBjYWxsaW5nIHdlYWsvZ3Jvdy9oYWNrIGluIHBhcmFsbGVsIG1vZGUuXHJcbiAgICAgKiBUaGlzIHZhbHVlIGRldmlkZWQgYnkgMiBzaG91bGQgbm90IGJlIGxlc3MgdGhhbiAyMDBtcy5cclxuICAgICAqIERlZmF1bHQ6IDEwMDBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBERUxBWV9NQVJHSU5fTVM6IG51bWJlciA9IDUwO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGFtb3VudCBvZiB0aW1lIGluIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJlZm9yZSBleGVjdXRpbmcgdGhlIG5leHQgbG9vcCBjeWNsZS5cclxuICAgICAqIERlZmF1bHQ6IDEwMDAwICgxMCBzZWNvbmRzKVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IExPT1BfU0FGRVRZX01BUkdJTl9NUzogbnVtYmVyID0gMTAwMDA7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbnVtYmVyIG9mIGJhdGNoZXMgdG8gdXNlIGluIHBhcmFsbGVsIG1vZGUuXHJcbiAgICAgKiBEZWZhdWx0OiAyXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgTE9PUF9CQVRDSF9DT1VOVDogbnVtYmVyID0gMjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBhbW91bnQgb2YgUkFNIChpbiBnaWdhYnl0ZXMpIHJlcXVpcmVkIGJ5IHRoZSB3ZWFrZW4sIGdyb3cgYW5kIGhhY2sgc2NyaXB0LlxyXG4gICAgICogRGVmYXVsdDogMS43NSwgMS43NSwgMS43XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgV0VBS0VOX1NDUklQVF9SQU06IG51bWJlciA9IDEuNzU7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEdST1dfU0NSSVBUX1JBTTogbnVtYmVyID0gMS43NTtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSEFDS19TQ1JJUFRfUkFNOiBudW1iZXIgPSAxLjc7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFLTyxhQUFNLE9BQU87QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS2hCLE9BQXVCLFNBQWlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU14QyxPQUF1QixtQkFBMkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQVFsRCxPQUF1QixtQkFBMkI7QUFBQSxFQUNsRCxPQUF1QixtQkFBMkI7QUFBQSxFQUNsRCxPQUF1QixtQkFBMkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTWxELE9BQXVCLGlCQUF5QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNaEQsT0FBdUIsaUJBQXlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBT2hELE9BQXVCLHFCQUE2QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNcEQsT0FBdUIsZ0JBQXdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFRL0MsT0FBdUIsa0JBQTBCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1qRCxPQUF1Qix3QkFBZ0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTXZELE9BQXVCLG1CQUEyQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNbEQsT0FBdUIsb0JBQTRCO0FBQUEsRUFDbkQsT0FBdUIsa0JBQTBCO0FBQUEsRUFDakQsT0FBdUIsa0JBQTBCO0FBQ3JEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"Config/Config.js\",\"server\":\"home\"}}],[\"parallel/WGHAlgorithms.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Config } from \\\"/Config/Config.js\\\";\\nimport { getBestHostByRamOptimized } from \\\"/bestServer.js\\\";\\nimport {\\n  Colors,\\n  getGrowThreads,\\n  getGrowThreadsFormulas,\\n  getHackThreadsFormulas,\\n  getWeakenThreads,\\n  getWeakenThreadsAfterGrow,\\n  getWeakenThreadsAfterHack\\n} from \\\"/lib.js\\\";\\nimport { ServerManager } from \\\"/parallel/ServerManager.js\\\";\\nimport { PlayerManager } from \\\"/parallel/PlayerManager.js\\\";\\nexport class WGHAlgorithms {\\n  static currentGrowThreads = 0;\\n  static currentHackThreads = 0;\\n  /**\\n   * Weakens a server by executing the weaken.js script with the specified number of threads.\\n   * The number of threads dispatched depends on the order, batch mode, and available resources.\\n   *\\n   * @param ns - The NetScriptJS object.\\n   * @param target - The name of the target server to weaken.\\n   * @param order - wether it is weaken I or weaken II.\\n   * @param batchId - The ID of the parallel batch.\\n   * @param batchMode - Set to true, of more than one batch should run in parallel mode.\\n   * @param delay - Time in ms, by how much the weaken script should be delayed to enable precise parallel batch mode timing (default: 0).\\n   * @returns A number representing the PID of the script that was executed, or 0 if no script was executed.\\n   * @throws An error if the weaken order is not 1 or 2.\\n   */\\n  static weakenServer(ns, target, order, batchMode, delay = 0, filterNotAllowedHosts = true) {\\n    let totalWeakenThreadsNeeded = 0;\\n    if (order == 1 && !batchMode) {\\n      totalWeakenThreadsNeeded = getWeakenThreads(ns, target);\\n    } else if (order == 2 && !batchMode) {\\n      const growThreads = getGrowThreads(ns, target);\\n      totalWeakenThreadsNeeded = getWeakenThreadsAfterGrow(ns, growThreads);\\n    } else if (order == 1 && batchMode) {\\n      totalWeakenThreadsNeeded = getWeakenThreadsAfterHack(ns, this.currentHackThreads);\\n    } else if (order == 2 && batchMode) {\\n      totalWeakenThreadsNeeded = getWeakenThreadsAfterGrow(ns, this.currentGrowThreads);\\n    } else {\\n      throw new Error(\\\"weaken order can only be either 1 or 2!\\\");\\n    }\\n    if (totalWeakenThreadsNeeded < 1) {\\n      ns.print(\\\"Weakenthreads are 0, skipping weak \\\" + order);\\n      return 0;\\n    }\\n    const pm = PlayerManager.getInstance(ns);\\n    pm.addHackingExp(ns, target, totalWeakenThreadsNeeded);\\n    let allHosts = getBestHostByRamOptimized(ns);\\n    if (filterNotAllowedHosts) {\\n      allHosts = allHosts.filter(\\n        (host) => !host.name.includes(Config.GROW_SERVER_NAME) && !host.name.includes(Config.HACK_SERVER_NAME)\\n      );\\n    }\\n    const weakenScriptRam = Config.WEAKEN_SCRIPT_RAM;\\n    let pid = 0;\\n    let threadsDispatched = 0;\\n    let threadsRemaining = totalWeakenThreadsNeeded;\\n    for (let i = 0; i < allHosts.length; i++) {\\n      if (threadsDispatched >= totalWeakenThreadsNeeded)\\n        break;\\n      const host = allHosts[i];\\n      const freeRam = host.availableRam;\\n      if (freeRam < weakenScriptRam)\\n        continue;\\n      const threadSpace = Math.floor(freeRam / weakenScriptRam);\\n      const threadsToDispatch = Math.min(threadsRemaining, threadSpace);\\n      pid = ns.exec(\\\"weaken.js\\\", host.name, threadsToDispatch, target, delay);\\n      threadsRemaining -= threadsToDispatch;\\n      threadsDispatched += threadsToDispatch;\\n    }\\n    if (threadsRemaining <= 0) {\\n      ns.print(\\\"Done deploying \\\" + totalWeakenThreadsNeeded + \\\" weaken\\\" + order + \\\" threads!\\\");\\n      return pid;\\n    }\\n    ns.print(\\n      Colors.YELLOW + \\\"There are \\\" + threadsRemaining + \\\" threads remaining after dispatching all threads, attempting to dispatch remaining threads on purchased server\\\"\\n    );\\n    const neededWeakenRam = threadsRemaining * weakenScriptRam;\\n    const server = ServerManager.buyOrUpgradeServer(ns, neededWeakenRam, Config.WEAK_SERVER_NAME);\\n    if (server === \\\"\\\")\\n      return 0;\\n    pid = ns.exec(\\\"weaken.js\\\", server, threadsRemaining, target, delay);\\n    ns.print(\\\"Done deploying \\\" + totalWeakenThreadsNeeded + \\\" weaken\\\" + order + \\\" threads!\\\");\\n    return pid;\\n  }\\n  /**\\n   * Grows the specified server by executing the \\\"grow.js\\\" script with the specified number of threads.\\n   * If batchMode is enabled, it calculates the number of threads needed using the getGrowThreadsFormulas function.\\n   * Otherwise, it uses the getGrowThreads function to determine the number of threads needed.\\n   * If there are no threads needed, the growth process is skipped.\\n   * If there is an available host with enough RAM to execute the \\\"grow.js\\\" script, it is executed immediately.\\n   * Otherwise, it attempts to upgrade or buy a server with enough RAM to execute the script.\\n   *\\n   * @param ns - The NetScript instance.\\n   * @param target - The name of the server to grow.\\n   * @param batchId - The ID of the batch.\\n   * @param batchMode - Set to true, of more than one batch should run in parallel mode.\\n   * @param delay - Time in ms, by how much the weaken script should be delayed to enable precise parallel batch mode timing (default: 0).\\n   * @returns A number representing the PID of the script that was executed, or 0 if no script was executed.\\n   */\\n  static growServer(ns, target, batchMode, delay, filterNotAllowedHosts = true) {\\n    let totalGrowThreadsNeeded = 0;\\n    if (!batchMode) {\\n      totalGrowThreadsNeeded = getGrowThreads(ns, target);\\n    } else {\\n      totalGrowThreadsNeeded = getGrowThreadsFormulas(ns, target, this.currentHackThreads);\\n      this.currentGrowThreads = totalGrowThreadsNeeded;\\n    }\\n    if (totalGrowThreadsNeeded < 1) {\\n      ns.print(\\\"No grow threads needed, skipping growth process\\\");\\n      return 0;\\n    }\\n    const pm = PlayerManager.getInstance(ns);\\n    pm.addHackingExp(ns, target, totalGrowThreadsNeeded);\\n    let allHosts = getBestHostByRamOptimized(ns);\\n    if (filterNotAllowedHosts) {\\n      allHosts = allHosts.filter(\\n        (host) => !host.name.includes(Config.WEAK_SERVER_NAME) && !host.name.includes(Config.HACK_SERVER_NAME)\\n      );\\n    }\\n    const growingScriptRam = Config.GROW_SCRIPT_RAM;\\n    for (let i = 0; i < allHosts.length; i++) {\\n      const host = allHosts[i];\\n      const maxThreadsOnHost = Math.floor(host.availableRam / growingScriptRam);\\n      if (maxThreadsOnHost >= totalGrowThreadsNeeded) {\\n        const pid2 = ns.exec(\\\"grow.js\\\", host.name, totalGrowThreadsNeeded, target, delay);\\n        ns.print(\\\"Done deploying \\\" + totalGrowThreadsNeeded + \\\" grow threads!\\\");\\n        return pid2;\\n      }\\n    }\\n    ns.print(Colors.YELLOW + \\\"No available host to grow \\\" + target + \\\". Attempting to upgrade/buy server...\\\");\\n    const neededGrowRam = totalGrowThreadsNeeded * growingScriptRam;\\n    const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, Config.GROW_SERVER_NAME);\\n    if (server === \\\"\\\")\\n      return 0;\\n    const pid = ns.exec(\\\"grow.js\\\", server, totalGrowThreadsNeeded, target, delay);\\n    ns.print(\\\"Done deploying \\\" + totalGrowThreadsNeeded + \\\" grow threads!\\\");\\n    return pid;\\n  }\\n  /**\\n   * Hacks a given server by executing the \\\"hack.js\\\" script with the specified number of threads, on certain hosts.\\n   *\\n   * @param ns - The NetScript object.\\n   * @param target - The name of the server to hack.\\n   * @param threshold - The hacking threshold for the server.\\n   * @param batchId - The ID of the current hacking batch.\\n   * @param batchMode - Set to true, of more than one batch should run in parallel mode.\\n   * @param delay - Time in ms, by how much the weaken script should be delayed to enable precise parallel batch mode timing (default: 0).\\n   * @returns A number representing the PID of the script that was executed, or 0 if no script was executed.\\n   */\\n  static hackServer(ns, target, threshold, batchMode, delay) {\\n    let totalHackThreadsNeeded = 0;\\n    if (!batchMode) {\\n      totalHackThreadsNeeded = Math.ceil(threshold / ns.hackAnalyze(target));\\n    } else {\\n      totalHackThreadsNeeded = getHackThreadsFormulas(ns, target, threshold);\\n      this.currentHackThreads = totalHackThreadsNeeded;\\n    }\\n    const pm = PlayerManager.getInstance(ns);\\n    pm.addHackingExp(ns, target, totalHackThreadsNeeded);\\n    const allHosts = getBestHostByRamOptimized(ns).filter(\\n      (host) => !host.name.includes(Config.WEAK_SERVER_NAME) && !host.name.includes(Config.GROW_SERVER_NAME)\\n    );\\n    const hackingScriptRam = Config.HACK_SCRIPT_RAM;\\n    for (let i = 0; i < allHosts.length; i++) {\\n      const host = allHosts[i];\\n      const maxThreadsOnHost = Math.floor(host.availableRam / hackingScriptRam);\\n      if (maxThreadsOnHost >= totalHackThreadsNeeded) {\\n        const pid2 = ns.exec(\\\"hack.js\\\", host.name, totalHackThreadsNeeded, target, delay);\\n        ns.print(\\\"Done deploying \\\" + totalHackThreadsNeeded + \\\" hack threads!\\\");\\n        return pid2;\\n      }\\n    }\\n    ns.print(Colors.YELLOW + \\\"No available host to hack \\\" + target + \\\". Buying server...\\\");\\n    const neededGrowRam = totalHackThreadsNeeded * hackingScriptRam;\\n    const server = ServerManager.buyOrUpgradeServer(ns, neededGrowRam, Config.HACK_SERVER_NAME);\\n    if (server === \\\"\\\")\\n      return 0;\\n    const pid = ns.exec(\\\"hack.js\\\", server, totalHackThreadsNeeded, target, delay);\\n    ns.print(\\\"Done deploying \\\" + totalHackThreadsNeeded + \\\" hack threads!\\\");\\n    return pid;\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldHSEFsZ29yaXRobXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiQC9Db25maWcvQ29uZmlnXCI7XHJcbmltcG9ydCB7IFNlcnZlciwgZ2V0QmVzdEhvc3RCeVJhbU9wdGltaXplZCB9IGZyb20gXCJAL2Jlc3RTZXJ2ZXJcIjtcclxuaW1wb3J0IHtcclxuICAgIENvbG9ycyxcclxuICAgIGdldEdyb3dUaHJlYWRzLFxyXG4gICAgZ2V0R3Jvd1RocmVhZHNGb3JtdWxhcyxcclxuICAgIGdldEhhY2tUaHJlYWRzRm9ybXVsYXMsXHJcbiAgICBnZXRXZWFrZW5UaHJlYWRzLFxyXG4gICAgZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyxcclxuICAgIGdldFdlYWtlblRocmVhZHNBZnRlckhhY2ssXHJcbn0gZnJvbSBcIkAvbGliXCI7XHJcbmltcG9ydCB7IFNlcnZlck1hbmFnZXIgfSBmcm9tIFwiLi9TZXJ2ZXJNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IFBsYXllck1hbmFnZXIgfSBmcm9tIFwiLi9QbGF5ZXJNYW5hZ2VyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgV0dIQWxnb3JpdGhtcyB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBjdXJyZW50R3Jvd1RocmVhZHMgPSAwO1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgY3VycmVudEhhY2tUaHJlYWRzID0gMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFdlYWtlbnMgYSBzZXJ2ZXIgYnkgZXhlY3V0aW5nIHRoZSB3ZWFrZW4uanMgc2NyaXB0IHdpdGggdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgdGhyZWFkcy5cclxuICAgICAqIFRoZSBudW1iZXIgb2YgdGhyZWFkcyBkaXNwYXRjaGVkIGRlcGVuZHMgb24gdGhlIG9yZGVyLCBiYXRjaCBtb2RlLCBhbmQgYXZhaWxhYmxlIHJlc291cmNlcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbnMgLSBUaGUgTmV0U2NyaXB0SlMgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHRhcmdldCAtIFRoZSBuYW1lIG9mIHRoZSB0YXJnZXQgc2VydmVyIHRvIHdlYWtlbi5cclxuICAgICAqIEBwYXJhbSBvcmRlciAtIHdldGhlciBpdCBpcyB3ZWFrZW4gSSBvciB3ZWFrZW4gSUkuXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hJZCAtIFRoZSBJRCBvZiB0aGUgcGFyYWxsZWwgYmF0Y2guXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hNb2RlIC0gU2V0IHRvIHRydWUsIG9mIG1vcmUgdGhhbiBvbmUgYmF0Y2ggc2hvdWxkIHJ1biBpbiBwYXJhbGxlbCBtb2RlLlxyXG4gICAgICogQHBhcmFtIGRlbGF5IC0gVGltZSBpbiBtcywgYnkgaG93IG11Y2ggdGhlIHdlYWtlbiBzY3JpcHQgc2hvdWxkIGJlIGRlbGF5ZWQgdG8gZW5hYmxlIHByZWNpc2UgcGFyYWxsZWwgYmF0Y2ggbW9kZSB0aW1pbmcgKGRlZmF1bHQ6IDApLlxyXG4gICAgICogQHJldHVybnMgQSBudW1iZXIgcmVwcmVzZW50aW5nIHRoZSBQSUQgb2YgdGhlIHNjcmlwdCB0aGF0IHdhcyBleGVjdXRlZCwgb3IgMCBpZiBubyBzY3JpcHQgd2FzIGV4ZWN1dGVkLlxyXG4gICAgICogQHRocm93cyBBbiBlcnJvciBpZiB0aGUgd2Vha2VuIG9yZGVyIGlzIG5vdCAxIG9yIDIuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB3ZWFrZW5TZXJ2ZXIoXHJcbiAgICAgICAgbnM6IE5TLFxyXG4gICAgICAgIHRhcmdldDogc3RyaW5nLFxyXG4gICAgICAgIG9yZGVyOiBudW1iZXIsXHJcbiAgICAgICAgYmF0Y2hNb2RlOiBib29sZWFuLFxyXG4gICAgICAgIGRlbGF5ID0gMCxcclxuICAgICAgICBmaWx0ZXJOb3RBbGxvd2VkSG9zdHMgPSB0cnVlLFxyXG4gICAgKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gMDtcclxuICAgICAgICAvLyBjYWxjdWxhdGUgd2Vha2VuaW5nIHRocmVhZHMgYmFzZWQgb24gdGhlIG9yZGVyXHJcblxyXG4gICAgICAgIGlmIChvcmRlciA9PSAxICYmICFiYXRjaE1vZGUpIHtcclxuICAgICAgICAgICAgLy8gZmlyc3Qgd2VhayBoYXMgdG8gd2Vha2VuIHNlcnZlciB0byBtaW4gZnJvbSB1bmtub3duIHNlYyBsdmxcclxuICAgICAgICAgICAgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gZ2V0V2Vha2VuVGhyZWFkcyhucywgdGFyZ2V0KTtcclxuICAgICAgICB9IGVsc2UgaWYgKG9yZGVyID09IDIgJiYgIWJhdGNoTW9kZSkge1xyXG4gICAgICAgICAgICAvLyBzZWNvbmQgd2VhayBvbmx5IGhhcyB0byByZW1vdmUgdGhlIHNlYyBpbmNyZWFzZSBmcm9tIHRoZSBncm93IGJlZm9yZSAobW9yZSByYW0gZWZmaWNpZW50KVxyXG4gICAgICAgICAgICBjb25zdCBncm93VGhyZWFkcyA9IGdldEdyb3dUaHJlYWRzKG5zLCB0YXJnZXQpO1xyXG5cclxuICAgICAgICAgICAgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkID0gZ2V0V2Vha2VuVGhyZWFkc0FmdGVyR3JvdyhucywgZ3Jvd1RocmVhZHMpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAob3JkZXIgPT0gMSAmJiBiYXRjaE1vZGUpIHtcclxuICAgICAgICAgICAgLy8gd2VhayBhZnRlciBwcmV2aW91cyBoYWNrXHJcbiAgICAgICAgICAgIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCA9IGdldFdlYWtlblRocmVhZHNBZnRlckhhY2sobnMsIHRoaXMuY3VycmVudEhhY2tUaHJlYWRzKTtcclxuICAgICAgICB9IGVsc2UgaWYgKG9yZGVyID09IDIgJiYgYmF0Y2hNb2RlKSB7XHJcbiAgICAgICAgICAgIC8vIHdlYWsgYWZ0ZXIgcHJldmlvdXMgZ3Jvd1xyXG4gICAgICAgICAgICB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQgPSBnZXRXZWFrZW5UaHJlYWRzQWZ0ZXJHcm93KG5zLCB0aGlzLmN1cnJlbnRHcm93VGhyZWFkcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwid2Vha2VuIG9yZGVyIGNhbiBvbmx5IGJlIGVpdGhlciAxIG9yIDIhXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCA8IDEpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoXCJXZWFrZW50aHJlYWRzIGFyZSAwLCBza2lwcGluZyB3ZWFrIFwiICsgb3JkZXIpO1xyXG4gICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIGhhY2sgeHBcclxuICAgICAgICBjb25zdCBwbSA9IFBsYXllck1hbmFnZXIuZ2V0SW5zdGFuY2UobnMpO1xyXG4gICAgICAgIHBtLmFkZEhhY2tpbmdFeHAobnMsIHRhcmdldCwgdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkKTtcclxuXHJcbiAgICAgICAgLy8gZXhlYyB3ZWFrZW4uanMgd2l0aCBudW0gb2YgdGhyZWFkc1xyXG4gICAgICAgIGxldCBhbGxIb3N0czogU2VydmVyW10gPSBnZXRCZXN0SG9zdEJ5UmFtT3B0aW1pemVkKG5zKTtcclxuICAgICAgICBpZiAoZmlsdGVyTm90QWxsb3dlZEhvc3RzKSB7XHJcbiAgICAgICAgICAgIGFsbEhvc3RzID0gYWxsSG9zdHMuZmlsdGVyKFxyXG4gICAgICAgICAgICAgICAgKGhvc3QpID0+ICFob3N0Lm5hbWUuaW5jbHVkZXMoQ29uZmlnLkdST1dfU0VSVkVSX05BTUUpICYmICFob3N0Lm5hbWUuaW5jbHVkZXMoQ29uZmlnLkhBQ0tfU0VSVkVSX05BTUUpLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCB3ZWFrZW5TY3JpcHRSYW0gPSBDb25maWcuV0VBS0VOX1NDUklQVF9SQU07XHJcbiAgICAgICAgbGV0IHBpZCA9IDA7XHJcblxyXG4gICAgICAgIGxldCB0aHJlYWRzRGlzcGF0Y2hlZCA9IDA7XHJcbiAgICAgICAgbGV0IHRocmVhZHNSZW1haW5pbmcgPSB0b3RhbFdlYWtlblRocmVhZHNOZWVkZWQ7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxIb3N0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhyZWFkc0Rpc3BhdGNoZWQgPj0gdG90YWxXZWFrZW5UaHJlYWRzTmVlZGVkKSBicmVhaztcclxuICAgICAgICAgICAgY29uc3QgaG9zdCA9IGFsbEhvc3RzW2ldO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgZnJlZVJhbSA9IGhvc3QuYXZhaWxhYmxlUmFtO1xyXG4gICAgICAgICAgICBpZiAoZnJlZVJhbSA8IHdlYWtlblNjcmlwdFJhbSkgY29udGludWU7XHJcbiAgICAgICAgICAgIGNvbnN0IHRocmVhZFNwYWNlID0gTWF0aC5mbG9vcihmcmVlUmFtIC8gd2Vha2VuU2NyaXB0UmFtKTtcclxuXHJcbiAgICAgICAgICAgIC8vIGlmIHRocmVhZHNSZW1haW5pbmcgaXMgbGVzcyB0aGFuIHRoZSB0aHJlYWRTcGFjZSwgdGhlbiB3ZSBjYW4gb25seSBkaXNwYXRjaCB0aHJlYWRzUmVtYWluaW5nIHRocmVhZHNcclxuICAgICAgICAgICAgY29uc3QgdGhyZWFkc1RvRGlzcGF0Y2ggPSBNYXRoLm1pbih0aHJlYWRzUmVtYWluaW5nLCB0aHJlYWRTcGFjZSk7XHJcblxyXG4gICAgICAgICAgICBwaWQgPSBucy5leGVjKFwid2Vha2VuLmpzXCIsIGhvc3QubmFtZSwgdGhyZWFkc1RvRGlzcGF0Y2gsIHRhcmdldCwgZGVsYXkpO1xyXG4gICAgICAgICAgICB0aHJlYWRzUmVtYWluaW5nIC09IHRocmVhZHNUb0Rpc3BhdGNoO1xyXG4gICAgICAgICAgICB0aHJlYWRzRGlzcGF0Y2hlZCArPSB0aHJlYWRzVG9EaXNwYXRjaDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aHJlYWRzUmVtYWluaW5nIDw9IDApIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoXCJEb25lIGRlcGxveWluZyBcIiArIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCArIFwiIHdlYWtlblwiICsgb3JkZXIgKyBcIiB0aHJlYWRzIVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIHBpZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgIENvbG9ycy5ZRUxMT1cgK1xyXG4gICAgICAgICAgICAgICAgXCJUaGVyZSBhcmUgXCIgK1xyXG4gICAgICAgICAgICAgICAgdGhyZWFkc1JlbWFpbmluZyArXHJcbiAgICAgICAgICAgICAgICBcIiB0aHJlYWRzIHJlbWFpbmluZyBhZnRlciBkaXNwYXRjaGluZyBhbGwgdGhyZWFkcywgYXR0ZW1wdGluZyB0byBkaXNwYXRjaCByZW1haW5pbmcgdGhyZWFkcyBvbiBwdXJjaGFzZWQgc2VydmVyXCIsXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgY29uc3QgbmVlZGVkV2Vha2VuUmFtID0gdGhyZWFkc1JlbWFpbmluZyAqIHdlYWtlblNjcmlwdFJhbTtcclxuICAgICAgICBjb25zdCBzZXJ2ZXIgPSBTZXJ2ZXJNYW5hZ2VyLmJ1eU9yVXBncmFkZVNlcnZlcihucywgbmVlZGVkV2Vha2VuUmFtLCBDb25maWcuV0VBS19TRVJWRVJfTkFNRSk7XHJcblxyXG4gICAgICAgIGlmIChzZXJ2ZXIgPT09IFwiXCIpIHJldHVybiAwO1xyXG5cclxuICAgICAgICBwaWQgPSBucy5leGVjKFwid2Vha2VuLmpzXCIsIHNlcnZlciwgdGhyZWFkc1JlbWFpbmluZywgdGFyZ2V0LCBkZWxheSk7XHJcbiAgICAgICAgbnMucHJpbnQoXCJEb25lIGRlcGxveWluZyBcIiArIHRvdGFsV2Vha2VuVGhyZWFkc05lZWRlZCArIFwiIHdlYWtlblwiICsgb3JkZXIgKyBcIiB0aHJlYWRzIVwiKTtcclxuICAgICAgICByZXR1cm4gcGlkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR3Jvd3MgdGhlIHNwZWNpZmllZCBzZXJ2ZXIgYnkgZXhlY3V0aW5nIHRoZSBcImdyb3cuanNcIiBzY3JpcHQgd2l0aCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiB0aHJlYWRzLlxyXG4gICAgICogSWYgYmF0Y2hNb2RlIGlzIGVuYWJsZWQsIGl0IGNhbGN1bGF0ZXMgdGhlIG51bWJlciBvZiB0aHJlYWRzIG5lZWRlZCB1c2luZyB0aGUgZ2V0R3Jvd1RocmVhZHNGb3JtdWxhcyBmdW5jdGlvbi5cclxuICAgICAqIE90aGVyd2lzZSwgaXQgdXNlcyB0aGUgZ2V0R3Jvd1RocmVhZHMgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIHRoZSBudW1iZXIgb2YgdGhyZWFkcyBuZWVkZWQuXHJcbiAgICAgKiBJZiB0aGVyZSBhcmUgbm8gdGhyZWFkcyBuZWVkZWQsIHRoZSBncm93dGggcHJvY2VzcyBpcyBza2lwcGVkLlxyXG4gICAgICogSWYgdGhlcmUgaXMgYW4gYXZhaWxhYmxlIGhvc3Qgd2l0aCBlbm91Z2ggUkFNIHRvIGV4ZWN1dGUgdGhlIFwiZ3Jvdy5qc1wiIHNjcmlwdCwgaXQgaXMgZXhlY3V0ZWQgaW1tZWRpYXRlbHkuXHJcbiAgICAgKiBPdGhlcndpc2UsIGl0IGF0dGVtcHRzIHRvIHVwZ3JhZGUgb3IgYnV5IGEgc2VydmVyIHdpdGggZW5vdWdoIFJBTSB0byBleGVjdXRlIHRoZSBzY3JpcHQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG5zIC0gVGhlIE5ldFNjcmlwdCBpbnN0YW5jZS5cclxuICAgICAqIEBwYXJhbSB0YXJnZXQgLSBUaGUgbmFtZSBvZiB0aGUgc2VydmVyIHRvIGdyb3cuXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hJZCAtIFRoZSBJRCBvZiB0aGUgYmF0Y2guXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hNb2RlIC0gU2V0IHRvIHRydWUsIG9mIG1vcmUgdGhhbiBvbmUgYmF0Y2ggc2hvdWxkIHJ1biBpbiBwYXJhbGxlbCBtb2RlLlxyXG4gICAgICogQHBhcmFtIGRlbGF5IC0gVGltZSBpbiBtcywgYnkgaG93IG11Y2ggdGhlIHdlYWtlbiBzY3JpcHQgc2hvdWxkIGJlIGRlbGF5ZWQgdG8gZW5hYmxlIHByZWNpc2UgcGFyYWxsZWwgYmF0Y2ggbW9kZSB0aW1pbmcgKGRlZmF1bHQ6IDApLlxyXG4gICAgICogQHJldHVybnMgQSBudW1iZXIgcmVwcmVzZW50aW5nIHRoZSBQSUQgb2YgdGhlIHNjcmlwdCB0aGF0IHdhcyBleGVjdXRlZCwgb3IgMCBpZiBubyBzY3JpcHQgd2FzIGV4ZWN1dGVkLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgZ3Jvd1NlcnZlcihuczogTlMsIHRhcmdldDogc3RyaW5nLCBiYXRjaE1vZGU6IGJvb2xlYW4sIGRlbGF5OiBudW1iZXIsIGZpbHRlck5vdEFsbG93ZWRIb3N0cyA9IHRydWUpOiBudW1iZXIge1xyXG4gICAgICAgIGxldCB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkID0gMDtcclxuICAgICAgICBpZiAoIWJhdGNoTW9kZSkge1xyXG4gICAgICAgICAgICB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkID0gZ2V0R3Jvd1RocmVhZHMobnMsIHRhcmdldCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdG90YWxHcm93VGhyZWFkc05lZWRlZCA9IGdldEdyb3dUaHJlYWRzRm9ybXVsYXMobnMsIHRhcmdldCwgdGhpcy5jdXJyZW50SGFja1RocmVhZHMpO1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRHcm93VGhyZWFkcyA9IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodG90YWxHcm93VGhyZWFkc05lZWRlZCA8IDEpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoXCJObyBncm93IHRocmVhZHMgbmVlZGVkLCBza2lwcGluZyBncm93dGggcHJvY2Vzc1wiKTtcclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBoYWNrIHhwXHJcbiAgICAgICAgY29uc3QgcG0gPSBQbGF5ZXJNYW5hZ2VyLmdldEluc3RhbmNlKG5zKTtcclxuICAgICAgICBwbS5hZGRIYWNraW5nRXhwKG5zLCB0YXJnZXQsIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQpO1xyXG5cclxuICAgICAgICAvLyBleGVjIGdyb3cuanMgd2l0aCBudW0gb2YgdGhyZWFkc1xyXG4gICAgICAgIGxldCBhbGxIb3N0cyA9IGdldEJlc3RIb3N0QnlSYW1PcHRpbWl6ZWQobnMpO1xyXG4gICAgICAgIGlmIChmaWx0ZXJOb3RBbGxvd2VkSG9zdHMpIHtcclxuICAgICAgICAgICAgYWxsSG9zdHMgPSBhbGxIb3N0cy5maWx0ZXIoXHJcbiAgICAgICAgICAgICAgICAoaG9zdCkgPT4gIWhvc3QubmFtZS5pbmNsdWRlcyhDb25maWcuV0VBS19TRVJWRVJfTkFNRSkgJiYgIWhvc3QubmFtZS5pbmNsdWRlcyhDb25maWcuSEFDS19TRVJWRVJfTkFNRSksXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGdyb3dpbmdTY3JpcHRSYW0gPSBDb25maWcuR1JPV19TQ1JJUFRfUkFNO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbEhvc3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGhvc3QgPSBhbGxIb3N0c1tpXTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IG1heFRocmVhZHNPbkhvc3QgPSBNYXRoLmZsb29yKGhvc3QuYXZhaWxhYmxlUmFtIC8gZ3Jvd2luZ1NjcmlwdFJhbSk7XHJcblxyXG4gICAgICAgICAgICBpZiAobWF4VGhyZWFkc09uSG9zdCA+PSB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwaWQgPSBucy5leGVjKFwiZ3Jvdy5qc1wiLCBob3N0Lm5hbWUsIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQsIHRhcmdldCwgZGVsYXkpO1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoXCJEb25lIGRlcGxveWluZyBcIiArIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgKyBcIiBncm93IHRocmVhZHMhXCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBpZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLllFTExPVyArIFwiTm8gYXZhaWxhYmxlIGhvc3QgdG8gZ3JvdyBcIiArIHRhcmdldCArIFwiLiBBdHRlbXB0aW5nIHRvIHVwZ3JhZGUvYnV5IHNlcnZlci4uLlwiKTtcclxuXHJcbiAgICAgICAgY29uc3QgbmVlZGVkR3Jvd1JhbSA9IHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQgKiBncm93aW5nU2NyaXB0UmFtO1xyXG4gICAgICAgIGNvbnN0IHNlcnZlciA9IFNlcnZlck1hbmFnZXIuYnV5T3JVcGdyYWRlU2VydmVyKG5zLCBuZWVkZWRHcm93UmFtLCBDb25maWcuR1JPV19TRVJWRVJfTkFNRSk7XHJcblxyXG4gICAgICAgIGlmIChzZXJ2ZXIgPT09IFwiXCIpIHJldHVybiAwO1xyXG5cclxuICAgICAgICBjb25zdCBwaWQgPSBucy5leGVjKFwiZ3Jvdy5qc1wiLCBzZXJ2ZXIsIHRvdGFsR3Jvd1RocmVhZHNOZWVkZWQsIHRhcmdldCwgZGVsYXkpO1xyXG4gICAgICAgIG5zLnByaW50KFwiRG9uZSBkZXBsb3lpbmcgXCIgKyB0b3RhbEdyb3dUaHJlYWRzTmVlZGVkICsgXCIgZ3JvdyB0aHJlYWRzIVwiKTtcclxuICAgICAgICByZXR1cm4gcGlkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGFja3MgYSBnaXZlbiBzZXJ2ZXIgYnkgZXhlY3V0aW5nIHRoZSBcImhhY2suanNcIiBzY3JpcHQgd2l0aCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiB0aHJlYWRzLCBvbiBjZXJ0YWluIGhvc3RzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBucyAtIFRoZSBOZXRTY3JpcHQgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHRhcmdldCAtIFRoZSBuYW1lIG9mIHRoZSBzZXJ2ZXIgdG8gaGFjay5cclxuICAgICAqIEBwYXJhbSB0aHJlc2hvbGQgLSBUaGUgaGFja2luZyB0aHJlc2hvbGQgZm9yIHRoZSBzZXJ2ZXIuXHJcbiAgICAgKiBAcGFyYW0gYmF0Y2hJZCAtIFRoZSBJRCBvZiB0aGUgY3VycmVudCBoYWNraW5nIGJhdGNoLlxyXG4gICAgICogQHBhcmFtIGJhdGNoTW9kZSAtIFNldCB0byB0cnVlLCBvZiBtb3JlIHRoYW4gb25lIGJhdGNoIHNob3VsZCBydW4gaW4gcGFyYWxsZWwgbW9kZS5cclxuICAgICAqIEBwYXJhbSBkZWxheSAtIFRpbWUgaW4gbXMsIGJ5IGhvdyBtdWNoIHRoZSB3ZWFrZW4gc2NyaXB0IHNob3VsZCBiZSBkZWxheWVkIHRvIGVuYWJsZSBwcmVjaXNlIHBhcmFsbGVsIGJhdGNoIG1vZGUgdGltaW5nIChkZWZhdWx0OiAwKS5cclxuICAgICAqIEByZXR1cm5zIEEgbnVtYmVyIHJlcHJlc2VudGluZyB0aGUgUElEIG9mIHRoZSBzY3JpcHQgdGhhdCB3YXMgZXhlY3V0ZWQsIG9yIDAgaWYgbm8gc2NyaXB0IHdhcyBleGVjdXRlZC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGhhY2tTZXJ2ZXIobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgdGhyZXNob2xkOiBudW1iZXIsIGJhdGNoTW9kZTogYm9vbGVhbiwgZGVsYXk6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICAgICAgbGV0IHRvdGFsSGFja1RocmVhZHNOZWVkZWQgPSAwO1xyXG4gICAgICAgIGlmICghYmF0Y2hNb2RlKSB7XHJcbiAgICAgICAgICAgIHRvdGFsSGFja1RocmVhZHNOZWVkZWQgPSBNYXRoLmNlaWwodGhyZXNob2xkIC8gbnMuaGFja0FuYWx5emUodGFyZ2V0KSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdG90YWxIYWNrVGhyZWFkc05lZWRlZCA9IGdldEhhY2tUaHJlYWRzRm9ybXVsYXMobnMsIHRhcmdldCwgdGhyZXNob2xkKTtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50SGFja1RocmVhZHMgPSB0b3RhbEhhY2tUaHJlYWRzTmVlZGVkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gaGFjayB4cFxyXG4gICAgICAgIGNvbnN0IHBtID0gUGxheWVyTWFuYWdlci5nZXRJbnN0YW5jZShucyk7XHJcbiAgICAgICAgcG0uYWRkSGFja2luZ0V4cChucywgdGFyZ2V0LCB0b3RhbEhhY2tUaHJlYWRzTmVlZGVkKTtcclxuXHJcbiAgICAgICAgY29uc3QgYWxsSG9zdHMgPSBnZXRCZXN0SG9zdEJ5UmFtT3B0aW1pemVkKG5zKS5maWx0ZXIoXHJcbiAgICAgICAgICAgIChob3N0KSA9PiAhaG9zdC5uYW1lLmluY2x1ZGVzKENvbmZpZy5XRUFLX1NFUlZFUl9OQU1FKSAmJiAhaG9zdC5uYW1lLmluY2x1ZGVzKENvbmZpZy5HUk9XX1NFUlZFUl9OQU1FKSxcclxuICAgICAgICApO1xyXG4gICAgICAgIGNvbnN0IGhhY2tpbmdTY3JpcHRSYW0gPSBDb25maWcuSEFDS19TQ1JJUFRfUkFNO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbEhvc3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGhvc3QgPSBhbGxIb3N0c1tpXTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IG1heFRocmVhZHNPbkhvc3QgPSBNYXRoLmZsb29yKGhvc3QuYXZhaWxhYmxlUmFtIC8gaGFja2luZ1NjcmlwdFJhbSk7XHJcblxyXG4gICAgICAgICAgICBpZiAobWF4VGhyZWFkc09uSG9zdCA+PSB0b3RhbEhhY2tUaHJlYWRzTmVlZGVkKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwaWQgPSBucy5leGVjKFwiaGFjay5qc1wiLCBob3N0Lm5hbWUsIHRvdGFsSGFja1RocmVhZHNOZWVkZWQsIHRhcmdldCwgZGVsYXkpO1xyXG4gICAgICAgICAgICAgICAgbnMucHJpbnQoXCJEb25lIGRlcGxveWluZyBcIiArIHRvdGFsSGFja1RocmVhZHNOZWVkZWQgKyBcIiBoYWNrIHRocmVhZHMhXCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBpZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLllFTExPVyArIFwiTm8gYXZhaWxhYmxlIGhvc3QgdG8gaGFjayBcIiArIHRhcmdldCArIFwiLiBCdXlpbmcgc2VydmVyLi4uXCIpO1xyXG5cclxuICAgICAgICBjb25zdCBuZWVkZWRHcm93UmFtID0gdG90YWxIYWNrVGhyZWFkc05lZWRlZCAqIGhhY2tpbmdTY3JpcHRSYW07XHJcbiAgICAgICAgY29uc3Qgc2VydmVyID0gU2VydmVyTWFuYWdlci5idXlPclVwZ3JhZGVTZXJ2ZXIobnMsIG5lZWRlZEdyb3dSYW0sIENvbmZpZy5IQUNLX1NFUlZFUl9OQU1FKTtcclxuXHJcbiAgICAgICAgaWYgKHNlcnZlciA9PT0gXCJcIikgcmV0dXJuIDA7XHJcblxyXG4gICAgICAgIGNvbnN0IHBpZCA9IG5zLmV4ZWMoXCJoYWNrLmpzXCIsIHNlcnZlciwgdG90YWxIYWNrVGhyZWFkc05lZWRlZCwgdGFyZ2V0LCBkZWxheSk7XHJcbiAgICAgICAgbnMucHJpbnQoXCJEb25lIGRlcGxveWluZyBcIiArIHRvdGFsSGFja1RocmVhZHNOZWVkZWQgKyBcIiBoYWNrIHRocmVhZHMhXCIpO1xyXG4gICAgICAgIHJldHVybiBwaWQ7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFFQSxTQUFTLGNBQWM7QUFDdkIsU0FBaUIsaUNBQWlDO0FBQ2xEO0FBQUEsRUFDSTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLE9BQ0c7QUFDUCxTQUFTLHFCQUFxQjtBQUM5QixTQUFTLHFCQUFxQjtBQUV2QixhQUFNLGNBQWM7QUFBQSxFQUN2QixPQUFlLHFCQUFxQjtBQUFBLEVBQ3BDLE9BQWUscUJBQXFCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQWVwQyxPQUFPLGFBQ0gsSUFDQSxRQUNBLE9BQ0EsV0FDQSxRQUFRLEdBQ1Isd0JBQXdCLE1BQ2xCO0FBQ04sUUFBSSwyQkFBMkI7QUFHL0IsUUFBSSxTQUFTLEtBQUssQ0FBQyxXQUFXO0FBRTFCLGlDQUEyQixpQkFBaUIsSUFBSSxNQUFNO0FBQUEsSUFDMUQsV0FBVyxTQUFTLEtBQUssQ0FBQyxXQUFXO0FBRWpDLFlBQU0sY0FBYyxlQUFlLElBQUksTUFBTTtBQUU3QyxpQ0FBMkIsMEJBQTBCLElBQUksV0FBVztBQUFBLElBQ3hFLFdBQVcsU0FBUyxLQUFLLFdBQVc7QUFFaEMsaUNBQTJCLDBCQUEwQixJQUFJLEtBQUssa0JBQWtCO0FBQUEsSUFDcEYsV0FBVyxTQUFTLEtBQUssV0FBVztBQUVoQyxpQ0FBMkIsMEJBQTBCLElBQUksS0FBSyxrQkFBa0I7QUFBQSxJQUNwRixPQUFPO0FBQ0gsWUFBTSxJQUFJLE1BQU0seUNBQXlDO0FBQUEsSUFDN0Q7QUFFQSxRQUFJLDJCQUEyQixHQUFHO0FBQzlCLFNBQUcsTUFBTSx3Q0FBd0MsS0FBSztBQUN0RCxhQUFPO0FBQUEsSUFDWDtBQUdBLFVBQU0sS0FBSyxjQUFjLFlBQVksRUFBRTtBQUN2QyxPQUFHLGNBQWMsSUFBSSxRQUFRLHdCQUF3QjtBQUdyRCxRQUFJLFdBQXFCLDBCQUEwQixFQUFFO0FBQ3JELFFBQUksdUJBQXVCO0FBQ3ZCLGlCQUFXLFNBQVM7QUFBQSxRQUNoQixDQUFDLFNBQVMsQ0FBQyxLQUFLLEtBQUssU0FBUyxPQUFPLGdCQUFnQixLQUFLLENBQUMsS0FBSyxLQUFLLFNBQVMsT0FBTyxnQkFBZ0I7QUFBQSxNQUN6RztBQUFBLElBQ0o7QUFDQSxVQUFNLGtCQUFrQixPQUFPO0FBQy9CLFFBQUksTUFBTTtBQUVWLFFBQUksb0JBQW9CO0FBQ3hCLFFBQUksbUJBQW1CO0FBQ3ZCLGFBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsVUFBSSxxQkFBcUI7QUFBMEI7QUFDbkQsWUFBTSxPQUFPLFNBQVMsQ0FBQztBQUV2QixZQUFNLFVBQVUsS0FBSztBQUNyQixVQUFJLFVBQVU7QUFBaUI7QUFDL0IsWUFBTSxjQUFjLEtBQUssTUFBTSxVQUFVLGVBQWU7QUFHeEQsWUFBTSxvQkFBb0IsS0FBSyxJQUFJLGtCQUFrQixXQUFXO0FBRWhFLFlBQU0sR0FBRyxLQUFLLGFBQWEsS0FBSyxNQUFNLG1CQUFtQixRQUFRLEtBQUs7QUFDdEUsMEJBQW9CO0FBQ3BCLDJCQUFxQjtBQUFBLElBQ3pCO0FBRUEsUUFBSSxvQkFBb0IsR0FBRztBQUN2QixTQUFHLE1BQU0sb0JBQW9CLDJCQUEyQixZQUFZLFFBQVEsV0FBVztBQUN2RixhQUFPO0FBQUEsSUFDWDtBQUNBLE9BQUc7QUFBQSxNQUNDLE9BQU8sU0FDSCxlQUNBLG1CQUNBO0FBQUEsSUFDUjtBQUVBLFVBQU0sa0JBQWtCLG1CQUFtQjtBQUMzQyxVQUFNLFNBQVMsY0FBYyxtQkFBbUIsSUFBSSxpQkFBaUIsT0FBTyxnQkFBZ0I7QUFFNUYsUUFBSSxXQUFXO0FBQUksYUFBTztBQUUxQixVQUFNLEdBQUcsS0FBSyxhQUFhLFFBQVEsa0JBQWtCLFFBQVEsS0FBSztBQUNsRSxPQUFHLE1BQU0sb0JBQW9CLDJCQUEyQixZQUFZLFFBQVEsV0FBVztBQUN2RixXQUFPO0FBQUEsRUFDWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBaUJBLE9BQU8sV0FBVyxJQUFRLFFBQWdCLFdBQW9CLE9BQWUsd0JBQXdCLE1BQWM7QUFDL0csUUFBSSx5QkFBeUI7QUFDN0IsUUFBSSxDQUFDLFdBQVc7QUFDWiwrQkFBeUIsZUFBZSxJQUFJLE1BQU07QUFBQSxJQUN0RCxPQUFPO0FBQ0gsK0JBQXlCLHVCQUF1QixJQUFJLFFBQVEsS0FBSyxrQkFBa0I7QUFDbkYsV0FBSyxxQkFBcUI7QUFBQSxJQUM5QjtBQUVBLFFBQUkseUJBQXlCLEdBQUc7QUFDNUIsU0FBRyxNQUFNLGlEQUFpRDtBQUMxRCxhQUFPO0FBQUEsSUFDWDtBQUdBLFVBQU0sS0FBSyxjQUFjLFlBQVksRUFBRTtBQUN2QyxPQUFHLGNBQWMsSUFBSSxRQUFRLHNCQUFzQjtBQUduRCxRQUFJLFdBQVcsMEJBQTBCLEVBQUU7QUFDM0MsUUFBSSx1QkFBdUI7QUFDdkIsaUJBQVcsU0FBUztBQUFBLFFBQ2hCLENBQUMsU0FBUyxDQUFDLEtBQUssS0FBSyxTQUFTLE9BQU8sZ0JBQWdCLEtBQUssQ0FBQyxLQUFLLEtBQUssU0FBUyxPQUFPLGdCQUFnQjtBQUFBLE1BQ3pHO0FBQUEsSUFDSjtBQUNBLFVBQU0sbUJBQW1CLE9BQU87QUFFaEMsYUFBUyxJQUFJLEdBQUcsSUFBSSxTQUFTLFFBQVEsS0FBSztBQUN0QyxZQUFNLE9BQU8sU0FBUyxDQUFDO0FBRXZCLFlBQU0sbUJBQW1CLEtBQUssTUFBTSxLQUFLLGVBQWUsZ0JBQWdCO0FBRXhFLFVBQUksb0JBQW9CLHdCQUF3QjtBQUM1QyxjQUFNQSxPQUFNLEdBQUcsS0FBSyxXQUFXLEtBQUssTUFBTSx3QkFBd0IsUUFBUSxLQUFLO0FBQy9FLFdBQUcsTUFBTSxvQkFBb0IseUJBQXlCLGdCQUFnQjtBQUN0RSxlQUFPQTtBQUFBLE1BQ1g7QUFBQSxJQUNKO0FBRUEsT0FBRyxNQUFNLE9BQU8sU0FBUywrQkFBK0IsU0FBUyx1Q0FBdUM7QUFFeEcsVUFBTSxnQkFBZ0IseUJBQXlCO0FBQy9DLFVBQU0sU0FBUyxjQUFjLG1CQUFtQixJQUFJLGVBQWUsT0FBTyxnQkFBZ0I7QUFFMUYsUUFBSSxXQUFXO0FBQUksYUFBTztBQUUxQixVQUFNLE1BQU0sR0FBRyxLQUFLLFdBQVcsUUFBUSx3QkFBd0IsUUFBUSxLQUFLO0FBQzVFLE9BQUcsTUFBTSxvQkFBb0IseUJBQXlCLGdCQUFnQjtBQUN0RSxXQUFPO0FBQUEsRUFDWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQWFBLE9BQU8sV0FBVyxJQUFRLFFBQWdCLFdBQW1CLFdBQW9CLE9BQXVCO0FBQ3BHLFFBQUkseUJBQXlCO0FBQzdCLFFBQUksQ0FBQyxXQUFXO0FBQ1osK0JBQXlCLEtBQUssS0FBSyxZQUFZLEdBQUcsWUFBWSxNQUFNLENBQUM7QUFBQSxJQUN6RSxPQUFPO0FBQ0gsK0JBQXlCLHVCQUF1QixJQUFJLFFBQVEsU0FBUztBQUNyRSxXQUFLLHFCQUFxQjtBQUFBLElBQzlCO0FBR0EsVUFBTSxLQUFLLGNBQWMsWUFBWSxFQUFFO0FBQ3ZDLE9BQUcsY0FBYyxJQUFJLFFBQVEsc0JBQXNCO0FBRW5ELFVBQU0sV0FBVywwQkFBMEIsRUFBRSxFQUFFO0FBQUEsTUFDM0MsQ0FBQyxTQUFTLENBQUMsS0FBSyxLQUFLLFNBQVMsT0FBTyxnQkFBZ0IsS0FBSyxDQUFDLEtBQUssS0FBSyxTQUFTLE9BQU8sZ0JBQWdCO0FBQUEsSUFDekc7QUFDQSxVQUFNLG1CQUFtQixPQUFPO0FBRWhDLGFBQVMsSUFBSSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdEMsWUFBTSxPQUFPLFNBQVMsQ0FBQztBQUV2QixZQUFNLG1CQUFtQixLQUFLLE1BQU0sS0FBSyxlQUFlLGdCQUFnQjtBQUV4RSxVQUFJLG9CQUFvQix3QkFBd0I7QUFDNUMsY0FBTUEsT0FBTSxHQUFHLEtBQUssV0FBVyxLQUFLLE1BQU0sd0JBQXdCLFFBQVEsS0FBSztBQUMvRSxXQUFHLE1BQU0sb0JBQW9CLHlCQUF5QixnQkFBZ0I7QUFDdEUsZUFBT0E7QUFBQSxNQUNYO0FBQUEsSUFDSjtBQUVBLE9BQUcsTUFBTSxPQUFPLFNBQVMsK0JBQStCLFNBQVMsb0JBQW9CO0FBRXJGLFVBQU0sZ0JBQWdCLHlCQUF5QjtBQUMvQyxVQUFNLFNBQVMsY0FBYyxtQkFBbUIsSUFBSSxlQUFlLE9BQU8sZ0JBQWdCO0FBRTFGLFFBQUksV0FBVztBQUFJLGFBQU87QUFFMUIsVUFBTSxNQUFNLEdBQUcsS0FBSyxXQUFXLFFBQVEsd0JBQXdCLFFBQVEsS0FBSztBQUM1RSxPQUFHLE1BQU0sb0JBQW9CLHlCQUF5QixnQkFBZ0I7QUFDdEUsV0FBTztBQUFBLEVBQ1g7QUFDSjsiLCJuYW1lcyI6WyJwaWQiXX0=\",\"filename\":\"parallel/WGHAlgorithms.js\",\"server\":\"home\"}}],[\"parallel/PlayerManager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export class PlayerManager {\\n  static instance;\\n  player;\\n  static getInstance(ns) {\\n    if (!PlayerManager.instance) {\\n      PlayerManager.instance = new PlayerManager(ns);\\n    }\\n    return PlayerManager.instance;\\n  }\\n  getPlayer() {\\n    return this.player;\\n  }\\n  resetPlayer(ns) {\\n    const player = ns.getPlayer();\\n    this.player = player;\\n  }\\n  addHackingExp(ns, target, threadCount) {\\n    if (!ns.fileExists(\\\"Formulas.exe\\\", \\\"home\\\")) {\\n      return;\\n    }\\n    const serverObject = ns.getServer(target);\\n    const hackXp = ns.formulas.hacking.hackExp(serverObject, this.player);\\n    const totalExpGain = hackXp * threadCount;\\n    const lvlAfterHack = ns.formulas.skills.calculateSkill(\\n      this.player.exp.hacking + totalExpGain,\\n      this.player.mults.hacking\\n    );\\n    if (lvlAfterHack > this.player.skills.hacking) {\\n      ns.print(\\n        `Hacking level up! Exp: ${this.player.exp.hacking} -> ${this.player.exp.hacking + totalExpGain} | Lvl: ${this.player.skills.hacking} -> ${lvlAfterHack}`\\n      );\\n    }\\n    this.player.exp.hacking += totalExpGain;\\n    this.player.skills.hacking = lvlAfterHack;\\n  }\\n  constructor(ns) {\\n    this.player = ns.getPlayer();\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBsYXllck1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMsIFBsYXllciB9IGZyb20gXCJAbnNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQbGF5ZXJNYW5hZ2VyIHtcclxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBQbGF5ZXJNYW5hZ2VyO1xyXG4gICAgcHJpdmF0ZSBwbGF5ZXI6IFBsYXllcjtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKG5zOiBOUykge1xyXG4gICAgICAgIGlmICghUGxheWVyTWFuYWdlci5pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICBQbGF5ZXJNYW5hZ2VyLmluc3RhbmNlID0gbmV3IFBsYXllck1hbmFnZXIobnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUGxheWVyTWFuYWdlci5pbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRQbGF5ZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucGxheWVyO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0UGxheWVyKG5zOiBOUykge1xyXG4gICAgICAgIGNvbnN0IHBsYXllciA9IG5zLmdldFBsYXllcigpO1xyXG4gICAgICAgIHRoaXMucGxheWVyID0gcGxheWVyO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEhhY2tpbmdFeHAobnM6IE5TLCB0YXJnZXQ6IHN0cmluZywgdGhyZWFkQ291bnQ6IG51bWJlcikge1xyXG4gICAgICAgIGlmICghbnMuZmlsZUV4aXN0cyhcIkZvcm11bGFzLmV4ZVwiLCBcImhvbWVcIikpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3Qgc2VydmVyT2JqZWN0ID0gbnMuZ2V0U2VydmVyKHRhcmdldCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGhhY2tYcCA9IG5zLmZvcm11bGFzLmhhY2tpbmcuaGFja0V4cChzZXJ2ZXJPYmplY3QsIHRoaXMucGxheWVyKTtcclxuICAgICAgICBjb25zdCB0b3RhbEV4cEdhaW4gPSBoYWNrWHAgKiB0aHJlYWRDb3VudDtcclxuXHJcbiAgICAgICAgY29uc3QgbHZsQWZ0ZXJIYWNrID0gbnMuZm9ybXVsYXMuc2tpbGxzLmNhbGN1bGF0ZVNraWxsKFxyXG4gICAgICAgICAgICB0aGlzLnBsYXllci5leHAuaGFja2luZyArIHRvdGFsRXhwR2FpbixcclxuICAgICAgICAgICAgdGhpcy5wbGF5ZXIubXVsdHMuaGFja2luZyxcclxuICAgICAgICApO1xyXG5cclxuICAgICAgICBpZiAobHZsQWZ0ZXJIYWNrID4gdGhpcy5wbGF5ZXIuc2tpbGxzLmhhY2tpbmcpIHtcclxuICAgICAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgICAgICBgSGFja2luZyBsZXZlbCB1cCEgRXhwOiAke3RoaXMucGxheWVyLmV4cC5oYWNraW5nfSAtPiAke1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLmV4cC5oYWNraW5nICsgdG90YWxFeHBHYWluXHJcbiAgICAgICAgICAgICAgICB9IHwgTHZsOiAke3RoaXMucGxheWVyLnNraWxscy5oYWNraW5nfSAtPiAke2x2bEFmdGVySGFja31gLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gc2V0IHBsYXllciBleHAgYW5kIGx2bCBhZnRlciBoYWNrIGZvciBzaW11bGF0ZWQgcGxheWVyXHJcbiAgICAgICAgdGhpcy5wbGF5ZXIuZXhwLmhhY2tpbmcgKz0gdG90YWxFeHBHYWluO1xyXG4gICAgICAgIHRoaXMucGxheWVyLnNraWxscy5oYWNraW5nID0gbHZsQWZ0ZXJIYWNrO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IobnM6IE5TKSB7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBucy5nZXRQbGF5ZXIoKTtcclxuICAgIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUVPLGFBQU0sY0FBYztBQUFBLEVBQ3ZCLE9BQWU7QUFBQSxFQUNQO0FBQUEsRUFFUixPQUFjLFlBQVksSUFBUTtBQUM5QixRQUFJLENBQUMsY0FBYyxVQUFVO0FBQ3pCLG9CQUFjLFdBQVcsSUFBSSxjQUFjLEVBQUU7QUFBQSxJQUNqRDtBQUNBLFdBQU8sY0FBYztBQUFBLEVBQ3pCO0FBQUEsRUFFQSxZQUFZO0FBQ1IsV0FBTyxLQUFLO0FBQUEsRUFDaEI7QUFBQSxFQUVBLFlBQVksSUFBUTtBQUNoQixVQUFNLFNBQVMsR0FBRyxVQUFVO0FBQzVCLFNBQUssU0FBUztBQUFBLEVBQ2xCO0FBQUEsRUFFQSxjQUFjLElBQVEsUUFBZ0IsYUFBcUI7QUFDdkQsUUFBSSxDQUFDLEdBQUcsV0FBVyxnQkFBZ0IsTUFBTSxHQUFHO0FBQ3hDO0FBQUEsSUFDSjtBQUVBLFVBQU0sZUFBZSxHQUFHLFVBQVUsTUFBTTtBQUV4QyxVQUFNLFNBQVMsR0FBRyxTQUFTLFFBQVEsUUFBUSxjQUFjLEtBQUssTUFBTTtBQUNwRSxVQUFNLGVBQWUsU0FBUztBQUU5QixVQUFNLGVBQWUsR0FBRyxTQUFTLE9BQU87QUFBQSxNQUNwQyxLQUFLLE9BQU8sSUFBSSxVQUFVO0FBQUEsTUFDMUIsS0FBSyxPQUFPLE1BQU07QUFBQSxJQUN0QjtBQUVBLFFBQUksZUFBZSxLQUFLLE9BQU8sT0FBTyxTQUFTO0FBQzNDLFNBQUc7QUFBQSxRQUNDLDBCQUEwQixLQUFLLE9BQU8sSUFBSSxPQUFPLE9BQzdDLEtBQUssT0FBTyxJQUFJLFVBQVUsWUFDOUIsV0FBVyxLQUFLLE9BQU8sT0FBTyxPQUFPLE9BQU8sWUFBWTtBQUFBLE1BQzVEO0FBQUEsSUFDSjtBQUdBLFNBQUssT0FBTyxJQUFJLFdBQVc7QUFDM0IsU0FBSyxPQUFPLE9BQU8sVUFBVTtBQUFBLEVBQ2pDO0FBQUEsRUFFUSxZQUFZLElBQVE7QUFDeEIsU0FBSyxTQUFTLEdBQUcsVUFBVTtBQUFBLEVBQy9CO0FBQ0o7IiwibmFtZXMiOltdfQ==\",\"filename\":\"parallel/PlayerManager.js\",\"server\":\"home\"}}],[\"Stock/manager.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Colors } from \\\"/lib.js\\\";\\nconst BUY_VALUE = 1e6;\\nfunction getAllStocks(ns) {\\n  const symbols = ns.stock.getSymbols();\\n  return symbols.map((symbol) => {\\n    return {\\n      symbol,\\n      organization: ns.stock.getOrganization(symbol)\\n    };\\n  });\\n}\\nfunction saveMarket(ns, stocks) {\\n  const str = JSON.stringify(stocks);\\n  ns.write(\\\"Stock/market.txt\\\", str, \\\"w\\\");\\n}\\nfunction loadMarket(ns) {\\n  const str = ns.read(\\\"Stock/market.txt\\\");\\n  return JSON.parse(str);\\n}\\nexport async function main(ns) {\\n  ns.print(\\\"asd\\\");\\n  ns.tail();\\n  ns.disableLog(\\\"ALL\\\");\\n  const s = ns.stock;\\n  const stocks = loadMarket(ns);\\n  if (stocks.length === 0) {\\n    ns.print(Colors.YELLOW + \\\"Unable to load market, fetching new data\\\");\\n    const allStocks = getAllStocks(ns);\\n    stocks.push(...allStocks);\\n  }\\n  ns.print(stocks.length);\\n  let totalProfit = 0;\\n  while (true) {\\n    ns.clearLog();\\n    for (const stock of stocks) {\\n      const price = s.getPrice(stock.symbol);\\n      const forecast = s.getForecast(stock.symbol);\\n      const position = s.getPosition(stock.symbol);\\n      if (stock.observedMinPrice === void 0 || price < stock.observedMinPrice) {\\n        stock.observedMinPrice = price;\\n      }\\n      if (stock.observedMaxPrice === void 0 || price > stock.observedMaxPrice) {\\n        stock.observedMaxPrice = price;\\n      }\\n      if (stock.havePosition && forecast < 0.5) {\\n        const sellPrice = s.sellStock(stock.symbol, position[0]);\\n        if (!stock.buyPrice)\\n          throw new Error(\\\"Buy price is not set\\\");\\n        totalProfit += sellPrice - stock.buyPrice;\\n      }\\n      if (forecast >= 0.6 && !stock.havePosition) {\\n        const buyPrice = s.buyStock(stock.symbol, BUY_VALUE / price);\\n        stock.buyPrice = buyPrice;\\n      }\\n      if (forecast < 0.5)\\n        continue;\\n      ns.print(\\n        `${stock.symbol} (${stock.organization}): ${ns.formatNumber(price)} (min: ${ns.formatNumber(\\n          stock.observedMinPrice\\n        )}, max: ${ns.formatNumber(stock.observedMaxPrice)}) - forecast: ${forecast}`\\n      );\\n    }\\n    ns.print(Colors.GREEN + \\\"Total profit: \\\" + ns.formatNumber(totalProfit));\\n    saveMarket(ns, stocks);\\n    await s.nextUpdate();\\n    ns.print(\\\"\\\\n\\\");\\n  }\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmltcG9ydCB7IENvbG9ycyB9IGZyb20gXCJAL2xpYlwiO1xyXG5cclxuaW50ZXJmYWNlIFN0b2NrIHtcclxuICAgIHN5bWJvbDogc3RyaW5nO1xyXG4gICAgb3JnYW5pemF0aW9uOiBzdHJpbmc7XHJcbiAgICBvYnNlcnZlZE1pblByaWNlPzogbnVtYmVyO1xyXG4gICAgb2JzZXJ2ZWRNYXhQcmljZT86IG51bWJlcjtcclxuICAgIGhhdmVQb3NpdGlvbj86IGJvb2xlYW47XHJcbiAgICBidXlQcmljZT86IG51bWJlcjtcclxufVxyXG5cclxuY29uc3QgQlVZX1ZBTFVFID0gMTAwMDAwMDtcclxuXHJcbmZ1bmN0aW9uIGdldEFsbFN0b2NrcyhuczogTlMpOiBTdG9ja1tdIHtcclxuICAgIGNvbnN0IHN5bWJvbHMgPSBucy5zdG9jay5nZXRTeW1ib2xzKCk7XHJcblxyXG4gICAgcmV0dXJuIHN5bWJvbHMubWFwKChzeW1ib2wpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBzeW1ib2wsXHJcbiAgICAgICAgICAgIG9yZ2FuaXphdGlvbjogbnMuc3RvY2suZ2V0T3JnYW5pemF0aW9uKHN5bWJvbCksXHJcbiAgICAgICAgfTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzYXZlTWFya2V0KG5zOiBOUywgc3RvY2tzOiBTdG9ja1tdKSB7XHJcbiAgICBjb25zdCBzdHIgPSBKU09OLnN0cmluZ2lmeShzdG9ja3MpO1xyXG4gICAgbnMud3JpdGUoXCJTdG9jay9tYXJrZXQudHh0XCIsIHN0ciwgXCJ3XCIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkTWFya2V0KG5zOiBOUyk6IFN0b2NrW10ge1xyXG4gICAgY29uc3Qgc3RyID0gbnMucmVhZChcIlN0b2NrL21hcmtldC50eHRcIik7XHJcbiAgICByZXR1cm4gSlNPTi5wYXJzZShzdHIpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpIHtcclxuICAgIG5zLnByaW50KFwiYXNkXCIpO1xyXG4gICAgbnMudGFpbCgpO1xyXG4gICAgbnMuZGlzYWJsZUxvZyhcIkFMTFwiKTtcclxuICAgIGNvbnN0IHMgPSBucy5zdG9jaztcclxuXHJcbiAgICBjb25zdCBzdG9ja3M6IFN0b2NrW10gPSBsb2FkTWFya2V0KG5zKTtcclxuICAgIGlmIChzdG9ja3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLllFTExPVyArIFwiVW5hYmxlIHRvIGxvYWQgbWFya2V0LCBmZXRjaGluZyBuZXcgZGF0YVwiKTtcclxuICAgICAgICBjb25zdCBhbGxTdG9ja3MgPSBnZXRBbGxTdG9ja3MobnMpO1xyXG4gICAgICAgIHN0b2Nrcy5wdXNoKC4uLmFsbFN0b2Nrcyk7XHJcbiAgICB9XHJcblxyXG4gICAgbnMucHJpbnQoc3RvY2tzLmxlbmd0aCk7XHJcblxyXG4gICAgbGV0IHRvdGFsUHJvZml0ID0gMDtcclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgbnMuY2xlYXJMb2coKTtcclxuXHJcbiAgICAgICAgZm9yIChjb25zdCBzdG9jayBvZiBzdG9ja3MpIHtcclxuICAgICAgICAgICAgY29uc3QgcHJpY2UgPSBzLmdldFByaWNlKHN0b2NrLnN5bWJvbCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGZvcmVjYXN0ID0gcy5nZXRGb3JlY2FzdChzdG9jay5zeW1ib2wpO1xyXG4gICAgICAgICAgICBjb25zdCBwb3NpdGlvbiA9IHMuZ2V0UG9zaXRpb24oc3RvY2suc3ltYm9sKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChzdG9jay5vYnNlcnZlZE1pblByaWNlID09PSB1bmRlZmluZWQgfHwgcHJpY2UgPCBzdG9jay5vYnNlcnZlZE1pblByaWNlKSB7XHJcbiAgICAgICAgICAgICAgICBzdG9jay5vYnNlcnZlZE1pblByaWNlID0gcHJpY2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHN0b2NrLm9ic2VydmVkTWF4UHJpY2UgPT09IHVuZGVmaW5lZCB8fCBwcmljZSA+IHN0b2NrLm9ic2VydmVkTWF4UHJpY2UpIHtcclxuICAgICAgICAgICAgICAgIHN0b2NrLm9ic2VydmVkTWF4UHJpY2UgPSBwcmljZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHN0b2NrLmhhdmVQb3NpdGlvbiAmJiBmb3JlY2FzdCA8IDAuNSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsbFByaWNlID0gcy5zZWxsU3RvY2soc3RvY2suc3ltYm9sLCBwb3NpdGlvblswXSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXN0b2NrLmJ1eVByaWNlKSB0aHJvdyBuZXcgRXJyb3IoXCJCdXkgcHJpY2UgaXMgbm90IHNldFwiKTtcclxuICAgICAgICAgICAgICAgIHRvdGFsUHJvZml0ICs9IHNlbGxQcmljZSAtIHN0b2NrLmJ1eVByaWNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChmb3JlY2FzdCA+PSAwLjYgJiYgIXN0b2NrLmhhdmVQb3NpdGlvbikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYnV5UHJpY2UgPSBzLmJ1eVN0b2NrKHN0b2NrLnN5bWJvbCwgQlVZX1ZBTFVFIC8gcHJpY2UpO1xyXG4gICAgICAgICAgICAgICAgc3RvY2suYnV5UHJpY2UgPSBidXlQcmljZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGZvcmVjYXN0IDwgMC41KSBjb250aW51ZTtcclxuICAgICAgICAgICAgbnMucHJpbnQoXHJcbiAgICAgICAgICAgICAgICBgJHtzdG9jay5zeW1ib2x9ICgke3N0b2NrLm9yZ2FuaXphdGlvbn0pOiAke25zLmZvcm1hdE51bWJlcihwcmljZSl9IChtaW46ICR7bnMuZm9ybWF0TnVtYmVyKFxyXG4gICAgICAgICAgICAgICAgICAgIHN0b2NrLm9ic2VydmVkTWluUHJpY2UsXHJcbiAgICAgICAgICAgICAgICApfSwgbWF4OiAke25zLmZvcm1hdE51bWJlcihzdG9jay5vYnNlcnZlZE1heFByaWNlKX0pIC0gZm9yZWNhc3Q6ICR7Zm9yZWNhc3R9YCxcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbnMucHJpbnQoQ29sb3JzLkdSRUVOICsgXCJUb3RhbCBwcm9maXQ6IFwiICsgbnMuZm9ybWF0TnVtYmVyKHRvdGFsUHJvZml0KSk7XHJcblxyXG4gICAgICAgIHNhdmVNYXJrZXQobnMsIHN0b2Nrcyk7XHJcbiAgICAgICAgYXdhaXQgcy5uZXh0VXBkYXRlKCk7XHJcbiAgICAgICAgbnMucHJpbnQoXCJcXG5cIik7XHJcbiAgICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxTQUFTLGNBQWM7QUFXdkIsTUFBTSxZQUFZO0FBRWxCLFNBQVMsYUFBYSxJQUFpQjtBQUNuQyxRQUFNLFVBQVUsR0FBRyxNQUFNLFdBQVc7QUFFcEMsU0FBTyxRQUFRLElBQUksQ0FBQyxXQUFXO0FBQzNCLFdBQU87QUFBQSxNQUNIO0FBQUEsTUFDQSxjQUFjLEdBQUcsTUFBTSxnQkFBZ0IsTUFBTTtBQUFBLElBQ2pEO0FBQUEsRUFDSixDQUFDO0FBQ0w7QUFFQSxTQUFTLFdBQVcsSUFBUSxRQUFpQjtBQUN6QyxRQUFNLE1BQU0sS0FBSyxVQUFVLE1BQU07QUFDakMsS0FBRyxNQUFNLG9CQUFvQixLQUFLLEdBQUc7QUFDekM7QUFFQSxTQUFTLFdBQVcsSUFBaUI7QUFDakMsUUFBTSxNQUFNLEdBQUcsS0FBSyxrQkFBa0I7QUFDdEMsU0FBTyxLQUFLLE1BQU0sR0FBRztBQUN6QjtBQUVBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsS0FBRyxNQUFNLEtBQUs7QUFDZCxLQUFHLEtBQUs7QUFDUixLQUFHLFdBQVcsS0FBSztBQUNuQixRQUFNLElBQUksR0FBRztBQUViLFFBQU0sU0FBa0IsV0FBVyxFQUFFO0FBQ3JDLE1BQUksT0FBTyxXQUFXLEdBQUc7QUFDckIsT0FBRyxNQUFNLE9BQU8sU0FBUywwQ0FBMEM7QUFDbkUsVUFBTSxZQUFZLGFBQWEsRUFBRTtBQUNqQyxXQUFPLEtBQUssR0FBRyxTQUFTO0FBQUEsRUFDNUI7QUFFQSxLQUFHLE1BQU0sT0FBTyxNQUFNO0FBRXRCLE1BQUksY0FBYztBQUNsQixTQUFPLE1BQU07QUFDVCxPQUFHLFNBQVM7QUFFWixlQUFXLFNBQVMsUUFBUTtBQUN4QixZQUFNLFFBQVEsRUFBRSxTQUFTLE1BQU0sTUFBTTtBQUNyQyxZQUFNLFdBQVcsRUFBRSxZQUFZLE1BQU0sTUFBTTtBQUMzQyxZQUFNLFdBQVcsRUFBRSxZQUFZLE1BQU0sTUFBTTtBQUUzQyxVQUFJLE1BQU0scUJBQXFCLFVBQWEsUUFBUSxNQUFNLGtCQUFrQjtBQUN4RSxjQUFNLG1CQUFtQjtBQUFBLE1BQzdCO0FBQ0EsVUFBSSxNQUFNLHFCQUFxQixVQUFhLFFBQVEsTUFBTSxrQkFBa0I7QUFDeEUsY0FBTSxtQkFBbUI7QUFBQSxNQUM3QjtBQUVBLFVBQUksTUFBTSxnQkFBZ0IsV0FBVyxLQUFLO0FBQ3RDLGNBQU0sWUFBWSxFQUFFLFVBQVUsTUFBTSxRQUFRLFNBQVMsQ0FBQyxDQUFDO0FBQ3ZELFlBQUksQ0FBQyxNQUFNO0FBQVUsZ0JBQU0sSUFBSSxNQUFNLHNCQUFzQjtBQUMzRCx1QkFBZSxZQUFZLE1BQU07QUFBQSxNQUNyQztBQUNBLFVBQUksWUFBWSxPQUFPLENBQUMsTUFBTSxjQUFjO0FBQ3hDLGNBQU0sV0FBVyxFQUFFLFNBQVMsTUFBTSxRQUFRLFlBQVksS0FBSztBQUMzRCxjQUFNLFdBQVc7QUFBQSxNQUNyQjtBQUVBLFVBQUksV0FBVztBQUFLO0FBQ3BCLFNBQUc7QUFBQSxRQUNDLEdBQUcsTUFBTSxNQUFNLEtBQUssTUFBTSxZQUFZLE1BQU0sR0FBRyxhQUFhLEtBQUssQ0FBQyxVQUFVLEdBQUc7QUFBQSxVQUMzRSxNQUFNO0FBQUEsUUFDVixDQUFDLFVBQVUsR0FBRyxhQUFhLE1BQU0sZ0JBQWdCLENBQUMsaUJBQWlCLFFBQVE7QUFBQSxNQUMvRTtBQUFBLElBQ0o7QUFDQSxPQUFHLE1BQU0sT0FBTyxRQUFRLG1CQUFtQixHQUFHLGFBQWEsV0FBVyxDQUFDO0FBRXZFLGVBQVcsSUFBSSxNQUFNO0FBQ3JCLFVBQU0sRUFBRSxXQUFXO0FBQ25CLE9BQUcsTUFBTSxJQUFJO0FBQUEsRUFDakI7QUFDSjsiLCJuYW1lcyI6W119\",\"filename\":\"Stock/manager.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"daemon-grow\",\"daemon-hack\",\"daemon-weak\",\"daemon-grow-0\",\"daemon-grow-1\",\"daemon-grow-2\",\"daemon-grow-3\",\"daemon-grow-4\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"notes.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"notes.txt\",\"text\":\"grow being 3.2x hacktime and weaken 4x hacktime\\r\\ngrow can not safely be distributed, cause:\\r\\n    multiple instances cant finish at the same time, effect is calculated at the end, \\r\\n    thus if its spread across multiple instances they'll increase security for one another\\r\\n\\r\\n\\r\\n\\r\\nhaack skill level up:\\r\\n\\r\\ncheck if batch causes level up\\r\\nif it causes level up, change WGH threads accordingly\\r\\n\\r\\n\\r\\n\\r\\nweakTime: 44333.426612450436\\r\\nConfig.LOOP_SAFETY_MARGIN_MS: 10000\\r\\n4 * DELAY_MARGIN_MS: 1600\\r\\nall: 21.458391632781524\\r\\nnum_batches: 21\\r\\n\\r\\nweakTime: 44333.426612450436\\r\\nConfig.LOOP_SAFETY_MARGIN_MS: 10000\\r\\n4 * DELAY_MARGIN_MS: 1600\\r\\nall: 21.458391632781524\\r\\nnum_batches: 21\\r\\n\\r\\nweakTime: 44210.106927853914\\r\\nConfig.LOOP_SAFETY_MARGIN_MS: 10000\\r\\n4 * DELAY_MARGIN_MS: 1600\\r\\nall: 21.381316829908698\\r\\nnum_batches: 21\\r\\n\\r\\nweakTime: 44148.70400156523\\r\\nConfig.LOOP_SAFETY_MARGIN_MS: 10000\\r\\n4 * DELAY_MARGIN_MS: 1600\\r\\nall: 21.34294000097827\\r\\nnum_batches: 21\"}}],[\"timelog.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"timelog.txt\",\"text\":\"Time: 96.45164398458292ms\\r\\nTime: 171.8585117433904ms\\r\\nTime: 119.57338754956436ms\\r\\nTime: 97.57338754956436ms\\r\\nTime: 96.89307214608561ms\\r\\nTime: 108.29599843476899ms\\r\\nTime: 100.591577386469ms\\r\\nTime: 114.48564159480156ms\\r\\nTime: 91.76981913522468ms\\r\\nTime: 133.16132076175563ms\\r\\nTime: 90.44659185857017ms\\r\\nTime: 123.3417268491612ms\\r\\n------------------------------- NEWTime: 208756ms\\nTime: 208172ms\\nTime: 207678ms\\nTime: 207414ms\\nTime: 207003ms\\nTime: 206624ms\\nTime: 206179ms\\nTime: 206086ms\\nTime: 205760ms\\nTime: 205464ms\\nTime: 205054ms\\nTime: 204927ms\\nTime: 204547ms\\nTime: 204329ms\\nTime: 204340ms\\nTime: 203912ms\\nTime: 203519ms\\nTime: 203512ms\\nTime: 203284ms\\nTime: 202982ms\\nTime: 202545ms\\nTime: 202196ms\\nTime: 202295ms\\nTime: 201761ms\\nTime: 201751ms\\nTime: 201431ms\\nTime: 201701ms\\nTime: 201044ms\\nTime: 201115ms\\nTime: 200746ms\\nTime: 200605ms\\nTime: 200240ms\\nTime: 200138ms\\nTime: 199968ms\\nTime: 199703ms\\nTime: 201996ms\\nTime: 201846ms\\nTime: 200143ms\\nTime: 199122ms\\nTime: 198831ms\\nTime: 198649ms\\nTime: 198603ms\\nTime: 198419ms\\nTime: 198105ms\\nTime: 197898ms\\nTime: 197796ms\\nTime: 197750ms\\nTime: 197590ms\\nTime: 197287ms\\nTime: 197246ms\\nTime: 197135ms\\nTime: 196842ms\\nTime: 202201ms\\nTime: 202361ms\\nTime: 202038ms\\nTime: 201721ms\\nTime: 201745ms\\nTime: 201577ms\\nTime: 201244ms\\nTime: 201391ms\\nTime: 199656ms\\nTime: 201139ms\\nTime: 197215ms\\nTime: 195451ms\\nTime: 195308ms\\nTime: 195203ms\\nTime: 195171ms\\nTime: 194914ms\\nTime: 194831ms\\nTime: 194797ms\\nTime: 194696ms\\nTime: 194568ms\\nTime: 194634ms\\nTime: 194319ms\\nTime: 194124ms\\n\"}}],[\"Stock/market.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"Stock/market.txt\",\"text\":\"[{\\\"symbol\\\":\\\"ECP\\\",\\\"organization\\\":\\\"ECorp\\\",\\\"observedMinPrice\\\":21056.54425713557,\\\"observedMaxPrice\\\":31300.154855350887,\\\"buyPrice\\\":0},{\\\"symbol\\\":\\\"MGCP\\\",\\\"organization\\\":\\\"MegaCorp\\\",\\\"observedMinPrice\\\":36208.378640091905,\\\"observedMaxPrice\\\":68384.31041899162,\\\"buyPrice\\\":68067.56275267543},{\\\"symbol\\\":\\\"BLD\\\",\\\"organization\\\":\\\"Blade Industries\\\",\\\"observedMinPrice\\\":6157.770326693095,\\\"observedMaxPrice\\\":8757.44413965857,\\\"buyPrice\\\":8070.268375260783},{\\\"symbol\\\":\\\"CLRK\\\",\\\"organization\\\":\\\"Clarke Incorporated\\\",\\\"observedMinPrice\\\":16004.135819475936,\\\"observedMaxPrice\\\":23236.59531977926,\\\"buyPrice\\\":17190.417746548923},{\\\"symbol\\\":\\\"OMTK\\\",\\\"organization\\\":\\\"OmniTek Incorporated\\\",\\\"observedMinPrice\\\":26250.798318329773,\\\"observedMaxPrice\\\":31626.761941113662,\\\"buyPrice\\\":30867.27205630958},{\\\"symbol\\\":\\\"FSIG\\\",\\\"organization\\\":\\\"Four Sigma\\\",\\\"observedMinPrice\\\":39261.16972846246,\\\"observedMaxPrice\\\":65672.94590554769},{\\\"symbol\\\":\\\"KGI\\\",\\\"organization\\\":\\\"KuaiGong International\\\",\\\"observedMinPrice\\\":31127.60156713884,\\\"observedMaxPrice\\\":57000.398374711636},{\\\"symbol\\\":\\\"FLCM\\\",\\\"organization\\\":\\\"Fulcrum Technologies\\\",\\\"observedMinPrice\\\":5684.619863296137,\\\"observedMaxPrice\\\":11805.246361211355,\\\"buyPrice\\\":6167.057193293968},{\\\"symbol\\\":\\\"STM\\\",\\\"organization\\\":\\\"Storm Technologies\\\",\\\"observedMinPrice\\\":18174.050734265227,\\\"observedMaxPrice\\\":24292.709065607607},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"organization\\\":\\\"DefComm\\\",\\\"observedMinPrice\\\":7393.987539218866,\\\"observedMaxPrice\\\":10393.46859886269},{\\\"symbol\\\":\\\"HLS\\\",\\\"organization\\\":\\\"Helios Labs\\\",\\\"observedMinPrice\\\":11176.107238376057,\\\"observedMaxPrice\\\":17268.80002160152,\\\"buyPrice\\\":11766.633977796677},{\\\"symbol\\\":\\\"VITA\\\",\\\"organization\\\":\\\"VitaLife\\\",\\\"observedMinPrice\\\":6735.6155149017795,\\\"observedMaxPrice\\\":8408.330827357204},{\\\"symbol\\\":\\\"ICRS\\\",\\\"organization\\\":\\\"Icarus Microsystems\\\",\\\"observedMinPrice\\\":9264.15422129687,\\\"observedMaxPrice\\\":11920.362608412768},{\\\"symbol\\\":\\\"UNV\\\",\\\"organization\\\":\\\"Universal Energy\\\",\\\"observedMinPrice\\\":15178.736034513213,\\\"observedMaxPrice\\\":17874.026819545485},{\\\"symbol\\\":\\\"AERO\\\",\\\"organization\\\":\\\"AeroCorp\\\",\\\"observedMinPrice\\\":8341.675308688578,\\\"observedMaxPrice\\\":10521.614692097919},{\\\"symbol\\\":\\\"OMN\\\",\\\"organization\\\":\\\"Omnia Cybersystems\\\",\\\"observedMinPrice\\\":14256.451463114265,\\\"observedMaxPrice\\\":17396.934684075633},{\\\"symbol\\\":\\\"SLRS\\\",\\\"organization\\\":\\\"Solaris Space Systems\\\",\\\"observedMinPrice\\\":24082.70739966874,\\\"observedMaxPrice\\\":33138.4372261899},{\\\"symbol\\\":\\\"GPH\\\",\\\"organization\\\":\\\"Global Pharmaceuticals\\\",\\\"observedMinPrice\\\":15560.417037476358,\\\"observedMaxPrice\\\":22111.339924218173,\\\"buyPrice\\\":22063.423894934178},{\\\"symbol\\\":\\\"NVMD\\\",\\\"organization\\\":\\\"Nova Medical\\\",\\\"observedMinPrice\\\":29202.833886799355,\\\"observedMaxPrice\\\":36966.35982302478},{\\\"symbol\\\":\\\"WDS\\\",\\\"organization\\\":\\\"Watchdog Security\\\",\\\"observedMinPrice\\\":277.44588431368413,\\\"observedMaxPrice\\\":1272.507288413082},{\\\"symbol\\\":\\\"LXO\\\",\\\"organization\\\":\\\"LexoCorp\\\",\\\"observedMinPrice\\\":3540.223539051665,\\\"observedMaxPrice\\\":4846.132690267142},{\\\"symbol\\\":\\\"RHOC\\\",\\\"organization\\\":\\\"Rho Construction\\\",\\\"observedMinPrice\\\":4874.545833836381,\\\"observedMaxPrice\\\":5393.663796657159},{\\\"symbol\\\":\\\"APHE\\\",\\\"organization\\\":\\\"Alpha Enterprises\\\",\\\"observedMinPrice\\\":49809.68315020892,\\\"observedMaxPrice\\\":190840.2165982082},{\\\"symbol\\\":\\\"SYSC\\\",\\\"organization\\\":\\\"SysCore Securities\\\",\\\"observedMinPrice\\\":1762.042899670278,\\\"observedMaxPrice\\\":3030.3616165200624},{\\\"symbol\\\":\\\"CTK\\\",\\\"organization\\\":\\\"CompuTek\\\",\\\"observedMinPrice\\\":2354.6573039849304,\\\"observedMaxPrice\\\":2843.6559299873625},{\\\"symbol\\\":\\\"NTLK\\\",\\\"organization\\\":\\\"NetLink Technologies\\\",\\\"observedMinPrice\\\":297.6688347143156,\\\"observedMaxPrice\\\":2455.49409961427},{\\\"symbol\\\":\\\"OMGA\\\",\\\"organization\\\":\\\"Omega Software\\\",\\\"observedMinPrice\\\":2167.938725260807,\\\"observedMaxPrice\\\":3309.9140275890704},{\\\"symbol\\\":\\\"FNS\\\",\\\"organization\\\":\\\"FoodNStuff\\\",\\\"observedMinPrice\\\":5495.23313381285,\\\"observedMaxPrice\\\":7032.333380790783},{\\\"symbol\\\":\\\"JGN\\\",\\\"organization\\\":\\\"Joe's Guns\\\",\\\"observedMinPrice\\\":2846.9604378775293,\\\"observedMaxPrice\\\":7437.207870111056},{\\\"symbol\\\":\\\"SGC\\\",\\\"organization\\\":\\\"Sigma Cosmetics\\\",\\\"observedMinPrice\\\":266.55572372393505,\\\"observedMaxPrice\\\":478.3970554019029},{\\\"symbol\\\":\\\"CTYS\\\",\\\"organization\\\":\\\"Catalyst Ventures\\\",\\\"observedMinPrice\\\":1303.3038154259966,\\\"observedMaxPrice\\\":3880.7431041337286},{\\\"symbol\\\":\\\"MDYN\\\",\\\"organization\\\":\\\"Microdyne Technologies\\\",\\\"observedMinPrice\\\":14153.406730041404,\\\"observedMaxPrice\\\":21873.09753294475},{\\\"symbol\\\":\\\"TITN\\\",\\\"organization\\\":\\\"Titan Laboratories\\\",\\\"observedMinPrice\\\":22813.979259512267,\\\"observedMaxPrice\\\":27166.0088270365}]\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"hackingDeamon.js\",\"offlineExpGained\":251933815.09166384,\"offlineMoneyMade\":165621949219952.88,\"offlineRunningTime\":2447.295,\"onlineExpGained\":8540343052.4212,\"onlineMoneyMade\":1932176904549707,\"onlineRunningTime\":21686.010000043818,\"ramUsage\":45.1,\"server\":\"home\",\"scriptKey\":\"hackingDeamon.js*[]\",\"title\":\"hackingDeamon.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"serverStats.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":2447.2960000000003,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21543.4100000433,\"ramUsage\":7.7,\"server\":\"home\",\"scriptKey\":\"serverStats.js*[]\",\"title\":\"serverStats.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"Stock/manager.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.40999999999715,\"ramUsage\":20.7,\"server\":\"home\",\"scriptKey\":\"Stock/manager.js*[]\",\"title\":\"Stock/manager.js \",\"threads\":1,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"83.3.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":60370802734,\"moneyMax\":1509270068350,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1297,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"16.6.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":42424744779,\"moneyMax\":1060618619475,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1147,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"76.2.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":15643957887,\"moneyMax\":391098947175,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1024,\"serverGrowth\":64,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"58.1.7.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":12020731572,\"moneyMax\":300518289300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1083,\"serverGrowth\":69,\"runningScripts\":[]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"70.1.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":25122891533,\"moneyMax\":628072288325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1015,\"serverGrowth\":72,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"70.3.1.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":24140880008,\"moneyMax\":603522000200,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1048,\"serverGrowth\":49,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-832553.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[115,133,159,189,180,106,68,91,149,200,129,51,171,80,153],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-860889.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[2,6,39,112,155,156,182,19,117,33,128,172,119,19,142,41,99,133,103,187,150,76,47,193,193],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"3.2.6.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"helios\",\"blade\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":19506496988,\"moneyMax\":487662424700,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":980,\"serverGrowth\":95,\"runningScripts\":[]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"29.9.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"stormtech\",\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":16289258837,\"moneyMax\":407231470925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1228,\"serverGrowth\":82,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"84.9.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"stormtech\",\"nwo\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":97,\"minDifficulty\":32,\"moneyAvailable\":27656828774,\"moneyMax\":691420719350,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1144,\"serverGrowth\":92,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"5.2.9.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":1600227535,\"moneyMax\":40005688375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":995,\"serverGrowth\":81,\"runningScripts\":[]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"20.3.0.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1576,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-637216-BitRunners.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[10,[42,5,38,87]],\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"68.7.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"run4theh111z\",\"4sigma\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":1101542384,\"moneyMax\":27538559600,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":947,\"serverGrowth\":89,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"21.5.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\",\"infocomm\",\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":941885233,\"moneyMax\":23547130825,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":994,\"serverGrowth\":70,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"9.2.4.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"defcomm\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":730605175,\"moneyMax\":18265129375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":885,\"serverGrowth\":63,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"69.9.5.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":719545238,\"moneyMax\":17988630950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":804,\"serverGrowth\":74,\"runningScripts\":[]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"93.0.7.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":787145269,\"moneyMax\":19678631725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":797,\"serverGrowth\":67,\"runningScripts\":[]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"4.0.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":979363339,\"moneyMax\":24484083475,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":896,\"serverGrowth\":94,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"57.0.7.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"univ-energy\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"univ-energy\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"univ-energy\"}}]]},\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":1120614047,\"moneyMax\":28015351175,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":854,\"serverGrowth\":89,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"univ-energy\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"37.2.5.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":838528617,\"moneyMax\":20963215425,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":863,\"serverGrowth\":80,\"runningScripts\":[]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-805437-BitRunners.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":165125745,\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"28.1.4.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":673162152,\"moneyMax\":16829053800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":808,\"serverGrowth\":84,\"runningScripts\":[]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"65.8.5.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"defcomm\",\"microdyne\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":820895580,\"moneyMax\":20522389500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":875,\"serverGrowth\":76,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"74.3.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"lexo-corp\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":813382773,\"moneyMax\":20334569325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":856,\"serverGrowth\":82,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"43.2.0.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1003821595,\"moneyMax\":25095539875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":857,\"serverGrowth\":55,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"45.1.2.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"galactic-cyber\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":910531709,\"moneyMax\":22763292725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":947,\"serverGrowth\":70,\"runningScripts\":[]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"84.8.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"zb-def\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"zb-def\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"zb-def\"}}]]},\"serversOnNetwork\":[\"solaris\",\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":915226324,\"moneyMax\":22880658100,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":786,\"serverGrowth\":70,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"16.1.0.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"applied-energetics\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"applied-energetics\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"applied-energetics\"}}]]},\"serversOnNetwork\":[\"taiyang-digital\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":806717419,\"moneyMax\":20167935475,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":787,\"serverGrowth\":72,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"93.6.0.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnia\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":811557940,\"moneyMax\":20288948500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":763,\"serverGrowth\":79,\"runningScripts\":[]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"90.0.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"snap-fitness\",\"defcomm\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":1413336787,\"moneyMax\":35333419675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":889,\"serverGrowth\":58,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"56.0.6.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"global-pharm\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"global-pharm\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"global-pharm\"}}]]},\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":25,\"minDifficulty\":25,\"moneyAvailable\":42891725925,\"moneyMax\":42891725925,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":798,\"serverGrowth\":84,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.20999999999993,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.20999999999993,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"93.6.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"nova-med\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"nova-med\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"nova-med\"}}]]},\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":1230162702,\"moneyMax\":30754067550,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":820,\"serverGrowth\":70,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"77.8.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":1455762832,\"moneyMax\":36394070800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":814,\"serverGrowth\":71,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"2.2.5.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"unitalife\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"unitalife\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"unitalife\"}}]]},\"serversOnNetwork\":[\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":1088066177,\"moneyMax\":27201654425,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":821,\"serverGrowth\":75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"unitalife\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"89.0.5.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"lexo-corp\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"lexo-corp\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"lexo-corp\"}}]]},\"serversOnNetwork\":[\"syscore\",\"galactic-cyber\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":762106444,\"moneyMax\":19052661100,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":742,\"serverGrowth\":65,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"15.3.6.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"rho-construction\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"rho-construction\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"rho-construction\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":15.084,\"minDifficulty\":15,\"moneyAvailable\":1218257093.177658,\"moneyMax\":14931059800,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":517,\"serverGrowth\":48,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.20999999999993,\"ramUsage\":1.75,\"server\":\"rho-construction\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.00999999999993,\"ramUsage\":1.75,\"server\":\"rho-construction\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":22,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.00999999999993,\"ramUsage\":1.75,\"server\":\"rho-construction\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"65.4.0.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"alpha-ent\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"alpha-ent\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"summit-uni\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":54,\"hackDifficulty\":54,\"minDifficulty\":18,\"moneyAvailable\":715952213,\"moneyMax\":17898805325,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":529,\"serverGrowth\":54,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"37.1.6.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"aevum-police\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"aevum-police\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"aevum-police\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":335630868,\"moneyMax\":8390771700,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":426,\"serverGrowth\":37,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"aevum-police\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":18,\"temporary\":false}}]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"66.9.2.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"rothman-uni\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"rothman-uni\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"rothman-uni\"}}]]},\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":248249644,\"moneyMax\":6206241100,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":392,\"serverGrowth\":35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"12.9.8.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":1050079223,\"moneyMax\":26251980575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":767,\"serverGrowth\":81,\"runningScripts\":[]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-320000.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(())))a()a(aa))\",\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"91.6.0.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"summit-uni\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"summit-uni\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"summit-uni\"}}]]},\"serversOnNetwork\":[\"crush-fitness\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":202021719,\"moneyMax\":5050542975,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":451,\"serverGrowth\":52,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.80999999999993,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"79.8.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"syscore\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"syscore\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"syscore\"}}]]},\"serversOnNetwork\":[\"avmnite-02h\",\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":428081245,\"moneyMax\":10702031125,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":576,\"serverGrowth\":67,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"5.5.2.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"catalyst\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"catalyst\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"catalyst\"}}]]},\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":491386133,\"moneyMax\":12284653325,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":448,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"78.5.8.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"the-hub\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"the-hub\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"the-hub\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":36,\"hackDifficulty\":12.07,\"minDifficulty\":12,\"moneyAvailable\":440268578.17420626,\"moneyMax\":4487211550,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":320,\"serverGrowth\":51,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.009999999999927,\"ramUsage\":1.75,\"server\":\"the-hub\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":18,\"temporary\":false}}]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-547381.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[4,5],[9,19],[5,12],[6,15],[25,34],[8,12],[1,7],[1,3]],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":true,\"ip\":\"21.1.6.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"computek\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"computek\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"computek\"}}]]},\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":247504647,\"moneyMax\":6187616175,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":348,\"serverGrowth\":53,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"26.7.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"netlink\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"netlink\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"netlink\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":420,\"serverGrowth\":74,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"netlink\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"4.7.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"johnson-ortho\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"johnson-ortho\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"johnson-ortho\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":77442259,\"moneyMax\":1936056475,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":266,\"serverGrowth\":58,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"13.0.7.1\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"n00dles\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"n00dles\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"n00dles\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":70000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\"n00dles\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"16.7.9.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"foodnstuff\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"foodnstuff\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"foodnstuff\"}}]]},\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":2000000,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"44.5.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"sigma-cosmetics\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"sigma-cosmetics\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"sigma-cosmetics\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3.052,\"minDifficulty\":3,\"moneyAvailable\":5241994.78228642,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"31.3.8.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"joesguns\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"joesguns\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"joesguns\"}}]]},\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"joesguns\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"99.2.5.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"zer0\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"zer0\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"zer0\"}}]]},\"serversOnNetwork\":[\"harakiri-sushi\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.009999999999927,\"ramUsage\":1.75,\"server\":\"zer0\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.809999999999928,\"ramUsage\":1.75,\"server\":\"zer0\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":10,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.809999999999928,\"ramUsage\":1.75,\"server\":\"zer0\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"39.7.0.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"nectar-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"nectar-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"nectar-net\"}}]]},\"serversOnNetwork\":[\"joesguns\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"nectar-net\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"47.5.4.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"neo-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"neo-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"neo-net\"}}]]},\"serversOnNetwork\":[\"max-hardware\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.75,\"server\":\"neo-net\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":18,\"temporary\":false}}]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"59.0.2.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"silver-helix\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"silver-helix\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.00999999999993,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":23,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.80999999999993,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.80999999999993,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"19.4.1.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"hong-fang-tea\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"hong-fang-tea\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"hong-fang-tea\"}}]]},\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":3000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-214977-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[200,176,141,185,133,86,168,57,182,98,13,184],\"reward\":{\"type\":0,\"name\":\"CyberSec\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"98.7.2.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"harakiri-sushi\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"harakiri-sushi\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"harakiri-sushi\"}}]]},\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":4000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"28.1.2.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"phantasy\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"phantasy\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"phantasy\"}}]]},\"serversOnNetwork\":[\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.009999999999927,\"ramUsage\":1.75,\"server\":\"phantasy\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":18,\"temporary\":false}}]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"81.1.2.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"max-hardware\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"max-hardware\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"max-hardware\"}}]]},\"serversOnNetwork\":[\"foodnstuff\",\"neo-net\",\"phantasy\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":10000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":14,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-478788.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[9,12],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"52.5.3.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"omega-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"omega-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"omega-net\"}}]]},\"serversOnNetwork\":[\"max-hardware\",\"the-hub\",\"computek\",\"netlink\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":32,\"hackDifficulty\":32,\"minDifficulty\":11,\"moneyAvailable\":67378798,\"moneyMax\":1684469950,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":200,\"serverGrowth\":37,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.75,\"server\":\"omega-net\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.009999999999927,\"ramUsage\":1.75,\"server\":\"omega-net\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.009999999999927,\"ramUsage\":1.75,\"server\":\"omega-net\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"24.5.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"crush-fitness\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"crush-fitness\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"crush-fitness\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":43,\"minDifficulty\":14,\"moneyAvailable\":54618386,\"moneyMax\":1365459650,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":232,\"serverGrowth\":27,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"15.4.7.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"iron-gym\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"iron-gym\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":20000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":18,\"temporary\":false}}]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"0.4.7.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"millenium-fitness\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"millenium-fitness\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":497,\"serverGrowth\":44,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.809999999999928,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"79.2.0.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":974,\"serverGrowth\":60,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"77.0.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"snap-fitness\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"snap-fitness\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"snap-fitness\"}}]]},\"serversOnNetwork\":[\"alpha-ent\",\"deltaone\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":42,\"hackDifficulty\":42,\"minDifficulty\":14,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":746,\"serverGrowth\":49,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"9.1.4.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"run4theh111z\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"run4theh111z\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"run4theh111z\"}}]]},\"serversOnNetwork\":[\"infocomm\",\"stormtech\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":550,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":32,\"temporary\":false}}]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"60.1.2.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"I.I.I.I\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"I.I.I.I\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"I.I.I.I\"}}]]},\"serversOnNetwork\":[\"netlink\",\"rho-construction\",\"aevum-police\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":356,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.7,\"server\":\"I.I.I.I\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.809999999999928,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":32,\"temporary\":false}}]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"72.6.2.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"avmnite-02h\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"avmnite-02h\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"neo-net\",\"syscore\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":203,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":18,\"temporary\":false}}]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"47.6.8.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\".\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\".\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\".\"}}]]},\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":533,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\".\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":9,\"temporary\":false}}]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"49.8.1.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"CSEC\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"CSEC\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"CSEC\"}}]]},\"serversOnNetwork\":[\"hong-fang-tea\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":53,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\"CSEC\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":4,\"temporary\":false}}]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"42.4.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"47.9.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"35.7.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"daemon-grow\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-grow\",\"httpPortOpen\":true,\"ip\":\"58.0.2.7\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-grow\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-grow\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-grow\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.210000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.8100000000000014,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.210000000000001,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.8100000000000005,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.21,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.21,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.81,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"daemon-grow\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}}]}},\"daemon-hack\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-hack\",\"httpPortOpen\":true,\"ip\":\"93.5.8.1\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-hack\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-hack\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-hack\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.009999999999927,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.809999999999928,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.20999999999993,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.00999999999993,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.80999999999993,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.409999999999933,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.009999999999934,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.809999999999935,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.409999999999936,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.009999999999938,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.80999999999994,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.00999999999994,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.809999999999942,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.409999999999943,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.009999999999945,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.809999999999945,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999995,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.80999999999995,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.40999999999995,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.009999999999952,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.809999999999953,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.409999999999954,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.009999999999955,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.809999999999956,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.409999999999958,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.00999999999996,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.80999999999996,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.009999999999962,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.809999999999963,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.409999999999965,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.009999999999966,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.809999999999967,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.409999999999968,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.00999999999997,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.80999999999997,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.40999999999997,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.009999999999973,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.809999999999974,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.409999999999975,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.009999999999977,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.809999999999977,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.409999999999979,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.00999999999998,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.809999999999981,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.409999999999982,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.009999999999984,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.809999999999985,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.409999999999986,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.009999999999987,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.809999999999988,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.40999999999999,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.009999999999991,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.009999999999994,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.809999999999995,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.409999999999997,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.009999999999998,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.809999999999999,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.41,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.810000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.410000000000004,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.810000000000005,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.410000000000005,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.810000000000004,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.410000000000004,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.810000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.210000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.810000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.210000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.8100000000000014,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.210000000000001,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.8100000000000005,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.21,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.21,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.81,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",76068.34493809077],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.7,\"server\":\"daemon-hack\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\",76068.34493809077]\",\"title\":\"hack.js global-pharm 76068.34493809077\",\"threads\":42,\"temporary\":false}}]}},\"daemon-weak\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-weak\",\"httpPortOpen\":true,\"ip\":\"89.1.3.6\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-weak\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-weak\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-weak\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.409999999999933,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.009999999999934,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.809999999999935,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.409999999999936,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.009999999999938,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.80999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.00999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.809999999999942,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.409999999999943,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.009999999999945,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.809999999999945,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.80999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.40999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.009999999999952,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.809999999999953,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.409999999999954,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.009999999999955,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.809999999999956,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.409999999999958,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.00999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.80999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.009999999999962,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.809999999999963,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.409999999999965,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.009999999999966,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.809999999999967,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.409999999999968,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.00999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.80999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.40999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.009999999999973,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.809999999999974,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.409999999999975,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.009999999999977,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.809999999999977,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.409999999999979,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.00999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.809999999999981,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.409999999999982,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.009999999999984,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.809999999999985,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.409999999999986,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.009999999999987,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.809999999999988,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.40999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.009999999999991,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.009999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.809999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.409999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.009999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.809999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.41,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.810000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.410000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.810000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.410000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.810000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.410000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.810000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.210000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.810000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.210000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.8100000000000014,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.210000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.8100000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.21,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.21,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.81,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",100],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",100]\",\"title\":\"weaken.js global-pharm 100\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.409999999999933,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.009999999999934,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.809999999999935,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.409999999999936,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.009999999999938,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.80999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.00999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.809999999999942,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.409999999999943,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.009999999999945,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.809999999999945,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.80999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.40999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.009999999999952,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.809999999999953,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.409999999999954,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.009999999999955,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.809999999999956,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.409999999999958,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.00999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.80999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.009999999999962,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.809999999999963,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.409999999999965,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.009999999999966,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.809999999999967,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.409999999999968,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.00999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.80999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.40999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.009999999999973,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.809999999999974,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.409999999999975,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.009999999999977,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.809999999999977,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.409999999999979,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.00999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.809999999999981,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.409999999999982,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.009999999999984,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.809999999999985,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.409999999999986,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.009999999999987,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.809999999999988,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.40999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.009999999999991,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.009999999999994,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.809999999999995,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.409999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.009999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.809999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.41,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.810000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.410000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.810000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.410000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.810000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.410000000000004,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.810000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.210000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.810000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.210000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.8100000000000014,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.210000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.8100000000000005,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.21,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.21,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.81,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.21000000000000002,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",0],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"ramUsage\":1.75,\"server\":\"daemon-weak\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\",0]\",\"title\":\"weaken.js global-pharm 0\",\"threads\":2,\"temporary\":false}}]}},\"daemon-grow-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-grow-0\",\"httpPortOpen\":true,\"ip\":\"61.5.1.9\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-grow-0\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-grow-0\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-grow-0\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"daemon-grow-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-grow-1\",\"httpPortOpen\":true,\"ip\":\"52.6.9.7\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-grow-1\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-grow-1\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-grow-1\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"daemon-grow-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-grow-2\",\"httpPortOpen\":true,\"ip\":\"64.4.9.2\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-grow-2\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-grow-2\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-grow-2\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"daemon-grow-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-grow-3\",\"httpPortOpen\":true,\"ip\":\"82.5.8.0\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-grow-3\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-grow-3\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-grow-3\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.009999999999923,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.809999999999924,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.609999999999925,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.409999999999926,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.009999999999927,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.809999999999928,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.60999999999993,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.40999999999993,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.20999999999993,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.00999999999993,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.80999999999993,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.609999999999932,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.409999999999933,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.009999999999934,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.809999999999935,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.609999999999935,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.409999999999936,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.009999999999938,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.80999999999994,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.60999999999994,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.00999999999994,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.809999999999942,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.609999999999943,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.409999999999943,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.009999999999945,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.809999999999945,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.609999999999946,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.409999999999947,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999995,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.80999999999995,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.60999999999995,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.40999999999995,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.009999999999952,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.809999999999953,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.409999999999954,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.009999999999955,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.809999999999956,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.609999999999957,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.409999999999958,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.00999999999996,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.80999999999996,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.60999999999996,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.40999999999996,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.009999999999962,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.809999999999963,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.609999999999964,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.409999999999965,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.009999999999966,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.809999999999967,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.609999999999967,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.409999999999968,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.00999999999997,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.80999999999997,\"ramUsage\":1.75,\"server\":\"daemon-grow-3\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}}]}},\"daemon-grow-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"daemon-grow-4\",\"httpPortOpen\":true,\"ip\":\"37.7.1.9\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[HACK] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[HACK] Second argument must be a number\\\");\\n  await ns.hack(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhY2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0hBQ0tdIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbSEFDS10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5oYWNrKG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"hack.js\",\"server\":\"daemon-grow-4\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[GROW] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[GROW] Second argument must be a number\\\");\\n  await ns.grow(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTlMgfSBmcm9tIFwiQG5zXCI7XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYWluKG5zOiBOUykge1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzBdICE9PSBcInN0cmluZ1wiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW0dST1ddIEZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMV0gIT09IFwibnVtYmVyXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbR1JPV10gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy5ncm93KG5zLmFyZ3NbMF0sIHsgYWRkaXRpb25hbE1zZWM6IG5zLmFyZ3NbMV0gfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFDQSxzQkFBc0IsS0FBSyxJQUFRO0FBQy9CLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUsd0NBQXdDO0FBQ2hHLE1BQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNO0FBQVUsVUFBTSxJQUFJLFVBQVUseUNBQXlDO0FBQ2pHLFFBQU0sR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsRUFBRSxDQUFDO0FBQzVEOyIsIm5hbWVzIjpbXX0=\",\"filename\":\"grow.js\",\"server\":\"daemon-grow-4\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  if (typeof ns.args[0] !== \\\"string\\\")\\n    throw new TypeError(\\\"[WEAKEN] First argument must be a string\\\");\\n  if (typeof ns.args[1] !== \\\"number\\\")\\n    throw new TypeError(\\\"[WEAKEN] Second argument must be a number\\\");\\n  await ns.weaken(ns.args[0], { additionalMsec: ns.args[1] });\\n}\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYWtlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOUyB9IGZyb20gXCJAbnNcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1haW4obnM6IE5TKSB7XHJcbiAgICBpZiAodHlwZW9mIG5zLmFyZ3NbMF0gIT09IFwic3RyaW5nXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJbV0VBS0VOXSBGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xyXG4gICAgaWYgKHR5cGVvZiBucy5hcmdzWzFdICE9PSBcIm51bWJlclwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiW1dFQUtFTl0gU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7XHJcbiAgICBhd2FpdCBucy53ZWFrZW4obnMuYXJnc1swXSwgeyBhZGRpdGlvbmFsTXNlYzogbnMuYXJnc1sxXSB9KTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUNBLHNCQUFzQixLQUFLLElBQVE7QUFDL0IsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwwQ0FBMEM7QUFDbEcsTUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU07QUFBVSxVQUFNLElBQUksVUFBVSwyQ0FBMkM7QUFDbkcsUUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDOUQ7IiwibmFtZXMiOltdfQ==\",\"filename\":\"weaken.js\",\"server\":\"daemon-grow-4\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.60999999999997,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.40999999999997,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.009999999999973,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.809999999999974,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.609999999999975,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.409999999999975,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.009999999999977,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.809999999999977,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.609999999999978,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.409999999999979,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.00999999999998,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.809999999999981,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.609999999999982,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.409999999999982,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.009999999999984,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.809999999999985,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.609999999999985,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.409999999999986,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.009999999999987,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.809999999999988,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.40999999999999,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.009999999999991,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.809999999999992,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.609999999999992,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.409999999999993,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.009999999999994,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.809999999999995,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.609999999999996,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.409999999999997,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.009999999999998,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.809999999999999,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.61,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.41,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.810000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.610000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.410000000000004,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.210000000000004,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.810000000000005,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.410000000000005,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.810000000000004,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.410000000000004,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.2100000000000035,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.810000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.210000000000003,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.810000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",20348.225316824202],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"ramUsage\":1.75,\"server\":\"daemon-grow-4\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\",20348.225316824202]\",\"title\":\"grow.js global-pharm 20348.225316824202\",\"threads\":561,\"temporary\":false}}]}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.0912,\"playerReputation\":0}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"favor\":1,\"discovery\":\"known\",\"playerReputation\":1020908.9564494425}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":228.2129,\"discovery\":\"known\",\"playerReputation\":574483.2205827121}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"favor\":99.63929999999999,\"discovery\":\"known\",\"playerReputation\":349226.3566308768}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"favor\":167.9907,\"discovery\":\"known\",\"playerReputation\":468520.5002074992}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"favor\":39.0137,\"discovery\":\"known\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"favor\":65.6055,\"discovery\":\"known\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"favor\":9.4742,\"discovery\":\"known\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"favor\":9.4732,\"discovery\":\"known\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"favor\":110.8059,\"discovery\":\"known\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"favor\":6.8965,\"discovery\":\"known\",\"playerReputation\":40267.07915443291}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"favor\":2.9654,\"discovery\":\"known\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"favor\":10.3899,\"discovery\":\"known\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"favor\":126.6503,\"discovery\":\"known\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"favor\":112.1229,\"discovery\":\"known\",\"playerReputation\":371417.45224157494}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":21437.35762035155,\"lastPrice\":21333.56822357681,\"playerShares\":26900000,\"playerAvgPx\":33407.47173869351,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.49,\"b\":true,\"otlkMag\":19.146162586586392,\"otlkMagForecast\":70.6456069344704,\"cap\":267348695,\"spreadPerc\":0.3,\"shareTxForMovement\":56680,\"shareTxUntilMovement\":31990,\"totalShares\":134300000,\"maxShares\":26900000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":67728.9181618661,\"lastPrice\":68058.4243882299,\"playerShares\":555,\"playerAvgPx\":68176.19252139823,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.49,\"b\":true,\"otlkMag\":19.506289774938576,\"otlkMagForecast\":69.79160034507214,\"cap\":758211230,\"spreadPerc\":0.5,\"shareTxForMovement\":73708,\"shareTxUntilMovement\":73513,\"totalShares\":77300000,\"maxShares\":15500000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":8030.117786329138,\"lastPrice\":7973.906580880807,\"playerShares\":4730,\"playerAvgPx\":7862.314559907189,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":12.372711828922352,\"otlkMagForecast\":62.02929746239623,\"cap\":423005135,\"spreadPerc\":0.5,\"shareTxForMovement\":34978,\"shareTxUntilMovement\":30608,\"totalShares\":87300000,\"maxShares\":17500000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":17139.000744315977,\"lastPrice\":17256.41693733477,\"playerShares\":1909,\"playerAvgPx\":17363.413260143327,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":10.091518536185156,\"otlkMagForecast\":60.26717778802875,\"cap\":329731191,\"spreadPerc\":0.3,\"shareTxForMovement\":89682,\"shareTxUntilMovement\":88093,\"totalShares\":97300000,\"maxShares\":19500000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":30713.7035386165,\"lastPrice\":30513.748247319356,\"playerShares\":1090,\"playerAvgPx\":30496.849767248066,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":true,\"otlkMag\":10.668186270642604,\"otlkMagForecast\":60.107848755005264,\"cap\":280479730,\"spreadPerc\":0.5,\"shareTxForMovement\":76684,\"shareTxUntilMovement\":75914,\"totalShares\":54700000,\"maxShares\":10900000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":47764.08062434322,\"lastPrice\":47248.05645846004,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.1,\"b\":true,\"otlkMag\":7.763763915661933,\"otlkMagForecast\":58.46635063128561,\"cap\":1012544369,\"spreadPerc\":1,\"shareTxForMovement\":81200,\"shareTxUntilMovement\":81200,\"totalShares\":37000000,\"maxShares\":7400000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":31127.60156713884,\"lastPrice\":31381.02858783976,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.82,\"b\":false,\"otlkMag\":14.06845705254408,\"otlkMagForecast\":41.584146095488315,\"cap\":169488557,\"spreadPerc\":0.3,\"shareTxForMovement\":65560,\"shareTxUntilMovement\":65560,\"totalShares\":82100000,\"maxShares\":16400000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":6154.747697898172,\"lastPrice\":6082.280561177091,\"playerShares\":5564,\"playerAvgPx\":5941.660548814647,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.2,\"b\":true,\"otlkMag\":17.783376908333587,\"otlkMagForecast\":68.40617971333114,\"cap\":641607601,\"spreadPerc\":0.2,\"shareTxForMovement\":54468,\"shareTxUntilMovement\":49224,\"totalShares\":60600000,\"maxShares\":12100000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":22018.312505600403,\"lastPrice\":22193.203491162138,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":5.890661557387685,\"otlkMagForecast\":58.23955109332091,\"cap\":409359171,\"spreadPerc\":0.6,\"shareTxForMovement\":64764,\"shareTxUntilMovement\":64764,\"totalShares\":54700000,\"maxShares\":10900000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":8021.321003411813,\"lastPrice\":8074.680792720298,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":false,\"otlkMag\":8.779956106284962,\"otlkMagForecast\":41.64854160016363,\"cap\":172375554,\"spreadPerc\":0.9,\"shareTxForMovement\":106626,\"shareTxUntilMovement\":106626,\"totalShares\":101900000,\"maxShares\":20400000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":11673.24799384591,\"lastPrice\":11606.410627002566,\"playerShares\":2882,\"playerAvgPx\":11552.723393685057,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":true,\"otlkMag\":10.656176656050173,\"otlkMagForecast\":60.985822106215366,\"cap\":156968070,\"spreadPerc\":0.8,\"shareTxForMovement\":64389,\"shareTxUntilMovement\":61827,\"totalShares\":57900000,\"maxShares\":11600000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":8408.330827357204,\"lastPrice\":8348.649000861715,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":true,\"otlkMag\":8.563551085240968,\"otlkMagForecast\":56.939232345720825,\"cap\":90249664,\"spreadPerc\":0.6,\"shareTxForMovement\":49208,\"shareTxUntilMovement\":49208,\"totalShares\":104600000,\"maxShares\":20900000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":10451.223880876914,\"lastPrice\":10380.11161435392,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":7.982741199208353,\"otlkMagForecast\":59.12549914447985,\"cap\":39653453,\"spreadPerc\":0.9,\"shareTxForMovement\":41023,\"shareTxUntilMovement\":41023,\"totalShares\":60200000,\"maxShares\":12000000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":16731.935480873944,\"lastPrice\":16637.776112120857,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":true,\"otlkMag\":9.09214441963276,\"otlkMagForecast\":58.76917765975415,\"cap\":601158442,\"spreadPerc\":0.8,\"shareTxForMovement\":104088,\"shareTxUntilMovement\":104088,\"totalShares\":33200000,\"maxShares\":6600000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":8479.406859464976,\"lastPrice\":8432.521323831666,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":true,\"otlkMag\":5.490352045049149,\"otlkMagForecast\":55.41431793517492,\"cap\":53018684,\"spreadPerc\":0.9,\"shareTxForMovement\":59695,\"shareTxUntilMovement\":59695,\"totalShares\":79400000,\"maxShares\":15900000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":14712.431033056244,\"lastPrice\":14819.066262299504,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":3.979456728953079,\"otlkMagForecast\":53.10395474679705,\"cap\":208364758,\"spreadPerc\":0.9,\"shareTxForMovement\":67239,\"shareTxUntilMovement\":67239,\"totalShares\":46600000,\"maxShares\":9300000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":30040.932367513517,\"lastPrice\":30267.616126962876,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":true,\"otlkMag\":8.87833389147848,\"otlkMagForecast\":59.4989582709158,\"cap\":87929887,\"spreadPerc\":0.5,\"shareTxForMovement\":106163,\"shareTxUntilMovement\":106163,\"totalShares\":27200000,\"maxShares\":5400000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":21888.317356085492,\"lastPrice\":21750.108836444826,\"playerShares\":1724,\"playerAvgPx\":21628.639616450084,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":true,\"otlkMag\":12.442272605074741,\"otlkMagForecast\":61.78619832248291,\"cap\":200802171,\"spreadPerc\":0.8,\"shareTxForMovement\":62418,\"shareTxUntilMovement\":61054,\"totalShares\":36400000,\"maxShares\":7300000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":36596.333109430234,\"lastPrice\":36872.482806444226,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":5.164092403180472,\"otlkMagForecast\":47.097580373757665,\"cap\":318207306,\"spreadPerc\":0.8,\"shareTxForMovement\":52239,\"shareTxUntilMovement\":52239,\"totalShares\":38800000,\"maxShares\":7800000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":289.8909752034687,\"lastPrice\":297.25928822504346,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.56,\"b\":true,\"otlkMag\":9.25579127512453,\"otlkMagForecast\":59.32380757595209,\"cap\":45288263,\"spreadPerc\":0.5,\"shareTxForMovement\":23714,\"shareTxUntilMovement\":23714,\"totalShares\":80900000,\"maxShares\":16200000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":3928.2716116283327,\"lastPrice\":3880.4964263741344,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.24,\"b\":false,\"otlkMag\":1.8925685805751946,\"otlkMagForecast\":44.724477645179434,\"cap\":134356325,\"spreadPerc\":0.9,\"shareTxForMovement\":94898,\"shareTxUntilMovement\":94898,\"totalShares\":48500000,\"maxShares\":9700000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":5072.282527263233,\"lastPrice\":5045.730765073015,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.53,\"b\":true,\"otlkMag\":1.7237567321620166,\"otlkMagForecast\":51.297212499162086,\"cap\":63181673,\"spreadPerc\":0.3,\"shareTxForMovement\":84423,\"shareTxUntilMovement\":84423,\"totalShares\":26000000,\"maxShares\":5200000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":90339.73626130611,\"lastPrice\":88675.71109285527,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.89,\"b\":false,\"otlkMag\":13.281466424999007,\"otlkMagForecast\":36.67177210739413,\"cap\":53774661,\"spreadPerc\":0.9,\"shareTxForMovement\":30755,\"shareTxUntilMovement\":30755,\"totalShares\":28700000,\"maxShares\":5700000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":2825.8811397045674,\"lastPrice\":2781.9632046008146,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.59,\"b\":false,\"otlkMag\":5.655981172834373,\"otlkMagForecast\":43.589267675294145,\"cap\":17581519,\"spreadPerc\":0.6,\"shareTxForMovement\":34136,\"shareTxUntilMovement\":34136,\"totalShares\":45000000,\"maxShares\":9000000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":2696.936698168823,\"lastPrice\":2720.500579766126,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":false,\"otlkMag\":5.135875655868896,\"otlkMagForecast\":44.29011852324239,\"cap\":27852271,\"spreadPerc\":0.5,\"shareTxForMovement\":107082,\"shareTxUntilMovement\":107082,\"totalShares\":50400000,\"maxShares\":10100000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":1020.0626124810734,\"lastPrice\":985.2381342740351,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.56,\"b\":false,\"otlkMag\":5.328934246176047,\"otlkMagForecast\":43.70046916713308,\"cap\":19742081,\"spreadPerc\":1.5,\"shareTxForMovement\":45264,\"shareTxUntilMovement\":45264,\"totalShares\":32200000,\"maxShares\":6400000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":2167.938725260807,\"lastPrice\":2188.387345766567,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.95,\"b\":false,\"otlkMag\":5.188598926931864,\"otlkMagForecast\":48.386194787754114,\"cap\":10791114,\"spreadPerc\":1.1,\"shareTxForMovement\":62763,\"shareTxUntilMovement\":62763,\"totalShares\":10000000,\"maxShares\":2000000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":6257.3716569467915,\"lastPrice\":6304.588717792829,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":2.5417585397367786,\"otlkMagForecast\":45.853027045785396,\"cap\":69609631,\"spreadPerc\":0.7,\"shareTxForMovement\":143455,\"shareTxUntilMovement\":143455,\"totalShares\":13200000,\"maxShares\":2600000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":266.55572372393505,\"lastPrice\":272.0605644043955,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.08,\"b\":false,\"otlkMag\":5.9075081093190205,\"otlkMagForecast\":47.22048650128382,\"cap\":58823239,\"spreadPerc\":1.1,\"shareTxForMovement\":22839,\"shareTxUntilMovement\":22839,\"totalShares\":10100000,\"maxShares\":2000000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":5603.315750338415,\"lastPrice\":5766.3227009313105,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.93,\"b\":false,\"otlkMag\":5.4680083948116724,\"otlkMagForecast\":44.34306565854444,\"cap\":2052559,\"spreadPerc\":1.1,\"shareTxForMovement\":26563,\"shareTxUntilMovement\":26563,\"totalShares\":39200000,\"maxShares\":7800000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":1303.3038154259966,\"lastPrice\":1322.714029824941,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.5,\"b\":false,\"otlkMag\":11.211750182374551,\"otlkMagForecast\":37.99994894449196,\"cap\":2126153,\"spreadPerc\":0.9,\"shareTxForMovement\":25106,\"shareTxUntilMovement\":25106,\"totalShares\":124500000,\"maxShares\":24900000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":21730.85527417908,\"lastPrice\":21559.607770522656,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":6.705023832423027,\"otlkMagForecast\":58.282890987146246,\"cap\":70132108,\"spreadPerc\":1,\"shareTxForMovement\":150956,\"shareTxUntilMovement\":150956,\"totalShares\":13800000,\"maxShares\":2800000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":25337.72788411085,\"lastPrice\":25491.186370215095,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":9.041844336567275,\"otlkMagForecast\":59.54897798690102,\"cap\":425432217,\"spreadPerc\":0.2,\"shareTxForMovement\":184708,\"shareTxUntilMovement\":184708,\"totalShares\":17700000,\"maxShares\":3500000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":29,\"lastUpdate\":1709319688291,\"ticksUntilCycle\":43}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"EnableHistorySearch\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":200,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":12525,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#DDDFC5\",\"primary\":\"#CDCFB6\",\"primarydark\":\"#9D9F8C\",\"successlight\":\"#00EF00\",\"success\":\"#00A500\",\"successdark\":\"#007A00\",\"errorlight\":\"#F92672\",\"error\":\"#CA1C5C\",\"errordark\":\"#90274A\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#D3D300\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#00010A\",\"white\":\"#fff\",\"black\":\"#020509\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#8CCF27\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#080C11\",\"backgroundsecondary\":\"#03080F\",\"button\":\"#00010A\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"MonacoCursorStyle\":\"line\",\"MonacoCursorBlinking\":\"blink\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"37","AllGangsSave":"","LastExportBonus":"1709319694226","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}